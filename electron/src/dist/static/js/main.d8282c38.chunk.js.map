{"version":3,"sources":["app/event/Event.ts","app/components/header/Header.tsx","app/components/config/Config.ts","app/components/layer/Layer.ts","app/tools/Tools.ts","app/services/Command.ts","app/components/addServer/AddServer.tsx","app/ws/WebSocket.ts","app/components/keyTree/Tree.ts","app/components/keyTree/KeyTree.tsx","app/transform/Transform.ts","app/components/panel/data/String.tsx","app/components/panel/data/List.tsx","app/components/panel/data/Hash.tsx","app/components/panel/data/Set.tsx","app/components/panel/data/ZSet.tsx","app/components/panel/Panel.tsx","app/components/serverList/ServerList.tsx","app/components/updateServer/UpdateServer.tsx","app/components/progress/Progress.tsx","app/components/addKey/AddKey.tsx","app/pages/index/Index.tsx","app/pages/login/Login.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["events","name","e","this","args","Header","state","date","addKey","Event","emit","className","type","ghost","onClick","PlusOutlined","danger","AlignLeftOutlined","Component","JSON","parse","localStorage","getItem","cfg","setItem","stringify","removeItem","setServerName","db","parseInt","status","Math","random","toString","slice","config","clear","mask","div","document","createElement","style","display","justifyContent","alignItems","width","height","position","top","left","child","appendChild","body","data","s","key","begin","end","res","index","push","response","success","error","isAxiosError","toJSON","console","log","notification","message","destroy","Layer","close","msg","code","v","test","Config","getServerName","getDB","uuid","getUUID","fileName","Axios","url","defaults","baseURL","method","responseType","then","window","URL","createObjectURL","Blob","link","href","setAttribute","click","post","Qs","serverName","serverNameAndDB","Tools","Notification","AddServer","visible","connectType","clusterHostInput","event","host","port","password","master","cluster","setState","add","onOpen","remove","title","placement","closable","onClose","getContainer","destroyOnClose","Group","value","onChange","target","Button","spellCheck","addonBefore","placeholder","addHost","submit","map","i","addonAfter","MinusCircleOutlined","removeHost","splice","createCluster","filter","default","Command","register","getConfig","description","setConfig","ws","isStart","Socket","Global","OnOpen","Emit","AddListener","setStatus","location","hash","OnError","err","OnClose","delStatus","fn","Start","Close","RemoveListener","dataTree","counter","read","length","children","search","prefix","parent","findIndex","id","deleteNode","node","countSub","arr","current","isRead","isActive","isToggled","params","split","temp","arr1","inArr1","inArr","item","isKey","join","count","toggled","active","countAdd","Option","KeyTree","databases","dbSize","selectedNode","shouldRefresh","tree","base","fontSize","whiteSpace","backgroundColor","padding","color","activeLink","DataTree","size","connect","selectDB","disconnect","update","delete","deleteKey","insertKey","activeKey","WebSocket","listen","keys","readDone","updateTree","updateDatabases","connectDefault","configs","allConfig","info","notRead","checkRead","reset","login","setCurrent","delDB","delServerName","delCurrent","x","y","minWidth","maxWidth","bounds","enableResizing","right","disableDragging","listHeight","onSelect","onToggle","animations","refresh","load","setDB","scan","Transform","RString","List","Hash","Set","ZSet","Empty","do","check","select","insert","newKey","seconds","cmd","doPipe","page","curser","k","score","TextArea","String","props","showValue","rename","view","ttl","maskClosable","onOk","renameKey","onCancel","closeRename","okText","cancelText","toUpperCase","openRename","onConfirm","icon","QuestionCircleOutlined","changeView","save","oldKey","list","addRow","addRowValue","len","selectIndex","listIndex","vlist","React","createRef","onScroll","renderItem","Object","assign","background","el","selectItem","prevPage","setPage","go","nextPage","ceil","call","listArray","forceUpdateGrid","closeAddRow","delRow","openAddRow","ref","overscanRowCount","rowCount","rowHeight","rowRenderer","scrollToAlignment","LeftOutlined","RightOutlined","onBlur","showKey","addRowKey","allData","loadAllData","cursor","r","onChangeShowKey","onChangeShowValue","IsFloat","TabPane","Panel","panes","onEdit","targetKey","action","lastIndex","forEach","pane","component","createString","createList","createHash","createZSet","createSet","find","createComponent","content","shift","element","hideAdd","tabBarStyle","margin","destroyInactiveTabPane","animated","tabBarGutter","tab","ServerList","deleteConfig","values","confirm","export","DownloadOutlined","deleteAllConfig","header","setDefault","UpdateServer","field","footer","MProgress","progress","setTimeout","strokeColor","showInfo","strokeWidth","percent","AddKey","keyType","getCurrent","createNormal","createSpecial","Index","Login","LoadingOutlined","App","unlisten","start","getStatus","history","createBrowserHistory","change","path","exact","from","to","Boolean","hostname","match","headers","timeout","interceptors","use","maxCount","duration","createUUID","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d8282c38.chunk.js","sourcesContent":["class Event {\n\tevents: { [key: string]: (...args: any[]) => void } = {};\n\n\tadd(name: string, e: (...args: any[]) => void): string {\n\t\tthis.events[name] = e;\n\t\treturn name;\n\t}\n\n\tremove(name: string) {\n\t\tdelete this.events[name];\n\t}\n\n\temit(name: string, ...args: any[]) {\n\t\tthis.events[name] && this.events[name](...args);\n\t}\n}\n\nexport default new Event();\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./header.scss\";\nimport Event from \"../../event/Event\";\nimport { AlignLeftOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nexport default class Header extends Component {\n\tstate = { date: \"\" };\n\n\taddKey = () => {\n\t\tEvent.emit(\"addKey\");\n\t};\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<Button type=\"link\" ghost onClick={this.addKey}>\n\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => Event.emit(\"openAddServer\")}>\n\t\t\t\t\t\t添加服务器\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" danger ghost onClick={() => Event.emit(\"openServerList\")}>\n\t\t\t\t\t\t<AlignLeftOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { config } from \"../../interface/config\";\n\nclass Config {\n\tgetCurrent() {\n\t\treturn JSON.parse(localStorage.getItem(\"current\") || \"{}\");\n\t}\n\n\tsetCurrent(cfg: config) {\n\t\tlocalStorage.setItem(\"current\", JSON.stringify(cfg));\n\t}\n\n\tdelCurrent() {\n\t\tlocalStorage.removeItem(\"current\");\n\t}\n\n\tsetServerName(setServerName: string) {\n\t\tlocalStorage.setItem(\"serverName\", setServerName);\n\t}\n\n\tgetServerName() {\n\t\treturn localStorage.getItem(\"serverName\");\n\t}\n\n\tdelServerName() {\n\t\tlocalStorage.removeItem(\"serverName\");\n\t}\n\n\tsetDB(db: number) {\n\t\tlocalStorage.setItem(\"db\", `${db}`);\n\t}\n\n\tgetDB() {\n\t\tlet db = localStorage.getItem(\"db\");\n\t\tif (!db) return null;\n\t\treturn parseInt(db);\n\t}\n\n\tdelDB() {\n\t\tlocalStorage.removeItem(\"db\");\n\t}\n\n\tsetStatus(status: any) {\n\t\tlocalStorage.setItem(\"status\", status);\n\t}\n\n\tgetStatus() {\n\t\treturn localStorage.getItem(\"status\");\n\t}\n\n\tdelStatus() {\n\t\tlocalStorage.removeItem(\"status\");\n\t}\n\n\tcreateUUID() {\n\t\tlocalStorage.setItem(\n\t\t\t\"uuid\",\n\t\t\tMath.random()\n\t\t\t\t.toString(16)\n\t\t\t\t.slice(2)\n\t\t);\n\t}\n\n\tgetUUID() {\n\t\treturn localStorage.getItem(\"uuid\");\n\t}\n\n\tallConfig() {\n\t\treturn JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t}\n\n\tgetConfig(name: string): config {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\treturn cfg[name];\n\t}\n\n\tsetConfig(name: string, config: config) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tcfg[name] = config;\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tdeleteConfig(name: string) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tdelete cfg[name];\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tdeleteAllConfig() {\n\t\tlocalStorage.removeItem(\"config\");\n\t}\n\n\tclear() {\n\t\tlocalStorage.clear();\n\t}\n}\n\nexport default new Config();\n","class Layer {\n\tmask: any;\n\n\tconstructor() {\n\t\tlet div = document.createElement(\"div\");\n\t\tdiv.style.display = \"flex\";\n\t\tdiv.style.justifyContent = \"center\";\n\t\tdiv.style.alignItems = \"center\";\n\t\tdiv.style.width = \"100vw\";\n\t\tdiv.style.height = \"100vh\";\n\t\tdiv.style.position = \"absolute\";\n\t\tdiv.style.top = \"0\";\n\t\tdiv.style.left = \"0\";\n\t\tdiv.style.display = \"none\";\n\t\tthis.mask = div;\n\n\t\tlet child = document.createElement(\"div\");\n\t\tchild.className = \"load-mask-child\";\n\n\t\tdiv.appendChild(child);\n\t\tdocument.body.appendChild(div);\n\t}\n\n\tload() {\n\t\tthis.mask.style.display = \"flex\";\n\t}\n\n\tclose() {\n\t\tthis.mask.style.display = \"none\";\n\t}\n}\n\nexport default new Layer();\n","import { notification, message } from \"antd\";\nimport Layer from \"../components/layer/Layer\";\nclass Tools {\n\tQueryString(data: { [key: string]: string }) {\n\t\tlet s = \"\";\n\t\tfor (const key in data) {\n\t\t\ts += `${key}=${data[key]}&`;\n\t\t}\n\t\treturn s.slice(0, -1);\n\t}\n\n\tRange(begin: number, end: number): number[] {\n\t\tlet res = [];\n\t\tfor (let index = begin; index < end; index++) {\n\t\t\tres.push(index);\n\t\t}\n\t\treturn res;\n\t}\n\n\tNotification(response: any, success?: any, error?: any) {\n\t\tif (response.isAxiosError) {\n\t\t\tlet error = response.toJSON();\n\t\t\tconsole.log(error);\n\t\t\tnotification.error({ message: error.message });\n\t\t\tmessage.destroy();\n\t\t\tLayer.close();\n\t\t\tthrow error;\n\t\t}\n\t\tsuccess = success || response.data.msg;\n\t\terror = error || response.data.msg;\n\t\tif (response.data.code === 200) {\n\t\t\tconsole.log(response.data);\n\t\t\tnotification.success({ message: success });\n\t\t\treturn true;\n\t\t} else {\n\t\t\tnotification.error({ message: error });\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tIsFloat(v: any) {\n\t\tvar reg = /^[0-9]+\\.?[0-9]*$/;\n\t\tif (reg.test(v)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport default new Tools();\n","import { config } from \"../interface/config\";\nimport Axios from \"axios\";\nimport Qs from \"querystring\";\nimport Tools from \"../tools/Tools\";\nimport Config from \"../components/config/Config\";\nimport { notification } from \"antd\";\n\nclass Command {\n\tserverNameAndDB(): any {\n\t\tlet name = Config.getServerName();\n\t\tlet db = Config.getDB();\n\t\tif (name === null) return notification.error({ message: \"请连接服务!\" });\n\t\tif (db === null) return notification.error({ message: \"请选择DB!\" });\n\t\treturn { name, db };\n\t}\n\n\tuuid() {\n\t\tlet uuid = Config.getUUID();\n\t\tif (!uuid) return notification.error({ message: \"uuid is empty!\" });\n\t\treturn { uuid };\n\t}\n\n\tasync export(fileName: string, data: any) {\n\t\treturn Axios({\n\t\t\turl: `${Axios.defaults.baseURL}/redis/export/file?fileName=${fileName}&data=${data}`,\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"blob\" // important\n\t\t}).then(response => {\n\t\t\tconst url = window.URL.createObjectURL(new Blob([response.data]));\n\t\t\tconst link = document.createElement(\"a\");\n\t\t\tlink.href = url;\n\t\t\tlink.setAttribute(\"download\", fileName);\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t});\n\t}\n\n\tasync register(type: string, cfg: config) {\n\t\treturn await Axios.post(`/redis/register/${type}`, Qs.stringify({ ...this.uuid(), ...cfg }));\n\t}\n\n\tasync disconnect(serverName: string) {\n\t\treturn await Axios.post(`/redis/db/disconnect`, Qs.stringify({ name: serverName, ...this.uuid() }));\n\t}\n\n\tasync selectDB(serverName: string, db: any) {\n\t\treturn await Axios.post(`/redis/db/select`, Qs.stringify({ name: serverName, db, ...this.uuid() }));\n\t}\n\n\tasync scan() {\n\t\tlet response = await Axios.post(`/redis/db/scan`, Qs.stringify({ ...this.serverNameAndDB(), ...this.uuid() }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync type(key: string) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/type`,\n\t\t\tQs.stringify({ ...this.serverNameAndDB(), key: key, ...this.uuid() })\n\t\t);\n\t\treturn response.data.msg;\n\t}\n\n\tasync do(key: string, args: any[]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\t...this.serverNameAndDB(),\n\t\t\t\t...this.uuid(),\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n\n\tasync doPipe(key: string, args: any[][]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\t...this.serverNameAndDB(),\n\t\t\t\t...this.uuid(),\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n}\n\nexport default new Command();\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addServer.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\n\nexport default class AddServer extends Component {\n\tstate = { visible: false, connectType: \"normal\", clusterHostInput: null };\n\tevent!: string;\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.event = Event.add(\"openAddServer\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(this.event);\n\t}\n\n\tname = \"\";\n\thost = \"\";\n\tport = \"\";\n\tpassword = \"\";\n\tmaster = \"\";\n\tcluster: any[] = [];\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"添加服务器\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"400px\"}\n\t\t\t\tdestroyOnClose\n\t\t\t\tclassName=\"add-server\"\n\t\t\t>\n\t\t\t\t<Radio.Group\n\t\t\t\t\tvalue={this.state.connectType}\n\t\t\t\t\tonChange={value => this.setState({ connectType: value.target.value })}\n\t\t\t\t>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tonChange={value => (this.name = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.connectType === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tonChange={value => (this.host = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.connectType === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tonChange={value => (this.port = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tonChange={value => (this.master = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tonChange={value => (this.password = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t创建\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tonChange={value => {\n\t\t\t\t\tthis.cluster[i] = value.target.value;\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tlet data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\"),\n\t\t\tconnectType: this.state.connectType,\n\t\t\tdefault: false\n\t\t};\n\n\t\tlet response = await Command.register(this.state.connectType, data);\n\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tasync submit() {\n\t\tvar data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tconnectType: this.state.connectType,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\"),\n\t\t\tdefault: false\n\t\t};\n\n\t\tif (this.name === \"\") return notification.error({ message: `服务器名不能为空!` });\n\n\t\tlet cfg = Config.getConfig(this.name);\n\t\tif (cfg) return notification.error({ message: \"ERROR\", description: `${this.name} 已经存在!` });\n\n\t\tConfig.setConfig(this.name, data);\n\n\t\tthis.onClose();\n\n\t\tEvent.emit(\"addServer\", this.name);\n\n\t\treturn notification.success({ message: \"SUCCESS\", description: \"创建成功\" });\n\t}\n}\n","import Socket from \"lows\";\nimport Config from \"../components/config/Config\";\n\nclass WebSocket {\n\tws: Socket;\n\tisStart = false;\n\n\tconstructor() {\n\t\tthis.ws = new Socket({\n\t\t\thost: \"http://127.0.0.1\",\n\t\t\tport: \"12389\"\n\t\t});\n\n\t\tthis.ws.Global = { uuid: Config.getUUID() };\n\n\t\tthis.ws.OnOpen = () => {\n\t\t\tconsole.log(\"on open\");\n\t\t\tthis.ws.Emit(\"/redis/login/login\", {});\n\t\t};\n\n\t\tthis.ws.AddListener(\"/redis/login/login\", (e: any, data: any) => {\n\t\t\tConfig.setStatus(\"ready\");\n\t\t\twindow.location.hash = \"#/index\";\n\t\t});\n\n\t\tthis.ws.OnError = (err: any) => {\n\t\t\tconsole.log(\"on error\", err);\n\t\t};\n\n\t\tthis.ws.OnClose = () => {\n\t\t\tConfig.delStatus();\n\t\t\twindow.location.hash = \"#/login\";\n\t\t\tconsole.log(\"on close\");\n\t\t};\n\t}\n\n\tstart(fn: any) {\n\t\t!this.isStart && this.ws.Start(fn);\n\t\tthis.isStart = true;\n\t}\n\n\tclose() {\n\t\tthis.isStart && this.ws.Close();\n\t\tthis.isStart = false;\n\t}\n\n\tlisten(...args: any[]) {\n\t\tthis.ws.AddListener(...args);\n\t}\n\n\tremove(...args: any[]) {\n\t\tthis.ws.RemoveListener(...args);\n\t}\n}\n\nexport default new WebSocket();\n","class Tree {\n\tdataTree: any[] = [];\n\tcounter = 0;\n\n\tclear() {\n\t\tthis.dataTree = [];\n\t\tthis.counter = 0;\n\t}\n\n\tcheckRead(data: any[]) {\n\t\tlet res: any[] = [];\n\t\tlet read = (data: any[]) => {\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i].children) {\n\t\t\t\t\tread(data[i].children);\n\t\t\t\t} else {\n\t\t\t\t\tif (!data[i].read) {\n\t\t\t\t\t\tres.push(data[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[i].read = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tread(data);\n\t\treturn res;\n\t}\n\n\tsearch(data: any[], key: string): any {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i].children) {\n\t\t\t\tlet res = this.search(data[i].children, key);\n\t\t\t\tif (res) return res;\n\t\t\t} else {\n\t\t\t\tif (data[i].prefix === key) {\n\t\t\t\t\treturn data[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tdeleteNode(data: any) {\n\t\tif (!data.parent) {\n\t\t\tlet index = this.dataTree.findIndex((v: any) => v.id === data.id);\n\t\t\tthis.dataTree.splice(index, 1);\n\t\t\treturn;\n\t\t}\n\t\tlet index = data.parent.children.findIndex((v: any) => v.id === data.id);\n\t\tdata.parent.children.splice(index, 1);\n\t\tif (data.parent.children.length === 0) this.deleteNode(data.parent);\n\t}\n\n\tdeleteKey(key: any) {\n\t\tvar node = this.search(this.dataTree, key);\n\t\tif (node) {\n\t\t\tthis.countSub(node);\n\t\t\tthis.deleteNode(node);\n\t\t}\n\t}\n\n\tinArr(arr: any, i: any) {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index][\"i\"] === i && arr[index].children) return arr[index];\n\t\t}\n\t\treturn false;\n\t}\n\n\tinArr1(arr: any, i: any): any {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index].i === i && !arr[index].children) return { parent: arr, current: arr[index] };\n\t\t}\n\t\treturn false;\n\t}\n\n\taddKey(key: string, isRead?: boolean, isActive?: boolean, isToggled?: boolean) {\n\t\tlet params = key.split(\":\");\n\t\tlet temp = this.dataTree;\n\t\tvar parent = null;\n\t\tfor (let index = 0; index < params.length; index++) {\n\t\t\tif (params.length === 1) {\n\t\t\t\tvar arr1 = this.inArr1(temp, params[index]);\n\t\t\t\tif (arr1) {\n\t\t\t\t\tarr1.current.read = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.length !== 1) {\n\t\t\t\tvar arr = this.inArr(temp, params[index]);\n\t\t\t\tif (arr) {\n\t\t\t\t\tif (index !== params.length - 1) {\n\t\t\t\t\t\tparent = arr;\n\t\t\t\t\t\ttemp = arr.children;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (index === params.length - 1) {\n\t\t\t\t\tfor (let i = 0; i < temp.length; i++) {\n\t\t\t\t\t\tif (temp[i].name === key) {\n\t\t\t\t\t\t\ttemp[i].read = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet item: any = {\n\t\t\t\tid: this.counter++,\n\t\t\t\tname: index === params.length - 1 ? key : params[index],\n\t\t\t\tisKey: index === params.length - 1,\n\t\t\t\ti: params[index],\n\t\t\t\tprefix: params.slice(0, index + 1).join(\":\"),\n\t\t\t\tchildren: index === params.length - 1 ? null : [],\n\t\t\t\tread: isRead,\n\t\t\t\tcount: 0,\n\t\t\t\tparent: parent,\n\t\t\t\ttoggled: isToggled,\n\t\t\t\tactive: isActive\n\t\t\t};\n\n\t\t\tif (index === params.length - 1) this.countAdd(item);\n\n\t\t\tparent = item;\n\n\t\t\ttemp.push(item);\n\t\t\ttemp = item.children;\n\t\t}\n\t}\n\n\tcountAdd(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count++;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countAdd(data.parent);\n\t\t}\n\t}\n\n\tcountSub(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count--;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countSub(data.parent);\n\t\t}\n\t}\n}\n\nexport default new Tree();\n","import React, { Component } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport \"./keyTree.scss\";\nimport { Select, Button, message } from \"antd\";\nimport Tools from \"../../tools/Tools\";\nimport Event from \"../../event/Event\";\nimport Config from \"../config/Config\";\nimport WebSocket from \"../../ws/WebSocket\";\nimport { Treebeard } from \"react-treebeard-ts\";\nimport Command from \"../../services/Command\";\nimport Layer from \"../layer/Layer\";\nimport DataTree from \"./Tree\";\n\nconst Option = Select.Option;\n\nexport default class KeyTree extends Component {\n\tstate = {\n\t\tdatabases: [] as any[],\n\t\tdataTree: [] as any[],\n\t\tdb: \"请选择DB\" as any\n\t};\n\n\tserverName = \"\";\n\tconnectType = \"\";\n\tdbSize = 0;\n\tselectedNode: any = null;\n\tshouldRefresh = false;\n\n\t// constructor(props: any) {\n\t// \tsuper(props);\n\t// }\n\n\tupdateTree() {\n\t\tthis.setState({ dataTree: DataTree.dataTree });\n\t}\n\n\tupdateDatabases() {\n\t\tlet { databases } = this.state;\n\t\tfor (let i = 0; i < databases.length; i++) {\n\t\t\tif (databases[i].key === this.state.db) {\n\t\t\t\tdatabases[i].size = this.dbSize;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ databases: databases });\n\t}\n\n\tasync componentDidMount() {\n\t\tEvent.add(\"connect\", (serverName, connectType, fn) => this.connect(serverName, connectType, fn));\n\t\tEvent.add(\"selectDB\", (db, fn) => this.selectDB(db, fn));\n\t\tEvent.add(\"disconnect\", serverName => this.disconnect(serverName));\n\t\tEvent.add(\"update\", serverName => this.update(serverName));\n\t\tEvent.add(\"delete\", serverName => this.delete(serverName));\n\t\tEvent.add(\"deleteKey\", (key, fn) => this.deleteKey(key, fn));\n\t\tEvent.add(\"insertKey\", (key, isActive, fn) => this.insertKey(key, isActive, fn));\n\t\tEvent.add(\"activeKey\", (key, isActive) => this.activeKey(key, isActive));\n\n\t\tWebSocket.listen(\"scan\", (e: any, v: any) => {\n\t\t\tlet keys = v.keys || [];\n\n\t\t\tEvent.emit(\"progress\", (v.current / v.dbSize) * 100);\n\n\t\t\tfor (let index = 0; index < keys.length; index++) {\n\t\t\t\tDataTree.addKey(keys[index], this.shouldRefresh);\n\t\t\t}\n\n\t\t\tthis.dbSize = v.dbSize;\n\n\t\t\t// read done\n\t\t\tif (v.dbSize === v.current) {\n\t\t\t\tEvent.emit(\"progress\", 0);\n\t\t\t\tthis.readDone();\n\t\t\t}\n\t\t\t// render tree\n\t\t\tthis.updateTree();\n\n\t\t\t// render databases\n\t\t\tthis.updateDatabases();\n\t\t});\n\n\t\tthis.connectDefault();\n\t}\n\n\tconnectDefault() {\n\t\tvar configs = Config.allConfig();\n\n\t\tfor (const key in configs) {\n\t\t\tlet config = configs[key];\n\t\t\tif (config.default) {\n\t\t\t\tEvent.emit(\"connect\", config.name, config.connectType, () => {\n\t\t\t\t\tEvent.emit(\"selectDB\", 0);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tactiveKey(key: string, isActive: boolean) {\n\t\tvar node = DataTree.search(DataTree.dataTree, key);\n\n\t\tif (!node) return;\n\t\tthis.selectedNode.active = false;\n\n\t\tthis.selectedNode = node;\n\t\tthis.selectedNode.active = isActive;\n\t\tif (isActive) {\n\t\t\tvar temp = node;\n\t\t\twhile (1) {\n\t\t\t\tif (!temp.parent) break;\n\t\t\t\ttemp.parent.toggled = true;\n\t\t\t\ttemp = temp.parent;\n\t\t\t}\n\t\t}\n\t\tthis.updateTree();\n\t}\n\n\tdeleteKey(key: string, fn: any) {\n\t\tDataTree.deleteKey(key);\n\t\tthis.dbSize--;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\tinsertKey(key: string, isActive: boolean, fn: any) {\n\t\tDataTree.addKey(key, this.shouldRefresh, isActive);\n\t\tthis.dbSize++;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\treadDone() {\n\t\tmessage.info(\"数据加载成功\");\n\t\tif (this.shouldRefresh) {\n\t\t\tvar notRead = DataTree.checkRead(DataTree.dataTree);\n\t\t\tfor (let i = 0; i < notRead.length; i++) {\n\t\t\t\tDataTree.deleteKey(notRead[i].name);\n\t\t\t}\n\t\t}\n\t\tthis.shouldRefresh = false;\n\t\tLayer.close();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"connect\");\n\t\tEvent.remove(\"selectDB\");\n\t\tEvent.remove(\"disconnect\");\n\t\tEvent.remove(\"update\");\n\t\tEvent.remove(\"delete\");\n\t\tEvent.remove(\"deleteKey\");\n\t\tEvent.remove(\"insertKey\");\n\t\tEvent.remove(\"activeKey\");\n\t\tWebSocket.remove(\"scan\");\n\t\tDataTree.clear();\n\t}\n\n\tasync connect(serverName: any, connectType: string, fn?: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.connectType = connectType;\n\t\tthis.serverName = serverName;\n\t\tlet res = await this.login();\n\t\tif (!res) return;\n\n\t\tConfig.setServerName(serverName);\n\n\t\tfor (let i = 0; i < parseInt(res); i++) {\n\t\t\tthis.state.databases.push({ title: `db-${i}`, key: i, size: 0 });\n\t\t}\n\n\t\tmessage.success(\"连接成功\");\n\n\t\tConfig.setCurrent(Config.getConfig(serverName));\n\n\t\tthis.updateDatabases();\n\n\t\tfn && fn();\n\t}\n\n\treset() {\n\t\tDataTree.clear();\n\t\tthis.serverName = \"\";\n\t\tthis.connectType = \"\";\n\t\tthis.dbSize = 0;\n\t\tthis.selectedNode = null;\n\t\tthis.shouldRefresh = false;\n\t\tthis.setState({ databases: [], dataTree: [], db: \"请选择DB\" });\n\t\tConfig.delDB();\n\t\tConfig.delServerName();\n\t\tConfig.delCurrent();\n\t\tEvent.emit(\"resetPanel\");\n\t}\n\n\tdisconnect(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\tupdate(serverName: any) {\n\t\tEvent.emit(\"openUpdateServer\", serverName);\n\t}\n\n\tdelete(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Rnd\n\t\t\t\tdefault={{ height: \"100%\", width: \"250px\", x: 0, y: 0 }}\n\t\t\t\tminWidth={250}\n\t\t\t\tmaxWidth={500}\n\t\t\t\tbounds=\".content\"\n\t\t\t\tenableResizing={{ right: true }}\n\t\t\t\tdisableDragging={true}\n\t\t\t\tclassName=\"key-tree\"\n\t\t\t>\n\t\t\t\t<div className=\"select-panel\">\n\t\t\t\t\t{this.state.databases.length > 0 ? (\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.db}\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\tlistHeight={600}\n\t\t\t\t\t\t\tonSelect={value => this.selectDB(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.databases.map(v => (\n\t\t\t\t\t\t\t\t<Option key={v.key} value={v.key}>\n\t\t\t\t\t\t\t\t\t{v.title} {v.size ? `(${v.size})` : \"\"}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"data-tree\">\n\t\t\t\t\t{this.state.dataTree.length > 0 ? (\n\t\t\t\t\t\t<Treebeard\n\t\t\t\t\t\t\tdata={this.state.dataTree}\n\t\t\t\t\t\t\tonToggle={(node, toggled) => this.onToggle(node, toggled)}\n\t\t\t\t\t\t\tstyle={this.style}\n\t\t\t\t\t\t\tanimations={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t{this.state.dataTree.length > 0 ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{this.serverName} {this.connectType}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.refresh()}>\n\t\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</Rnd>\n\t\t);\n\t}\n\n\trefresh(): void {\n\t\tthis.shouldRefresh = true;\n\t\tthis.selectDB(this.state.db);\n\t}\n\n\tstyle: any = {\n\t\ttree: {\n\t\t\tbase: {\n\t\t\t\tfontSize: \"12px\",\n\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\tbackgroundColor: \"#ffffff\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tpadding: \"5px\"\n\t\t\t},\n\t\t\tnode: { base: { color: \"red\" }, activeLink: { backgroundColor: \"#bae7ff\" } }\n\t\t}\n\t};\n\n\tonToggle(node: import(\"react-treebeard-ts\").TreeNode, toggled: boolean): void {\n\t\tif (this.selectedNode) {\n\t\t\tthis.selectedNode.active = false;\n\t\t}\n\n\t\tthis.selectedNode = node;\n\n\t\tthis.selectedNode.active = true;\n\n\t\tif (this.selectedNode.children) {\n\t\t\tthis.selectedNode.toggled = toggled;\n\t\t} else {\n\t\t\tthis.onSelect(node.name);\n\t\t}\n\n\t\tthis.updateTree();\n\t}\n\n\tasync onSelect(key: string) {\n\t\tlet type = await Command.type(key);\n\t\tEvent.emit(\"selectKey\", this.serverName, type, key);\n\t}\n\n\tasync login() {\n\t\tLayer.load();\n\t\tlet cfg = Config.getConfig(this.serverName);\n\t\tlet response = await Command.register(this.connectType, cfg);\n\t\tLayer.close();\n\t\tif (response.data.code !== 200) {\n\t\t\tTools.Notification(response);\n\t\t\treturn false;\n\t\t}\n\t\treturn response.data.msg[1];\n\t}\n\n\tasync selectDB(db: any, fn?: any) {\n\t\tif (this.state.db !== db) DataTree.clear();\n\t\tLayer.load();\n\t\tthis.state.db = db;\n\t\tlet response = await Command.selectDB(this.serverName, db);\n\t\tif (response.data.code !== 200) return Tools.Notification(response);\n\t\tConfig.setDB(db);\n\t\tawait Command.scan();\n\t\tfn && fn();\n\t}\n}\n","import { notification } from \"antd\";\nimport Command from \"../services/Command\";\n\nclass Transform {\n\tcheck(type: string): any {\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\treturn new RString();\n\t\t\tcase \"list\":\n\t\t\t\treturn new List();\n\t\t\tcase \"hash\":\n\t\t\t\treturn new Hash();\n\t\t\tcase \"set\":\n\t\t\t\treturn new Set();\n\t\t\tcase \"zset\":\n\t\t\t\treturn new ZSet();\n\t\t\tdefault:\n\t\t\t\tnotification.error({ message: `Unsupported type ${type}` });\n\t\t\t\treturn new Empty();\n\t\t}\n\t}\n\n\tselect(type: string, key: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).select(key, ...args));\n\t}\n\n\tupdate(type: string, key: string, value: any, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).update(key, value, ...args));\n\t}\n\n\tinsert(type: string, key: string, value: any, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).insert(key, value, ...args));\n\t}\n\n\tdelete(type: string, key: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).delete(key, ...args));\n\t}\n\n\tcall(type: string, key: string, method: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type)[method](key, ...args));\n\t}\n\n\tttl(key: string) {\n\t\treturn this.do(key, [\"TTL\", key]);\n\t}\n\n\trename(key: string, newKey: string) {\n\t\treturn this.do(key, [\"RENAME\", key, newKey]);\n\t}\n\n\texpire(key: string, seconds: number) {\n\t\treturn this.do(key, [\"EXPIRE\", key, seconds]);\n\t}\n\n\tasync doPipe(key: string, cmd: any[][]) {\n\t\treturn await Command.doPipe(key, cmd);\n\t}\n\n\tasync do(key: string, cmd: any[]) {\n\t\treturn await Command.do(key, cmd);\n\t}\n}\n\nclass RString {\n\tselect(key: string) {\n\t\treturn [\"GET\", key];\n\t}\n\tupdate(key: string, value: string) {\n\t\treturn [\"SET\", key, value];\n\t}\n\tinsert(key: string, value: string) {\n\t\treturn [\"SET\", key, value];\n\t}\n\tdelete(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass List {\n\tlen(key: string) {\n\t\treturn [\"LLEN\", key];\n\t}\n\n\tinsert(key: string, value: string) {\n\t\treturn [\"LPUSH\", key, value];\n\t}\n\n\tselect(key: string, page: number, size: number) {\n\t\tlet skip = (page - 1) * size;\n\t\treturn [\"LRANGE\", key, skip, size * page - 1];\n\t}\n\n\tupdate(key: string, index: number, value: string) {\n\t\treturn [\"LSET\", key, index, value];\n\t}\n\n\tdelete(key: string, value: string) {\n\t\treturn [\"LREM\", key, 0, value];\n\t}\n\n\tremove(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass Hash {\n\tselect(key: string, curser: number) {\n\t\treturn [\"HSCAN\", key, curser, \"COUNT\", 10000];\n\t}\n\n\tlen(key: string) {\n\t\treturn [\"HLEN\", key];\n\t}\n\n\tupdate(key: string, k: string, v: string) {\n\t\treturn [\"HSET\", key, k, v];\n\t}\n\n\tinsert(key: string, k: string, v: string) {\n\t\treturn [\"HSET\", key, k, v];\n\t}\n\n\tdelete(key: string, k: string) {\n\t\treturn [\"HDEL\", key, k];\n\t}\n\n\tremove(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass Set {\n\tlen(key: string) {\n\t\treturn [\"SCARD\", key];\n\t}\n\n\tinsert(key: string, value: string) {\n\t\treturn [\"SADD\", key, value];\n\t}\n\n\tselect(key: string, curser: number) {\n\t\treturn [\"SSCAN\", key, curser, \"COUNT\", 10000];\n\t}\n\n\tupdate(key: string, value: string) {\n\t\treturn [\"SADD\", key, value];\n\t}\n\n\tdelete(key: string, value: string) {\n\t\treturn [\"SREM\", key, value];\n\t}\n\n\tremove(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass ZSet {\n\tlen(key: string) {\n\t\treturn [\"ZCARD\", key];\n\t}\n\n\tinsert(key: string, score: number, value: string) {\n\t\treturn [\"ZADD\", key, score, value];\n\t}\n\n\tselect(key: string, page: number, size: number) {\n\t\tlet skip = (page - 1) * size;\n\t\treturn [\"ZRANGE\", key, skip, size * page - 1, \"WITHSCORES\"];\n\t}\n\n\tupdate(key: string, score: number, value: string) {\n\t\treturn [\"ZADD\", key, score, value];\n\t}\n\n\tdelete(key: string, value: string) {\n\t\treturn [\"ZREM\", key, value];\n\t}\n\n\tremove(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass Empty {\n\tselect() {}\n}\n\nexport default new Transform();\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./string.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class String extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = { key: \"\", showValue: \"\", rename: false, view: \"显示格式\" };\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\n\tasync select(type: string, key: string) {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet value = await Transform.select(type, key);\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\t\tthis.setState({ key: key, showValue: value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"string\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要保存吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.save()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"primary\">保存</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\tasync save() {\n\t\tlet r = await Transform.update(this.type, this.key, this.state.showValue);\n\t\tif (!r) return;\n\t\tmessage.success(\"保存成功\");\n\t}\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.delete(this.type, this.state.key);\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey, true);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./list.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class List extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = {\n\t\tkey: \"\",\n\t\tshowValue: \"\",\n\t\tlist: [] as any[],\n\t\tpage: 1,\n\t\trename: false,\n\t\taddRow: false,\n\t\taddRowValue: \"\",\n\t\tview: \"显示格式\"\n\t};\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tsize = 1000;\n\tlen = 0;\n\n\tselectIndex = 0;\n\tpage = 1;\n\tlistIndex = 0;\n\n\tasync select(type: string, key: string): Promise<void> {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.call(type, key, \"len\");\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\n\t\tthis.page = this.state.page;\n\t\tlet listArray = await Transform.select(type, key, this.state.page, this.size);\n\t\tif (listArray === false) return;\n\n\t\tif (this.selectIndex >= listArray.length - 1) {\n\t\t\tif (listArray.length === 0) {\n\t\t\t\tif (this.state.page > 1) {\n\t\t\t\t\tthis.selectIndex = 0;\n\t\t\t\t\tthis.state.page--;\n\t\t\t\t\treturn await this.select(type, key);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.selectIndex = listArray.length - 1;\n\t\t\t}\n\t\t}\n\n\t\tif (this.selectIndex >= listArray.length - 1) this.selectIndex = listArray.length - 1;\n\t\tthis.listIndex = (this.page - 1) * this.size + this.selectIndex;\n\n\t\tlet { list } = this.state;\n\t\tlist = [];\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ value: listArray[i], select: i === this.selectIndex });\n\t\t}\n\n\t\tthis.setState({ key, list, showValue: listArray[this.selectIndex] }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\tonScroll = (value: any) => {\n\t\t// console.log(value);\n\t\t// clientHeight + scrollTop = scrollHeight\n\t};\n\n\trenderItem = (value: any) => {\n\t\tif (value.index > this.state.list.length - 1) return;\n\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"key\">{(this.page - 1) * this.size + value.index + 1}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.listIndex = (this.page - 1) * this.size + value.index;\n\n\t\tthis.setState({ list, showValue: list[value.index].value }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tasync delRow() {\n\t\tif (this.len === 1) return this.deleteKey();\n\t\tlet u = await Transform.update(this.type, this.key, this.listIndex, \"@--LEMO-YXK--@\");\n\t\tif (!u) return;\n\t\tlet d = await Transform.delete(this.type, this.key, \"@--LEMO-YXK--@\");\n\t\tif (!d) return;\n\n\t\tif (this.listIndex === this.len - 1) {\n\t\t\tthis.selectIndex--;\n\t\t\tthis.listIndex--;\n\t\t}\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"删除成功!\");\n\t}\n\n\tasync addRow() {\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.addRowValue);\n\t\tif (!r) return;\n\n\t\tthis.state.addRowValue = \"\";\n\t\tthis.selectIndex++;\n\t\tthis.listIndex++;\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"添加成功!\");\n\t\tthis.closeAddRow();\n\t}\n\n\tprevPage = () => {\n\t\tif (this.state.page <= 1 || !this.state.page) return;\n\t\tthis.state.page--;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tnextPage = () => {\n\t\tif (this.state.page >= Math.ceil(this.len / this.size) || !this.state.page) return;\n\t\tthis.state.page++;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tgo = () => {\n\t\tthis.select(this.type, this.key);\n\t};\n\n\tsetPage(page: any) {\n\t\tif (page === \"\") return this.setState({ page });\n\t\tpage = parseInt(page) || 1;\n\t\tif (page < 1 || page > Math.ceil(this.len / this.size)) return;\n\t\tthis.setState({ page });\n\t}\n\n\tasync save() {\n\t\tlet r = await Transform.update(this.type, this.key, this.listIndex, this.state.showValue);\n\t\tif (!r) return;\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].value = this.state.showValue;\n\t\tthis.setState({ list }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.call(this.type, this.state.key, \"remove\");\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey, true);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tcloseAddRow(): void {\n\t\tthis.setState({ addRow: false });\n\t}\n\n\topenAddRow(): void {\n\t\tthis.setState({ addRow: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"list\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.addRow}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.addRow()}\n\t\t\t\t\tonCancel={() => this.closeAddRow()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.addRowValue}\n\t\t\t\t\t\tonChange={value => this.setState({ addRowValue: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要删除 ${this.state.showValue} 吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.delRow()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button>删除行</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t\t<Button onClick={() => this.openAddRow()}>添加行</Button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.state.list.length}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\t// scrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"end\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.onScroll}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonBlur={() => this.setPage(this.state.page || this.page)}\n\t\t\t\t\t\t\t\tvalue={this.state.page}\n\t\t\t\t\t\t\t\tonChange={value => this.setPage(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要保存吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.save()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button type=\"primary\">保存</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./hash.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class Hash extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAllData(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = {\n\t\tkey: \"\",\n\t\tshowValue: \"\",\n\t\tshowKey: \"\",\n\t\tlist: [] as any[],\n\t\tpage: 1,\n\t\trename: false,\n\t\taddRow: false,\n\t\taddRowValue: \"\",\n\t\taddRowKey: \"\",\n\t\tview: \"显示格式\"\n\t};\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tsize = 1000;\n\tlen = 0;\n\n\tselectIndex = 0;\n\tpage = 1;\n\tlistIndex = 0;\n\n\tallData: any[] = [];\n\n\tasync loadAllData(type: string, key: string) {\n\t\tthis.allData = [];\n\t\tvar cursor = 0;\n\t\tvar res: any = {};\n\t\twhile (1) {\n\t\t\tlet r = await Transform.select(type, key, cursor);\n\t\t\tif (!r) return;\n\t\t\tcursor = parseInt(r[0]);\n\t\t\tfor (let i = 0; i < r[1].length; i += 2) {\n\t\t\t\tconst key = r[1][i];\n\t\t\t\tconst value = r[1][i + 1];\n\t\t\t\tres[key] = value;\n\t\t\t}\n\t\t\tif (cursor === 0) break;\n\t\t}\n\t\tfor (const key in res) {\n\t\t\tthis.allData.push({ key: key, value: res[key] });\n\t\t}\n\n\t\tthis.select(type, key);\n\t}\n\n\tasync select(type: string, key: string): Promise<void> {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.call(type, key, \"len\");\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\n\t\tthis.page = this.state.page;\n\t\tlet listArray = this.allData.slice((this.page - 1) * this.size, (this.page - 1) * this.size + this.size);\n\n\t\tif (this.selectIndex >= listArray.length - 1) {\n\t\t\tif (listArray.length === 0) {\n\t\t\t\tif (this.state.page > 1) {\n\t\t\t\t\tthis.selectIndex = 0;\n\t\t\t\t\tthis.state.page--;\n\t\t\t\t\treturn await this.select(type, key);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.selectIndex = listArray.length - 1;\n\t\t\t}\n\t\t}\n\n\t\tif (this.selectIndex >= listArray.length - 1) this.selectIndex = listArray.length - 1;\n\t\tthis.listIndex = (this.page - 1) * this.size + this.selectIndex;\n\n\t\tlet { list } = this.state;\n\t\tlist = [];\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ key: listArray[i].key, value: listArray[i].value, select: i === this.selectIndex });\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{ key, list, showValue: listArray[this.selectIndex].value, showKey: listArray[this.selectIndex].key },\n\t\t\t() => {\n\t\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t\t}\n\t\t);\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\tonScroll = (value: any) => {\n\t\t// console.log(value);\n\t\t// clientHeight + scrollTop = scrollHeight\n\t};\n\n\trenderItem = (value: any) => {\n\t\tif (value.index > this.state.list.length - 1) return;\n\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"i\">{(this.page - 1) * this.size + value.index + 1}</div>\n\t\t\t\t<div className=\"key\">{this.state.list[value.index].key}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.listIndex = (this.page - 1) * this.size + value.index;\n\n\t\tthis.setState({ list, showValue: list[value.index].value, showKey: list[value.index].key }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tasync delRow() {\n\t\tlet item = this.state.list[this.selectIndex];\n\t\tif (this.len === 1) return this.deleteKey();\n\t\tlet d = await Transform.delete(this.type, this.key, item.key);\n\t\tif (d === false) return;\n\n\t\tthis.allData.splice(this.listIndex, 1);\n\n\t\tif (this.listIndex === this.len - 1) {\n\t\t\tthis.selectIndex--;\n\t\t\tthis.listIndex--;\n\t\t}\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"删除成功!\");\n\t}\n\n\tasync addRow() {\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.addRowKey, this.state.addRowValue);\n\t\tif (r === false) return;\n\t\tif (r === 0) {\n\t\t\tthis.filter(this.state.addRowKey);\n\t\t}\n\n\t\tthis.allData.splice(this.listIndex, 0, { value: this.state.addRowValue, key: this.state.addRowKey });\n\n\t\tthis.state.addRowValue = \"\";\n\t\tthis.state.addRowKey = \"\";\n\t\tthis.selectIndex++;\n\t\tthis.listIndex++;\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"添加成功!\");\n\t\tthis.closeAddRow();\n\t}\n\n\tprevPage = () => {\n\t\tif (this.state.page <= 1 || !this.state.page) return;\n\t\tthis.state.page--;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tnextPage = () => {\n\t\tif (this.state.page >= Math.ceil(this.len / this.size) || !this.state.page) return;\n\t\tthis.state.page++;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tgo = () => {\n\t\tthis.select(this.type, this.key);\n\t};\n\n\tsetPage(page: any) {\n\t\tif (page === \"\") return this.setState({ page });\n\t\tpage = parseInt(page) || 1;\n\t\tif (page < 1 || page > Math.ceil(this.len / this.size)) return;\n\t\tthis.setState({ page });\n\t}\n\n\tfilter(key: string) {\n\t\tfor (let i = 0; i < this.allData.length; i++) {\n\t\t\tconst element = this.allData[i];\n\t\t\tif (element.key === key) {\n\t\t\t\tthis.allData.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync save() {\n\t\tlet item = this.state.list[this.selectIndex];\n\n\t\t// delete\n\t\tlet d = await Transform.delete(this.type, this.key, item.key);\n\t\tif (d === false) return;\n\n\t\tthis.allData.splice(this.listIndex, 1);\n\n\t\t// add\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.showKey, this.state.showValue);\n\t\tif (r === false) return;\n\t\tif (r === 0) {\n\t\t\tthis.filter(this.state.showKey);\n\t\t}\n\t\tthis.allData.splice(this.listIndex, 0, { value: this.state.showValue, key: this.state.showKey });\n\n\t\tthis.select(this.type, this.key);\n\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.call(this.type, this.state.key, \"remove\");\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey, true);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tcloseAddRow(): void {\n\t\tthis.setState({ addRow: false });\n\t}\n\n\topenAddRow(): void {\n\t\tthis.setState({ addRow: true });\n\t}\n\n\tonChangeShowValue(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n\n\tonChangeShowKey(value: string): void {\n\t\tthis.setState({ showKey: value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"hash\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.addRow}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.addRow()}\n\t\t\t\t\tonCancel={() => this.closeAddRow()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"add-row\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.addRowKey}\n\t\t\t\t\t\t\taddonBefore={\"KEY\"}\n\t\t\t\t\t\t\tonChange={value => this.setState({ addRowKey: value.target.value })}\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.addRowValue}\n\t\t\t\t\t\t\taddonBefore={\"VALUE\"}\n\t\t\t\t\t\t\tonChange={value => this.setState({ addRowValue: value.target.value })}\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.loadAllData(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Option key=\"text\" value=\"text\">\n\t\t\t\t\t\t\t\t\ttext\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要删除 ${this.state.showKey} 吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.delRow()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button>删除行</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t\t<Button onClick={() => this.openAddRow()}>添加行</Button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.state.list.length}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\t// scrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"end\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.onScroll}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={this.state.showKey}\n\t\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\t\tonChange={value => this.onChangeShowKey(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\t\t\tonChange={value => this.onChangeShowValue(value.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonBlur={() => this.setPage(this.state.page || this.page)}\n\t\t\t\t\t\t\t\tvalue={this.state.page}\n\t\t\t\t\t\t\t\tonChange={value => this.setPage(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要保存吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.save()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button type=\"primary\">保存</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./set.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class Set extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAllData(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = {\n\t\tkey: \"\",\n\t\tshowValue: \"\",\n\t\tlist: [] as any[],\n\t\tpage: 1,\n\t\trename: false,\n\t\taddRow: false,\n\t\taddRowValue: \"\",\n\t\tview: \"显示格式\"\n\t};\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tsize = 1000;\n\tlen = 0;\n\n\tselectIndex = 0;\n\tpage = 1;\n\tlistIndex = 0;\n\n\tallData: any[] = [];\n\n\tasync loadAllData(type: string, key: string) {\n\t\tthis.allData = [];\n\t\tvar cursor = 0;\n\t\tvar res: any = {};\n\t\twhile (1) {\n\t\t\tlet r = await Transform.select(type, key, cursor);\n\t\t\tif (!r) return;\n\t\t\tcursor = parseInt(r[0]);\n\t\t\tfor (let i = 0; i < r[1].length; i++) {\n\t\t\t\tconst value = r[1][i];\n\t\t\t\tres[value] = value;\n\t\t\t}\n\t\t\tif (cursor === 0) break;\n\t\t}\n\n\t\tfor (const key in res) {\n\t\t\tthis.allData.push(key);\n\t\t}\n\n\t\tthis.select(type, key);\n\t}\n\n\tasync select(type: string, key: string): Promise<void> {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.call(type, key, \"len\");\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\n\t\tthis.page = this.state.page;\n\t\tlet listArray = this.allData.slice((this.page - 1) * this.size, (this.page - 1) * this.size + this.size);\n\t\tif (this.selectIndex >= listArray.length - 1) {\n\t\t\tif (listArray.length === 0) {\n\t\t\t\tif (this.state.page > 1) {\n\t\t\t\t\tthis.selectIndex = 0;\n\t\t\t\t\tthis.state.page--;\n\t\t\t\t\treturn await this.select(type, key);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.selectIndex = listArray.length - 1;\n\t\t\t}\n\t\t}\n\n\t\tif (this.selectIndex >= listArray.length - 1) this.selectIndex = listArray.length - 1;\n\t\tthis.listIndex = (this.page - 1) * this.size + this.selectIndex;\n\n\t\tlet { list } = this.state;\n\t\tlist = [];\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ value: listArray[i], select: i === this.selectIndex });\n\t\t}\n\n\t\tthis.setState({ key, list, showValue: listArray[this.selectIndex] }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\tonScroll = (value: any) => {\n\t\t// console.log(value);\n\t\t// clientHeight + scrollTop = scrollHeight\n\t};\n\n\trenderItem = (value: any) => {\n\t\tif (value.index > this.state.list.length - 1) return;\n\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"key\">{(this.page - 1) * this.size + value.index + 1}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.listIndex = (this.page - 1) * this.size + value.index;\n\n\t\tthis.setState({ list, showValue: list[value.index].value }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tasync delRow() {\n\t\tlet item = this.state.list[this.selectIndex];\n\t\tif (this.len === 1) return this.deleteKey();\n\t\tlet d = await Transform.delete(this.type, this.key, item.value);\n\t\tif (d === false) return;\n\n\t\tthis.allData.splice(this.listIndex, 1);\n\n\t\tif (this.listIndex === this.len - 1) {\n\t\t\tthis.selectIndex--;\n\t\t\tthis.listIndex--;\n\t\t}\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"删除成功!\");\n\t}\n\n\tasync addRow() {\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.addRowValue);\n\t\tif (r === false) return;\n\t\tif (r === 0) {\n\t\t\tthis.filter(this.state.addRowValue);\n\t\t}\n\n\t\tthis.allData.splice(this.listIndex, 0, this.state.addRowValue);\n\n\t\tthis.state.addRowValue = \"\";\n\t\tthis.selectIndex++;\n\t\tthis.listIndex++;\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"添加成功!\");\n\t\tthis.closeAddRow();\n\t}\n\n\tfilter(value: string) {\n\t\tfor (let i = 0; i < this.allData.length; i++) {\n\t\t\tconst element = this.allData[i];\n\t\t\tif (element === value) {\n\t\t\t\tthis.allData.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprevPage = () => {\n\t\tif (this.state.page <= 1 || !this.state.page) return;\n\t\tthis.state.page--;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tnextPage = () => {\n\t\tif (this.state.page >= Math.ceil(this.len / this.size) || !this.state.page) return;\n\t\tthis.state.page++;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tgo = () => {\n\t\tthis.select(this.type, this.key);\n\t};\n\n\tsetPage(page: any) {\n\t\tif (page === \"\") return this.setState({ page });\n\t\tpage = parseInt(page) || 1;\n\t\tif (page < 1 || page > Math.ceil(this.len / this.size)) return;\n\t\tthis.setState({ page });\n\t}\n\n\tasync save() {\n\t\tlet item = this.state.list[this.selectIndex];\n\n\t\t// delete\n\t\tlet d = await Transform.delete(this.type, this.key, item.value);\n\t\tif (d === false) return;\n\n\t\tthis.allData.splice(this.listIndex, 1);\n\n\t\t// add\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.showValue);\n\t\tif (r === false) return;\n\t\tif (r === 0) {\n\t\t\tthis.filter(this.state.showValue);\n\t\t}\n\t\tthis.allData.splice(this.listIndex, 0, this.state.showValue);\n\n\t\tthis.select(this.type, this.key);\n\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.call(this.type, this.state.key, \"remove\");\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey, true);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tcloseAddRow(): void {\n\t\tthis.setState({ addRow: false });\n\t}\n\n\topenAddRow(): void {\n\t\tthis.setState({ addRow: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"set\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.addRow}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.addRow()}\n\t\t\t\t\tonCancel={() => this.closeAddRow()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.addRowValue}\n\t\t\t\t\t\tonChange={value => this.setState({ addRowValue: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.loadAllData(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要删除 ${this.state.showValue} 吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.delRow()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button>删除行</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t\t<Button onClick={() => this.openAddRow()}>添加行</Button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.state.list.length}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\t// scrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"end\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.onScroll}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonBlur={() => this.setPage(this.state.page || this.page)}\n\t\t\t\t\t\t\t\tvalue={this.state.page}\n\t\t\t\t\t\t\t\tonChange={value => this.setPage(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要保存吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.save()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button type=\"primary\">保存</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./zset.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\nimport Tools from \"../../../tools/Tools\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class ZSet extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = {\n\t\tkey: \"\",\n\t\tshowValue: \"\",\n\t\tshowKey: \"\",\n\t\tlist: [] as any[],\n\t\tpage: 1,\n\t\trename: false,\n\t\taddRow: false,\n\t\taddRowValue: \"\",\n\t\taddRowKey: \"\",\n\t\tview: \"显示格式\"\n\t};\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tsize = 1000;\n\tlen = 0;\n\n\tselectIndex = 0;\n\tpage = 1;\n\tlistIndex = 0;\n\n\tasync select(type: string, key: string): Promise<void> {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.call(type, key, \"len\");\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\n\t\tthis.page = this.state.page;\n\t\tlet temp = await Transform.select(type, key, this.state.page, this.size);\n\t\tif (temp === false) return;\n\n\t\tvar listArray: any[] = [];\n\t\tfor (let i = 0; i < temp.length; i += 2) {\n\t\t\tlistArray.push({ value: temp[i], key: temp[i + 1] });\n\t\t}\n\n\t\tif (this.selectIndex >= listArray.length - 1) {\n\t\t\tif (listArray.length === 0) {\n\t\t\t\tif (this.state.page > 1) {\n\t\t\t\t\tthis.selectIndex = 0;\n\t\t\t\t\tthis.state.page--;\n\t\t\t\t\treturn await this.select(type, key);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.selectIndex = listArray.length - 1;\n\t\t\t}\n\t\t}\n\t\tthis.listIndex = (this.page - 1) * this.size + this.selectIndex;\n\n\t\tlet { list } = this.state;\n\t\tlist = [];\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ value: listArray[i].value, key: listArray[i].key, select: i === this.selectIndex });\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{ key, list, showValue: list[this.selectIndex].value, showKey: list[this.selectIndex].key },\n\t\t\t() => {\n\t\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t\t}\n\t\t);\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\tonScroll = (value: any) => {\n\t\t// console.log(value);\n\t\t// clientHeight + scrollTop = scrollHeight\n\t};\n\n\trenderItem = (value: any) => {\n\t\tif (value.index > this.state.list.length - 1) return;\n\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"i\">{(this.page - 1) * this.size + value.index + 1}</div>\n\t\t\t\t<div className=\"key\">{this.state.list[value.index].key}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.listIndex = (this.page - 1) * this.size + value.index;\n\n\t\tthis.setState({ list, showValue: list[value.index].value, showKey: list[value.index].key }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tasync delRow() {\n\t\tlet item = this.state.list[this.selectIndex];\n\t\tif (this.len === 1) return this.deleteKey();\n\t\tlet d = await Transform.delete(this.type, this.key, item.value);\n\t\tif (d === false) return;\n\n\t\tif (this.listIndex === this.len - 1) {\n\t\t\tthis.selectIndex--;\n\t\t\tthis.listIndex--;\n\t\t}\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"删除成功!\");\n\t}\n\n\tasync addRow() {\n\t\tif (this.state.addRowKey === \"\") return message.error(\"请填写完整!\");\n\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.addRowKey, this.state.addRowValue);\n\t\tif (r === false) return;\n\n\t\tthis.state.addRowValue = \"\";\n\t\tthis.state.addRowKey = \"\";\n\t\tthis.selectIndex++;\n\t\tthis.listIndex++;\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"添加成功!\");\n\t\tthis.closeAddRow();\n\t}\n\n\tprevPage = () => {\n\t\tif (this.state.page <= 1 || !this.state.page) return;\n\t\tthis.state.page--;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tnextPage = () => {\n\t\tif (this.state.page >= Math.ceil(this.len / this.size) || !this.state.page) return;\n\t\tthis.state.page++;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tgo = () => {\n\t\tthis.select(this.type, this.key);\n\t};\n\n\tsetPage(page: any) {\n\t\tif (page === \"\") return this.setState({ page });\n\t\tpage = parseInt(page) || 1;\n\t\tif (page < 1 || page > Math.ceil(this.len / this.size)) return;\n\t\tthis.setState({ page });\n\t}\n\n\tasync save() {\n\t\tif (this.state.showKey === \"\") return message.error(\"请填写完整!\");\n\n\t\tlet item = this.state.list[this.selectIndex];\n\n\t\t// delete\n\t\tlet d = await Transform.delete(this.type, this.key, item.value);\n\t\tif (d === false) return;\n\n\t\t// add\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.showKey, this.state.showValue);\n\t\tif (r === false) return;\n\n\t\tthis.select(this.type, this.key);\n\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.call(this.type, this.state.key, \"remove\");\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey, true);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tcloseAddRow(): void {\n\t\tthis.setState({ addRow: false });\n\t}\n\n\topenAddRow(): void {\n\t\tthis.setState({ addRow: true });\n\t}\n\n\tonChangeShowValue(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n\n\tonChangeShowKey(value: string): void {\n\t\tTools.IsFloat(value) && this.setState({ showKey: value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"zset\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.addRow}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.addRow()}\n\t\t\t\t\tonCancel={() => this.closeAddRow()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"add-row\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.addRowKey}\n\t\t\t\t\t\t\taddonBefore={\"KEY\"}\n\t\t\t\t\t\t\tonChange={value =>\n\t\t\t\t\t\t\t\tTools.IsFloat(value.target.value) && this.setState({ addRowKey: value.target.value })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.addRowValue}\n\t\t\t\t\t\t\taddonBefore={\"VALUE\"}\n\t\t\t\t\t\t\tonChange={value => this.setState({ addRowValue: value.target.value })}\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Option key=\"text\" value=\"text\">\n\t\t\t\t\t\t\t\t\ttext\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要删除 ${this.state.showKey} 吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.delRow()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button>删除行</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t\t<Button onClick={() => this.openAddRow()}>添加行</Button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.state.list.length}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\t// scrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"end\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.onScroll}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={this.state.showKey}\n\t\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\t\tonChange={value => this.onChangeShowKey(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\t\t\tonChange={value => this.onChangeShowValue(value.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonBlur={() => this.setPage(this.state.page || this.page)}\n\t\t\t\t\t\t\t\tvalue={this.state.page}\n\t\t\t\t\t\t\t\tonChange={value => this.setPage(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要保存吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.save()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button type=\"primary\">保存</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./panel.scss\";\nimport Event from \"../../event/Event\";\nimport String from \"./data/String\";\nimport List from \"./data/List\";\nimport { Tabs } from \"antd\";\nimport Hash from \"./data/Hash\";\nimport Set from \"./data/Set\";\nimport ZSet from \"./data/ZSet\";\nconst { TabPane } = Tabs;\nexport default class Panel extends Component {\n\tstate = { activeKey: \"\", panes: [] as any[] };\n\tserverName = \"\";\n\n\tcreateComponent(type: string, key: string) {\n\t\tlet component = null;\n\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\tcomponent = this.createString(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"list\":\n\t\t\t\tcomponent = this.createList(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"hash\":\n\t\t\t\tcomponent = this.createHash(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"zset\":\n\t\t\t\tcomponent = this.createZSet(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"set\":\n\t\t\t\tcomponent = this.createSet(type, key);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn component;\n\t}\n\n\tcreateString(type: string, key: string) {\n\t\treturn <String parent={this} type={type} keys={key}></String>;\n\t}\n\n\tcreateList(type: string, key: string) {\n\t\treturn <List parent={this} type={type} keys={key}></List>;\n\t}\n\n\tcreateHash(type: string, key: string) {\n\t\treturn <Hash parent={this} type={type} keys={key}></Hash>;\n\t}\n\n\tcreateSet(type: string, key: string) {\n\t\treturn <Set parent={this} type={type} keys={key}></Set>;\n\t}\n\n\tcreateZSet(type: string, key: string) {\n\t\treturn <ZSet parent={this} type={type} keys={key}></ZSet>;\n\t}\n\n\treset() {\n\t\tthis.serverName = \"\";\n\t\tthis.setState({ activeKey: \"\", panes: [] as any[] });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"selectKey\", (serverName: string, type: string, key: string) => {\n\t\t\tthis.serverName = serverName;\n\n\t\t\tif (this.state.panes.find(v => v.key === key)) {\n\t\t\t\tthis.setState({ activeKey: key });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { panes } = this.state;\n\n\t\t\tlet component = this.createComponent(type, key);\n\n\t\t\tpanes.push({ title: key, content: component, key: key });\n\n\t\t\tif (panes.length > 3) panes.shift();\n\n\t\t\tthis.setState({ panes: panes, activeKey: key });\n\t\t});\n\t\tEvent.add(\"resetPanel\", () => {\n\t\t\tthis.reset();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"selectKey\");\n\t\tEvent.remove(\"resetPanel\");\n\t}\n\n\tonChange = (activeKey: any) => {\n\t\tEvent.emit(\"activeKey\", activeKey, true);\n\t\tthis.setState({ activeKey });\n\t};\n\n\tonEdit = (targetKey: any, action: string | number) => {\n\t\tif (action === \"add\") {\n\t\t\tthis.add();\n\t\t} else {\n\t\t\tthis.remove(targetKey);\n\t\t}\n\t};\n\n\tupdate(type: string, oldKey: string, newKey: string) {\n\t\tfor (let i = 0; i < this.state.panes.length; i++) {\n\t\t\tconst element = this.state.panes[i];\n\t\t\tif (element.key === oldKey) {\n\t\t\t\telement.title = newKey;\n\t\t\t\telement.key = newKey;\n\t\t\t\telement.content = this.createComponent(type, newKey);\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes: this.state.panes, activeKey: newKey });\n\t}\n\n\tadd = () => {};\n\n\tremove = (targetKey: string) => {\n\t\tlet activeKey = this.state.activeKey;\n\t\tlet lastIndex: any;\n\t\tthis.state.panes.forEach((pane: { key: string }, i: number) => {\n\t\t\tif (pane.key === targetKey) {\n\t\t\t\tlastIndex = i - 1;\n\t\t\t}\n\t\t});\n\t\tconst panes = this.state.panes.filter((pane: { key: string }) => pane.key !== targetKey);\n\t\tif (panes.length && activeKey === targetKey) {\n\t\t\tif (lastIndex >= 0) {\n\t\t\t\tactiveKey = panes[lastIndex].key;\n\t\t\t} else {\n\t\t\t\tactiveKey = panes[0].key;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes, activeKey });\n\t\tif (panes.length === 0) {\n\t\t\tEvent.emit(\"activeKey\", activeKey, false);\n\t\t} else {\n\t\t\tthis.onChange(activeKey);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<Tabs\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tactiveKey={this.state.activeKey}\n\t\t\t\t\ttype=\"editable-card\"\n\t\t\t\t\tonEdit={this.onEdit}\n\t\t\t\t\thideAdd\n\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t\t\ttabBarStyle={{ margin: 0, minWidth: \"200px\" }}\n\t\t\t\t\tdestroyInactiveTabPane={true}\n\t\t\t\t\tanimated={false}\n\t\t\t\t\ttabBarGutter={0}\n\t\t\t\t>\n\t\t\t\t\t{this.state.panes.map(\n\t\t\t\t\t\t(pane: {\n\t\t\t\t\t\t\ttitle: React.ReactNode;\n\t\t\t\t\t\t\tkey: string | undefined;\n\t\t\t\t\t\t\tclosable: boolean | undefined;\n\t\t\t\t\t\t\tcontent: React.ReactNode;\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<TabPane\n\t\t\t\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n\t\t\t\t\t\t\t\ttab={pane.title}\n\t\t\t\t\t\t\t\tkey={pane.key}\n\t\t\t\t\t\t\t\tclosable={pane.closable}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{pane.content}\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Button, Modal, Popconfirm } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./serverList.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\nimport { QuestionCircleOutlined, DownloadOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport { config } from \"../../interface/config\";\nconst { Panel } = Collapse;\n\nexport default class ServerList extends Component {\n\tstate = { visible: false, configs: Config.allConfig() as { [key: string]: config } };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openServerList\", () => this.onOpen());\n\t\tEvent.add(\"addServer\", () => this.setState({ configs: Config.allConfig() }));\n\t\tEvent.add(\"updateServer\", () => this.setState({ configs: Config.allConfig() }));\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openServerList\");\n\t}\n\n\tupdate(config: config) {\n\t\tEvent.emit(\"update\", config.name);\n\t}\n\n\tconnect(config: config) {\n\t\tEvent.emit(\"connect\", config.name, config.connectType);\n\t\tthis.onClose();\n\t}\n\n\tdisconnect(config: config) {\n\t\tthis.onClose();\n\t\tEvent.emit(\"disconnect\", config.name);\n\t\tCommand.disconnect(config.name);\n\t}\n\n\tdelete(config: config) {\n\t\tConfig.deleteConfig(config.name);\n\t\tthis.setState({ configs: Config.allConfig() });\n\t\tEvent.emit(\"delete\", config.name);\n\t\tCommand.disconnect(config.name);\n\t}\n\n\tsetDefault(config: config) {\n\t\tfor (const key in this.state.configs) {\n\t\t\tif (key === config.name) continue;\n\t\t\tthis.state.configs[key].default = false;\n\t\t\tConfig.setConfig(key, this.state.configs[key]);\n\t\t}\n\t\tconfig.default = !config.default;\n\t\tConfig.setConfig(config.name, config);\n\t\tthis.setState({ configs: Config.allConfig() });\n\t}\n\n\trender() {\n\t\tlet configs = Object.values(this.state.configs);\n\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle={\n\t\t\t\t\t<div className=\"server-list-header\">\n\t\t\t\t\t\t<div className=\"left\">服务器列表</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"default\"\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tModal.confirm({\n\t\t\t\t\t\t\t\t\t\tcontent: \"确定导出所有配置?\",\n\t\t\t\t\t\t\t\t\t\tokText: \"别啰嗦,快点!\",\n\t\t\t\t\t\t\t\t\t\tcancelText: \"我再想想.\",\n\t\t\t\t\t\t\t\t\t\tonOk: () => {\n\t\t\t\t\t\t\t\t\t\t\tCommand.export(\"config.json\", JSON.stringify(Config.allConfig()));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<DownloadOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"danger\"\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tModal.confirm({\n\t\t\t\t\t\t\t\t\t\tcontent: \"确定清除所有配置?\",\n\t\t\t\t\t\t\t\t\t\tokText: \"别啰嗦,快点!\",\n\t\t\t\t\t\t\t\t\t\tcancelText: \"我再想想.\",\n\t\t\t\t\t\t\t\t\t\tonOk: () => {\n\t\t\t\t\t\t\t\t\t\t\tConfig.deleteAllConfig();\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ configs: {} });\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t清除所有配置\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"400px\"}\n\t\t\t\tclassName=\"server-list\"\n\t\t\t\tdestroyOnClose\n\t\t\t>\n\t\t\t\t{configs.length > 0 ? (\n\t\t\t\t\t<Collapse>\n\t\t\t\t\t\t{configs.map(config => (\n\t\t\t\t\t\t\t<Panel\n\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t<div className=\"panel-title\">\n\t\t\t\t\t\t\t\t\t\t{config.default ? (\n\t\t\t\t\t\t\t\t\t\t\t<div>{`${config.name} (默认)`}</div>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<div>{config.name}</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.connect(config)}>\n\t\t\t\t\t\t\t\t\t\t\t\t连接\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.disconnect(config)}>\n\t\t\t\t\t\t\t\t\t\t\t\t断开\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkey={config.name}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"db-header\" key={config.name}>\n\t\t\t\t\t\t\t\t\t<div>{config.name}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"button\">\n\t\t\t\t\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.setDefault(config)}>\n\t\t\t\t\t\t\t\t\t\t\t{config.default ? \"取消默认\" : \"设为默认\"}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.update(config)}>\n\t\t\t\t\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\t\t\t\ttitle={`确定要删除 ${config.name} 吗?`}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => this.delete(config)}\n\t\t\t\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"link\" danger>\n\t\t\t\t\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Collapse>\n\t\t\t\t) : null}\n\t\t\t</Drawer>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport Event from \"../../event/Event\";\nimport { Radio, Input, Button, message } from \"antd\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\nimport \"./updateServer.scss\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\nimport Layer from \"../layer/Layer\";\n\nexport default class UpdateServer extends Component {\n\tstate = { visible: false, config: {} as config, connectType: \"normal\", clusterHostInput: null };\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tserverName = \"\";\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openUpdateServer\", serverName => {\n\t\t\tthis.serverName = serverName;\n\t\t\tlet config = Config.getConfig(serverName);\n\t\t\tif (!config.cluster) config.cluster = [];\n\t\t\tthis.setState({ config: config }, () => this.setState({ clusterHostInput: this.createCluster() }));\n\t\t\tthis.onOpen();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openUpdateServer\");\n\t}\n\n\tonChange(field: string, value: string) {\n\t\t(this.state.config as any)[field] = value;\n\t\tthis.setState({ config: this.state.config, clusterHostInput: this.createCluster() });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`修改 ${this.state.config.name} 配置`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"update-server\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<Radio.Group\n\t\t\t\t\tvalue={this.state.connectType}\n\t\t\t\t\tonChange={value => this.setState({ connectType: value.target.value })}\n\t\t\t\t>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tvalue={this.state.config.name}\n\t\t\t\t\t\tonChange={value => this.onChange(\"name\", value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.connectType === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tvalue={this.state.config.host}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"host\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.connectType === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tvalue={this.state.config.port}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"port\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tvalue={this.state.config.master}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"master\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tvalue={this.state.config.password}\n\t\t\t\t\t\tonChange={value => this.onChange(\"password\", value.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.state.config.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tvalue={this.state.config.cluster[i]}\n\t\t\t\tonChange={value => {\n\t\t\t\t\tlet cfg = this.state.config;\n\t\t\t\t\tcfg.cluster[i] = value.target.value;\n\t\t\t\t\tthis.setState({ config: cfg, clusterHostInput: this.createCluster() });\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.state.config.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.state.config.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tthis.state.config.cluster = this.state.config.cluster.filter(v => v !== \"\");\n\t\tLayer.load();\n\t\tlet response = await Command.register(this.state.connectType, this.state.config);\n\t\tLayer.close();\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tsubmit() {\n\t\tConfig.deleteConfig(this.serverName);\n\t\tlet cfg = this.state.config;\n\t\tthis.state.config.connectType = this.state.connectType;\n\t\tcfg.cluster = cfg.cluster.filter(v => v !== \"\");\n\t\tConfig.setConfig(this.state.config.name, this.state.config);\n\t\tmessage.success(\"修改成功\");\n\t\tthis.onClose();\n\t\tEvent.emit(\"updateServer\");\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport \"./progress.scss\";\nimport Event from \"../../event/Event\";\n\nexport default class MProgress extends Component {\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"progress\");\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"progress\", v => this.progress(v));\n\t}\n\n\tprogress(v: number) {\n\t\tif (v === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ progress: v });\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tthis.setState({ progress: v });\n\t\t}\n\t}\n\n\tstate = { progress: 100 };\n\n\trender() {\n\t\treturn (\n\t\t\t<Progress\n\t\t\t\tstrokeColor={{\n\t\t\t\t\t\"0%\": \"#108ee9\",\n\t\t\t\t\t\"100%\": \"#87d068\"\n\t\t\t\t}}\n\t\t\t\tstyle={{ width: \"100%\", height: \"1px\" }}\n\t\t\t\tshowInfo={false}\n\t\t\t\tstrokeWidth={3}\n\t\t\t\tpercent={this.state.progress}\n\t\t\t\tclassName=\"progress\"\n\t\t\t/>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Radio, Input, Button, Modal, message } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addKey.scss\";\nimport Transform from \"../../transform/Transform\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\nimport Tools from \"../../tools/Tools\";\n\nexport default class AddKey extends Component {\n\tstate = { visible: false, keyType: \"string\", key: \"\", k: \"\", v: \"\" };\n\n\tonClose() {\n\t\tthis.setState({ visible: false, key: \"\", k: \"\", v: \"\" });\n\t}\n\n\tonOpen() {\n\t\tthis.config = Config.getCurrent();\n\t\tif (!this.config.name) {\n\t\t\tmessage.error(\"请连接服务器!\");\n\t\t\treturn this.onClose();\n\t\t}\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"addKey\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"addKey\");\n\t}\n\n\tconfig: config = {} as config;\n\n\tcreateNormal() {\n\t\treturn (\n\t\t\t<div className=\"input-box-2\">\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"KEY\"\n\t\t\t\t\t\tplaceholder=\"key\"\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"VALUE\"\n\t\t\t\t\t\tplaceholder=\"value\"\n\t\t\t\t\t\tvalue={this.state.v}\n\t\t\t\t\t\tonChange={value => this.setState({ v: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcreateSpecial() {\n\t\treturn (\n\t\t\t<div className=\"input-box-3\">\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"KEY\"\n\t\t\t\t\t\tplaceholder=\"key\"\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tplaceholder=\"k\"\n\t\t\t\t\t\tvalue={this.state.k}\n\t\t\t\t\t\tonChange={value => {\n\t\t\t\t\t\t\tvar k = value.target.value;\n\t\t\t\t\t\t\tif (this.state.keyType === \"zset\") {\n\t\t\t\t\t\t\t\tTools.IsFloat(k) && this.setState({ k: k });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setState({ k: k });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tplaceholder=\"v\"\n\t\t\t\t\t\tvalue={this.state.v}\n\t\t\t\t\t\tonChange={value => this.setState({ v: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcreateComponent() {\n\t\tswitch (this.state.keyType) {\n\t\t\tcase \"string\":\n\t\t\tcase \"list\":\n\t\t\tcase \"set\":\n\t\t\t\treturn this.createNormal();\n\t\t\tcase \"hash\":\n\t\t\tcase \"zset\":\n\t\t\t\treturn this.createSpecial();\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`添加KEY`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"add-key\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div className=\"select-box\">\n\t\t\t\t\t<Radio.Group\n\t\t\t\t\t\tvalue={this.state.keyType}\n\t\t\t\t\t\tonChange={value => this.setState({ keyType: value.target.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Radio.Button value=\"string\">string</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"list\">list</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"set\">set</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"hash\">hash</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"zset\">zset</Radio.Button>\n\t\t\t\t\t</Radio.Group>\n\t\t\t\t</div>\n\n\t\t\t\t{this.createComponent()}\n\n\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => this.add()}>\n\t\t\t\t\t\t确定\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t取消\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\tasync add() {\n\t\tif (this.state.key === \"\") return message.error(\"请填写完整!\");\n\n\t\tif (this.state.v === \"\") return message.error(\"请填写完整!\");\n\n\t\tswitch (this.state.keyType) {\n\t\t\tcase \"string\":\n\t\t\tcase \"list\":\n\t\t\tcase \"set\":\n\t\t\t\tlet n = await Transform.insert(this.state.keyType, this.state.key, this.state.v);\n\t\t\t\tif (!n) return;\n\t\t\t\tmessage.success(\"添加成功!\");\n\t\t\t\tbreak;\n\t\t\tcase \"hash\":\n\t\t\tcase \"zset\":\n\t\t\t\tif (this.state.k === \"\") return message.error(\"请填写完整!\");\n\t\t\t\tlet s = await Transform.insert(this.state.keyType, this.state.key, this.state.k, this.state.v);\n\t\t\t\tif (!s) return;\n\t\t\t\tmessage.success(\"添加成功!\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn message.error(\"不支持的类型!\");\n\t\t}\n\n\t\tEvent.emit(\"insertKey\", this.state.key);\n\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport Header from \"../../components/header/Header\";\nimport AddServer from \"../../components/addServer/AddServer\";\nimport KeyTree from \"../../components/keyTree/KeyTree\";\nimport Panel from \"../../components/panel/Panel\";\nimport ServerList from \"../../components/serverList/ServerList\";\nimport UpdateServer from \"../../components/updateServer/UpdateServer\";\nimport MProgress from \"../../components/progress/Progress\";\nimport AddKey from \"../../components/addKey/AddKey\";\n\nclass Index extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"index\">\n\t\t\t\t<AddKey></AddKey>\n\t\t\t\t<AddServer></AddServer>\n\t\t\t\t<ServerList></ServerList>\n\t\t\t\t<UpdateServer></UpdateServer>\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<Header></Header>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<KeyTree></KeyTree>\n\t\t\t\t\t<Panel></Panel>\n\t\t\t\t</div>\n\t\t\t\t<MProgress></MProgress>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Index;\n","import React from \"react\";\nimport \"./login.scss\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nfunction Login() {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<LoadingOutlined style={{ fontSize: \"2rem\" }}></LoadingOutlined>\n\t\t\t\t\t<div className=\"tips\">正在准备...</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory, History, UnregisterCallback, Location } from \"history\";\nimport \"./App.scss\";\nimport Index from \"./pages/index/Index\";\nimport Login from \"./pages/login/Login\";\nimport WebSocket from \"./ws/WebSocket\";\nimport Config from \"./components/config/Config\";\n\nexport default class App extends Component {\n\tunlisten!: UnregisterCallback;\n\n\tchange(location: Location<History.PoorMansUnknown>) {\n\t\tif (!Config.getStatus()) return (window.location.hash = \"/login\");\n\t\tif (location.hash === \"#/login\") return (window.location.hash = \"/index\");\n\t}\n\n\tstate = { start: false };\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tWebSocket.start(() => this.setState({ start: true }));\n\t}\n\n\tcomponentDidMount() {\n\t\tconst history = createBrowserHistory();\n\t\t// Get the current location.\n\t\tconst location = history.location;\n\n\t\tthis.change(location);\n\n\t\t// Listen for changes to the current location.\n\t\tthis.unlisten = history.listen((location, action) => {\n\t\t\t// location is an object like window.location\n\t\t\tthis.change(location);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tWebSocket.close();\n\t\tthis.unlisten();\n\t}\n\n\trender() {\n\t\treturn this.state.start ? (\n\t\t\t<HashRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/index\" component={Index} />\n\t\t\t\t\t<Route path=\"/login\" component={Login} exact />\n\t\t\t\t\t<Redirect from=\"**\" to=\"/index\" />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t) : null;\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { message, notification } from \"antd\";\nimport Config from \"./app/components/config/Config\";\n\nAxios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\nAxios.defaults.baseURL = \"http://127.0.0.1:12388\";\n\nAxios.defaults.timeout = 5000;\n\nAxios.interceptors.response.use(\n\tresponse => {\n\t\treturn response;\n\t},\n\terror => {\n\t\treturn error;\n\t}\n);\n\nmessage.config({ maxCount: 3 });\n\nnotification.config({ duration: 2, placement: \"bottomRight\" });\n\n// create uuid\nif (!Config.getUUID()) Config.createUUID();\nConfig.delDB();\nConfig.delServerName();\nConfig.delCurrent();\nConfig.delStatus();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}