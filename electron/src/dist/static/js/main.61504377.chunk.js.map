{"version":3,"sources":["app/event/Event.ts","app/components/header/Header.tsx","app/tools/Tools.ts","app/components/config/Config.ts","app/components/addServer/AddServer.tsx","app/ws/WebSocket.ts","app/components/keyTree/KeyTree.tsx","app/components/panel/Panel.tsx","app/components/serverList/ServerList.tsx","app/pages/index/Index.tsx","app/pages/login/Login.tsx","app/pages/command/Command.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["events","name","e","this","args","Header","className","type","onClick","Event","emit","danger","ghost","AlignLeftOutlined","Component","data","s","key","slice","begin","end","res","index","push","response","message","success","msg","error","code","notification","JSON","parse","localStorage","getItem","config","cfg","setItem","stringify","removeItem","AddServer","state","visible","radio","event","host","port","password","master","setState","add","onOpen","remove","title","placement","closable","onClose","getContainer","width","destroyOnClose","Group","value","onChange","target","Button","placeholder","submit","test","Axios","post","Tools","QueryString","status","description","Config","get","set","ws","isStart","Socket","console","log","onError","err","start","close","addListener","Option","KeyTree","select","dataTree","serverName","databases","style","tree","base","fontSize","whiteSpace","backgroundColor","height","padding","node","color","activeLink","prev","connect","disconnect","update","delete","WebSocket","listen","v","length","addDataTree","createDataTree","login","createSelect","createTitle","arr","params","split","temp","k","inArr","item","id","children","default","x","y","minWidth","maxWidth","bounds","enableResizing","right","disableDragging","defaultValue","listHeight","onSelect","selectDB","Range","parseInt","map","onToggle","toggled","animations","active","Notification","db","Panel","date","ServerList","header","createHeader","all","confirm","okText","cancelText","onOk","Index","Login","Command","App","props","unlisten","location","hash","window","history","createBrowserHistory","change","action","path","component","exact","from","to","Boolean","hostname","match","defaults","headers","baseURL","timeout","interceptors","use","maxCount","duration","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.61504377.chunk.js","sourcesContent":["class Event {\n\tevents: { [key: string]: (...args: any[]) => void } = {};\n\n\tadd(name: string, e: (...args: any[]) => void): string {\n\t\tthis.events[name] = e;\n\t\treturn name;\n\t}\n\n\tremove(name: string) {\n\t\tdelete this.events[name];\n\t}\n\n\temit(name: string, ...args: any[]) {\n\t\tthis.events[name](...args);\n\t}\n}\n\nexport default new Event();\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./header.scss\";\nimport Event from \"../../event/Event\";\nimport { AlignLeftOutlined } from \"@ant-design/icons\";\n\nexport default class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => Event.emit(\"openAddServer\")}>\n\t\t\t\t\t\t添加\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<Button type=\"dashed\" danger ghost onClick={() => Event.emit(\"openServerList\")}>\n\t\t\t\t\t\t<AlignLeftOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { notification } from \"antd\";\n\nclass Tools {\n\tQueryString(data: { [key: string]: string }) {\n\t\tlet s = \"\";\n\t\tfor (const key in data) {\n\t\t\ts += `${key}=${data[key]}&`;\n\t\t}\n\t\treturn s.slice(0, -1);\n\t}\n\n\tRange(begin: number, end: number): number[] {\n\t\tlet res = [];\n\t\tfor (let index = begin; index < end; index++) {\n\t\t\tres.push(index);\n\t\t}\n\t\treturn res;\n\t}\n\n\tNotification(response: any, message: any = { success: response.data.msg, error: response.data.msg }) {\n\t\tif (response.data.code === 200) {\n\t\t\tnotification.success({ message: message.success });\n\t\t} else {\n\t\t\tnotification.error({ message: message.error });\n\t\t}\n\t}\n}\n\nexport default new Tools();\n","interface config {\n\thost: string;\n\tport: string;\n\tpassword: string;\n\tname: string;\n\tmaster: string;\n\ttype: string;\n}\n\nclass Config {\n\tall() {\n\t\treturn JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t}\n\n\tget(name: string): config {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\treturn cfg[name];\n\t}\n\n\tset(name: string, config: config) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tcfg[name] = config;\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tdelete(name: string) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tdelete cfg[name];\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tclear() {\n\t\tlocalStorage.removeItem(\"config\");\n\t}\n}\n\nexport default new Config();\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addServer.scss\";\nimport Axios from \"axios\";\nimport Tools from \"../../tools/Tools\";\nimport Config from \"../config/Config\";\n\nexport default class AddServer extends Component {\n\tstate = { visible: false, radio: \"normal\" };\n\tevent!: string;\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.event = Event.add(\"openAddServer\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(this.event);\n\t}\n\n\tname = \"127.0.0.1\";\n\thost = \"127.0.0.1\";\n\tport = \"6379\";\n\tpassword = \"1354243\";\n\tmaster = \"master\";\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"添加服务器\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tdestroyOnClose\n\t\t\t\tclassName=\"add-server\"\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.radio} onChange={value => this.setState({ radio: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input placeholder=\"name\" onChange={value => (this.name = value.target.value)} />\n\t\t\t\t\t<Input placeholder=\"host\" onChange={value => (this.host = value.target.value)} />\n\t\t\t\t\t<Input placeholder=\"port\" onChange={value => (this.port = value.target.value)} />\n\t\t\t\t\t<Input placeholder=\"password\" onChange={value => (this.password = value.target.value)} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t创建\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tasync test() {\n\t\tvar data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\ttype: this.state.radio\n\t\t};\n\n\t\tlet response = await Axios.post(`/redis/register/${this.state.radio}`, Tools.QueryString(data));\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn notification.error({ message: response.data.status, description: response.data.msg });\n\t\t}\n\n\t\treturn notification.success({ message: response.data.status, description: \"连接成功\" });\n\t}\n\n\tasync submit() {\n\t\tvar data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\ttype: this.state.radio\n\t\t};\n\n\t\tlet cfg = Config.get(this.name);\n\t\tif (cfg) return notification.error({ message: \"ERROR\", description: `${this.name} 已经存在!` });\n\n\t\tConfig.set(this.name, data);\n\n\t\tthis.onClose();\n\n\t\tEvent.emit(\"addServer\", this.name);\n\n\t\treturn notification.success({ message: \"SUCCESS\", description: \"创建成功\" });\n\t}\n}\n","import Socket from \"lows\";\n\nclass WebSocket {\n\tws: Socket;\n\tisStart = false;\n\n\tconstructor() {\n\t\tthis.ws = new Socket();\n\n\t\tthis.ws.config = {\n\t\t\thost: \"http://127.0.0.1\",\n\t\t\tport: \"12389\"\n\t\t};\n\n\t\tthis.ws.onOpen = () => {\n\t\t\tconsole.log(\"on open\");\n\t\t};\n\n\t\tthis.ws.onError = (err: any) => {\n\t\t\tconsole.log(\"on error\", err);\n\t\t};\n\n\t\tthis.ws.onClose = () => {\n\t\t\tconsole.log(\"on close\");\n\t\t};\n\t}\n\n\tstart() {\n\t\t!this.isStart && this.ws.start();\n\t\tthis.isStart = true;\n\t}\n\n\tclose() {\n\t\tthis.isStart && this.ws.close();\n\t\tthis.isStart = false;\n\t}\n\n\tlisten(...args: any[]) {\n\t\tthis.ws.addListener(...args);\n\t}\n}\n\nexport default new WebSocket();\n","import React, { Component } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport \"./keyTree.scss\";\nimport { Tree, Select, Button, notification } from \"antd\";\nimport Tools from \"../../tools/Tools\";\nimport Event from \"../../event/Event\";\nimport Config from \"../config/Config\";\nimport Axios from \"axios\";\nimport WebSocket from \"../../ws/WebSocket\";\nimport { Treebeard, TreeTheme } from \"react-treebeard\";\n\nconst Option = Select.Option;\n\nexport default class KeyTree extends Component {\n\tstate = {\n\t\tselect: null,\n\t\ttitle: null,\n\t\tdataTree: []\n\t};\n\n\tserverName = \"\";\n\tdatabases = \"\";\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"connect\", key => this.connect(key));\n\t\tEvent.add(\"disconnect\", key => this.disconnect(key));\n\t\tEvent.add(\"update\", key => this.update(key));\n\t\tEvent.add(\"delete\", key => this.delete(key));\n\n\t\tWebSocket.listen(\"scan\", (e: any, v: any) => {\n\t\t\tfor (let index = 0; index < v.length; index++) {\n\t\t\t\tthis.addDataTree(v[index]);\n\t\t\t}\n\t\t\tthis.setState({ dataTree: this.createDataTree() });\n\t\t\tconsole.log(this.dataTree);\n\t\t});\n\n\t\tthis.connect(\"127.0.0.1\");\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"connect\");\n\t\tEvent.remove(\"disconnect\");\n\t\tEvent.remove(\"update\");\n\t\tEvent.remove(\"delete\");\n\t}\n\n\tasync connect(serverName: any) {\n\t\tthis.serverName = serverName;\n\t\tlet res = await this.login();\n\t\tthis.databases = res[1];\n\t\tthis.setState({ select: this.createSelect(serverName), title: this.createTitle(serverName) });\n\t}\n\n\tdisconnect(serverName: any) {\n\t\tif (this.serverName === serverName) this.setState({ select: null });\n\t}\n\n\tupdate(serverName: any) {\n\t\tconsole.log(\"update\", this.serverName, serverName);\n\t}\n\n\tdelete(serverName: any) {\n\t\tif (this.serverName === serverName) this.setState({ select: null });\n\t}\n\n\tdataTree: any = [];\n\n\tinArr(name: string, arr: any) {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index][\"name\"] === name) {\n\t\t\t\treturn arr[index];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\taddDataTree(key: string) {\n\t\tlet params = key.split(\":\");\n\t\tlet temp = this.dataTree;\n\t\tvar k = \"\";\n\t\tfor (let index = 0; index < params.length; index++) {\n\t\t\tk += params[index] + \":\";\n\t\t\tlet arr = this.inArr(params[index], temp);\n\t\t\tif (arr !== false) {\n\t\t\t\ttemp = arr.children;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet item = {\n\t\t\t\tid: k.slice(0, -1),\n\t\t\t\tname: index === params.length - 1 ? key : params[index],\n\t\t\t\tchildren: []\n\t\t\t};\n\n\t\t\tif (index === params.length - 1) delete item.children;\n\n\t\t\ttemp.push(item);\n\t\t\ttemp = item.children;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Rnd\n\t\t\t\tdefault={{ height: \"100%\", width: \"20%\", x: 0, y: 0 }}\n\t\t\t\tminWidth={\"20%\"}\n\t\t\t\tmaxWidth={\"40%\"}\n\t\t\t\tbounds=\".content\"\n\t\t\t\tenableResizing={{ right: true }}\n\t\t\t\tdisableDragging={true}\n\t\t\t\tclassName=\"key-tree\"\n\t\t\t>\n\t\t\t\t<div className=\"select-panel\">{this.state.select}</div>\n\t\t\t\t<div className=\"data-tree\">{this.state.dataTree}</div>\n\t\t\t\t<div className=\"title\">{this.state.title}</div>\n\t\t\t</Rnd>\n\t\t);\n\t}\n\n\tcreateTitle(key: string) {\n\t\treturn (\n\t\t\t<Button type=\"link\" danger>\n\t\t\t\t{key}\n\t\t\t</Button>\n\t\t);\n\t}\n\n\tcreateSelect(key: any) {\n\t\treturn (\n\t\t\t<Select\n\t\t\t\tdefaultValue={\"请选择DB\"}\n\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\tlistHeight={600}\n\t\t\t\tonSelect={value => this.selectDB(value)}\n\t\t\t>\n\t\t\t\t{Tools.Range(0, parseInt(this.databases)).map(v => (\n\t\t\t\t\t<Option key={v} value={v}>\n\t\t\t\t\t\tdb({v})\n\t\t\t\t\t</Option>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t);\n\t}\n\n\tstyle: any = {\n\t\ttree: {\n\t\t\tbase: {\n\t\t\t\tfontSize: \"12px\",\n\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\tbackgroundColor: \"#ffffff\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tpadding: \"5px\"\n\t\t\t},\n\t\t\tnode: { base: { color: \"red\" }, activeLink: { backgroundColor: \"#bae7ff\" } }\n\t\t}\n\t};\n\n\tcreateDataTree() {\n\t\treturn (\n\t\t\t<Treebeard\n\t\t\t\tdata={this.dataTree}\n\t\t\t\tonToggle={(node, toggled) => this.onToggle(node, toggled)}\n\t\t\t\tstyle={this.style}\n\t\t\t\tanimations={false}\n\t\t\t/>\n\t\t);\n\t}\n\n\tprev: any;\n\n\tonToggle(node: import(\"react-treebeard\").TreeNode, toggled: boolean): void {\n\t\tif (this.prev) {\n\t\t\tthis.prev.active = false;\n\t\t}\n\n\t\tthis.prev = node;\n\n\t\tnode.active = true;\n\n\t\tif (node.children) {\n\t\t\tnode.toggled = toggled;\n\t\t} else {\n\t\t\tthis.onSelect(node.name);\n\t\t}\n\n\t\tthis.setState(() => ({ dataTree: this.createDataTree() }));\n\t}\n\n\tasync onSelect(key: string) {\n\t\tlet response = await Axios.post(`/redis/key/type`, Tools.QueryString({ name: this.serverName, key: key }));\n\t\tconsole.log(response.data);\n\n\t\tresponse = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tTools.QueryString({\n\t\t\t\tname: this.serverName,\n\t\t\t\tkey: key,\n\t\t\t\targs: `lrange ${key} 0 9`\n\t\t\t})\n\t\t);\n\n\t\tconsole.log(response.data);\n\t}\n\n\tasync login() {\n\t\tlet cfg = Config.get(this.serverName);\n\t\tlet response = await Axios.post(`/redis/register/${cfg.type}`, Tools.QueryString(cfg as any));\n\t\tTools.Notification(response, { success: \"连接成功\" });\n\t\treturn response.data.msg;\n\t}\n\n\tasync selectDB(value: any) {\n\t\tlet response = await Axios.post(`/redis/db/select`, Tools.QueryString({ name: this.serverName, db: value }));\n\t\tif (response.data.code !== 200) return Tools.Notification(response);\n\t\tlet res = await Axios.post(`/redis/db/scan`, Tools.QueryString({ name: this.serverName }));\n\t\treturn res.data.msg;\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./panel.scss\";\nimport WebSocket from \"../../ws/WebSocket\";\n\nexport default class Panel extends Component {\n\tstate = { date: \"\" };\n\n\tcomponentDidMount() {\n\t\tWebSocket.listen(\"system-time\", (event: any, data: any) => {\n\t\t\tthis.setState({ date: data });\n\t\t});\n\t}\n\n\trender() {\n\t\treturn <div className=\"panel\">{this.state.date}</div>;\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Button, message, Modal } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./serverList.scss\";\nimport Config from \"../config/Config\";\nimport confirm from \"antd/lib/modal/confirm\";\n\nexport default class ServerList extends Component {\n\tstate = { visible: false, header: this.createHeader() };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openServerList\", () => this.onOpen());\n\t\tEvent.add(\"addServer\", () => this.setState({ header: this.createHeader() }));\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openServerList\");\n\t}\n\n\tcreateHeader() {\n\t\tlet data = [];\n\t\tlet config = Config.all();\n\t\tfor (const key in config) {\n\t\t\tdata.push(\n\t\t\t\t<div className=\"db-header\" key={key}>\n\t\t\t\t\t<div>{key}</div>\n\t\t\t\t\t<div className=\"button\">\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.connect(key)}>\n\t\t\t\t\t\t\t连接\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.update(key)}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.disconnect(key)}>\n\t\t\t\t\t\t\t断开\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.delete(key)}>\n\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn data;\n\t}\n\n\tupdate(key: string) {\n\t\tEvent.emit(\"update\", key);\n\t}\n\n\tconnect(key: string) {\n\t\tthis.onClose();\n\t\tEvent.emit(\"connect\", key);\n\t}\n\n\tdisconnect(key: string) {\n\t\tthis.onClose();\n\t\tEvent.emit(\"disconnect\", key);\n\t}\n\n\tdelete(key: string) {\n\t\tModal.confirm({\n\t\t\ttitle: `确定要删除 ${key} 的配置吗`,\n\t\t\tokText: \"确认\",\n\t\t\tcancelText: \"取消\",\n\t\t\tonOk: () => {\n\t\t\t\tConfig.delete(key);\n\t\t\t\tthis.setState({ header: this.createHeader() });\n\t\t\t\tEvent.emit(\"delete\", key);\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"服务器列表\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tclassName=\"server-list\"\n\t\t\t\tdestroyOnClose\n\t\t\t>\n\t\t\t\t{this.state.header}\n\t\t\t</Drawer>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport Header from \"../../components/header/Header\";\nimport AddServer from \"../../components/addServer/AddServer\";\nimport KeyTree from \"../../components/keyTree/KeyTree\";\nimport Panel from \"../../components/panel/Panel\";\nimport ServerList from \"../../components/serverList/ServerList\";\n\nclass Index extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"index\">\n\t\t\t\t<AddServer></AddServer>\n\t\t\t\t<ServerList></ServerList>\n\t\t\t\t<Header></Header>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<KeyTree></KeyTree>\n\t\t\t\t\t<Panel></Panel>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Index;\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport \"./login.scss\";\n\nfunction Login() {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<Button type=\"default\">Button</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React from \"react\";\n\nfunction Command() {\n\treturn <div>hello command</div>;\n}\n\nexport default Command;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory, History, UnregisterCallback, Location } from \"history\";\nimport \"./App.scss\";\nimport Index from \"./pages/index/Index\";\nimport Login from \"./pages/login/Login\";\nimport Command from \"./pages/command/Command\";\nimport WebSocket from \"./ws/WebSocket\";\n\nexport default class App extends Component {\n\tunlisten!: UnregisterCallback;\n\n\tchange(location: Location<History.PoorMansUnknown>) {\n\t\tif (false) return (window.location.hash = \"/login\");\n\t\tif (location.hash === \"#/login\") return (window.location.hash = \"/index\");\n\t}\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tWebSocket.start();\n\t}\n\n\tcomponentDidMount() {\n\t\tconst history = createBrowserHistory();\n\t\t// Get the current location.\n\t\tconst location = history.location;\n\n\t\tthis.change(location);\n\n\t\t// Listen for changes to the current location.\n\t\tthis.unlisten = history.listen((location, action) => {\n\t\t\t// location is an object like window.location\n\t\t\tthis.change(location);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tWebSocket.close();\n\t\tthis.unlisten();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<HashRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/index\" component={Index} />\n\t\t\t\t\t<Route path=\"/command\" component={Command} />\n\t\t\t\t\t<Route path=\"/login\" component={Login} exact />\n\t\t\t\t\t<Redirect from=\"**\" to=\"/index\" />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { message, notification } from \"antd\";\n\nAxios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\nAxios.defaults.baseURL = \"http://127.0.0.1:12388\";\n\nAxios.defaults.timeout = 5000;\n\nAxios.interceptors.response.use(response => {\n\treturn response;\n});\n\nmessage.config({ maxCount: 3 });\n\nnotification.config({ duration: 2 });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}