{"version":3,"sources":["app/event/Event.ts","app/components/header/Header.tsx","app/components/config/Config.ts","app/components/layer/Layer.ts","app/tools/Tools.ts","app/services/Command.ts","app/components/addServer/AddServer.tsx","app/ws/WebSocket.ts","app/components/keyTree/Tree.ts","app/components/keyTree/KeyTree.tsx","app/transform/Transform.ts","app/components/panel/data/String.tsx","app/components/panel/data/List.tsx","app/components/panel/Panel.tsx","app/components/serverList/ServerList.tsx","app/components/updateServer/UpdateServer.tsx","app/components/progress/Progress.tsx","app/components/addKey/AddKey.tsx","app/pages/index/Index.tsx","app/pages/login/Login.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["events","name","e","this","args","Header","state","date","addKey","Event","emit","className","type","ghost","onClick","PlusOutlined","danger","AlignLeftOutlined","Component","JSON","parse","localStorage","getItem","cfg","setItem","stringify","config","removeItem","mask","div","document","createElement","style","display","justifyContent","alignItems","width","height","position","top","left","child","appendChild","body","data","s","key","slice","begin","end","res","index","push","response","success","error","isAxiosError","toJSON","notification","message","destroy","Layer","close","msg","code","Axios","post","Qs","serverName","db","join","Tools","Notification","AddServer","visible","clusterHostInput","event","host","port","password","master","cluster","Array","setState","add","onOpen","remove","title","placement","closable","onClose","getContainer","destroyOnClose","Group","value","onChange","target","Button","spellCheck","addonBefore","placeholder","addHost","submit","test","map","v","i","addonAfter","MinusCircleOutlined","removeHost","splice","createCluster","filter","Command","register","Config","get","description","set","ws","isStart","Socket","console","log","onError","err","start","addListener","dataTree","read","length","children","search","prefix","parent","findIndex","id","deleteNode","node","countSub","arr","current","isRead","params","split","temp","inArr1","inArr","item","Math","random","toString","isKey","count","countAdd","Option","KeyTree","databases","dbSize","shouldRefresh","tree","base","fontSize","whiteSpace","backgroundColor","padding","color","activeLink","prev","DataTree","size","connect","disconnect","update","delete","fn","deleteKey","insertKey","WebSocket","listen","keys","readDone","updateTree","updateDatabases","selectDB","info","notRead","checkRead","select","login","parseInt","setCurrent","default","x","y","minWidth","maxWidth","bounds","enableResizing","right","disableDragging","listHeight","onSelect","onToggle","toggled","animations","refresh","active","load","scan","Transform","String","List","Hash","Set","ZSet","Empty","do","check","insert","newKey","seconds","cmd","doPipe","TextArea","props","rename","view","ttl","maskClosable","onOk","renameKey","onCancel","closeRename","okText","cancelText","toUpperCase","openRename","onConfirm","icon","QuestionCircleOutlined","changeView","save","oldKey","TabPane","Panel","activeKey","panes","onEdit","targetKey","action","lastIndex","forEach","pane","find","component","createString","content","shift","element","hideAdd","tabBarStyle","margin","destroyInactiveTabPane","animated","tabBarGutter","tab","ServerList","modal","header","createHeader","all","onChooseOpen","confirm","onChooseClose","footer","choose","UpdateServer","MProgress","progress","setTimeout","strokeColor","showInfo","strokeWidth","percent","AddKey","keyType","getCurrent","Index","Login","App","unlisten","location","hash","window","history","createBrowserHistory","change","path","exact","from","to","Boolean","hostname","match","defaults","headers","baseURL","timeout","interceptors","use","maxCount","duration","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6b823f2a.chunk.js","sourcesContent":["class Event {\n\tevents: { [key: string]: (...args: any[]) => void } = {};\n\n\tadd(name: string, e: (...args: any[]) => void): string {\n\t\tthis.events[name] = e;\n\t\treturn name;\n\t}\n\n\tremove(name: string) {\n\t\tdelete this.events[name];\n\t}\n\n\temit(name: string, ...args: any[]) {\n\t\tthis.events[name] && this.events[name](...args);\n\t}\n}\n\nexport default new Event();\n","import React, { Component } from \"react\";\nimport { Button, Progress } from \"antd\";\nimport \"./header.scss\";\nimport Event from \"../../event/Event\";\nimport { AlignLeftOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nexport default class Header extends Component {\n\tstate = { date: \"\" };\n\n\taddKey = () => {\n\t\tEvent.emit(\"addKey\");\n\t};\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<Button type=\"link\" ghost onClick={this.addKey}>\n\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => Event.emit(\"openAddServer\")}>\n\t\t\t\t\t\t添加服务器\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" danger ghost onClick={() => Event.emit(\"openServerList\")}>\n\t\t\t\t\t\t<AlignLeftOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { config } from \"../../interface/config\";\n\nclass Config {\n\tgetCurrent() {\n\t\treturn JSON.parse(localStorage.getItem(\"current\") || \"{}\");\n\t}\n\n\tsetCurrent(cfg: config) {\n\t\tlocalStorage.setItem(\"current\", JSON.stringify(cfg));\n\t}\n\n\tall() {\n\t\treturn JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t}\n\n\tget(name: string): config {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\treturn cfg[name];\n\t}\n\n\tset(name: string, config: config) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tcfg[name] = config;\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tdelete(name: string) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tdelete cfg[name];\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tclear() {\n\t\tlocalStorage.removeItem(\"config\");\n\t}\n}\n\nexport default new Config();\n","class Layer {\n\tmask: any;\n\n\tconstructor() {\n\t\tlet div = document.createElement(\"div\");\n\t\tdiv.style.display = \"flex\";\n\t\tdiv.style.justifyContent = \"center\";\n\t\tdiv.style.alignItems = \"center\";\n\t\tdiv.style.width = \"100vw\";\n\t\tdiv.style.height = \"100vh\";\n\t\tdiv.style.position = \"absolute\";\n\t\tdiv.style.top = \"0\";\n\t\tdiv.style.left = \"0\";\n\t\tdiv.style.display = \"none\";\n\t\tthis.mask = div;\n\n\t\tlet child = document.createElement(\"div\");\n\t\tchild.className = \"load-mask-child\";\n\n\t\tdiv.appendChild(child);\n\t\tdocument.body.appendChild(div);\n\t}\n\n\tload() {\n\t\tthis.mask.style.display = \"flex\";\n\t}\n\n\tclose() {\n\t\tthis.mask.style.display = \"none\";\n\t}\n}\n\nexport default new Layer();\n","import { notification, message } from \"antd\";\nimport Layer from \"../components/layer/Layer\";\nclass Tools {\n\tQueryString(data: { [key: string]: string }) {\n\t\tlet s = \"\";\n\t\tfor (const key in data) {\n\t\t\ts += `${key}=${data[key]}&`;\n\t\t}\n\t\treturn s.slice(0, -1);\n\t}\n\n\tRange(begin: number, end: number): number[] {\n\t\tlet res = [];\n\t\tfor (let index = begin; index < end; index++) {\n\t\t\tres.push(index);\n\t\t}\n\t\treturn res;\n\t}\n\n\tNotification(response: any, success?: any, error?: any) {\n\t\tif (response.isAxiosError) {\n\t\t\tlet error = response.toJSON();\n\t\t\tnotification.error({ message: error.message });\n\t\t\tmessage.destroy();\n\t\t\tLayer.close();\n\t\t\tthrow error;\n\t\t}\n\t\tsuccess = success || response.data.msg;\n\t\terror = error || response.data.msg;\n\t\tif (response.data.code === 200) {\n\t\t\tnotification.success({ message: success });\n\t\t\treturn true;\n\t\t} else {\n\t\t\tnotification.error({ message: error });\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport default new Tools();\n","import { config } from \"../interface/config\";\nimport Axios from \"axios\";\nimport Qs from \"querystring\";\nimport Tools from \"../tools/Tools\";\n\nclass Command {\n\tasync register(type: string, config: config) {\n\t\treturn await Axios.post(`/redis/register/${type}`, Qs.stringify(config as any));\n\t}\n\n\tasync disconnect(serverName: string) {\n\t\treturn await Axios.post(`/redis/db/disconnect`, Qs.stringify({ name: serverName }));\n\t}\n\n\tasync selectDB(serverName: string, db: any) {\n\t\treturn await Axios.post(`/redis/db/select`, Qs.stringify({ name: serverName, db }));\n\t}\n\n\tasync scan(serverName: string) {\n\t\tlet response = await Axios.post(`/redis/db/scan`, Qs.stringify({ name: serverName }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync type(serverName: string, key: string) {\n\t\tlet response = await Axios.post(`/redis/key/type`, Qs.stringify({ name: serverName, key: key }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync do(serverName: string, key: string, ...args: any[]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\tname: serverName,\n\t\t\t\tkey: key,\n\t\t\t\targs: args.join(\" \")\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n\n\tasync doPipe(serverName: string, key: string, ...args: any[]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\tname: serverName,\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n}\n\nexport default new Command();\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addServer.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\n\nexport default class AddServer extends Component {\n\tstate = { visible: false, type: \"normal\", clusterHostInput: null };\n\tevent!: string;\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.event = Event.add(\"openAddServer\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(this.event);\n\t}\n\n\tname = \"\";\n\thost = \"\";\n\tport = \"\";\n\tpassword = \"\";\n\tmaster = \"\";\n\tcluster = new Array();\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"添加服务器\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tdestroyOnClose\n\t\t\t\tclassName=\"add-server\"\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tonChange={value => (this.name = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tonChange={value => (this.host = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tonChange={value => (this.port = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tonChange={value => (this.master = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tonChange={value => (this.password = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t创建\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tonChange={value => {\n\t\t\t\t\tthis.cluster[i] = value.target.value;\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tlet data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\t// console.log(data);\n\n\t\tlet response = await Command.register(this.state.type, data);\n\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tasync submit() {\n\t\tvar data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tif (this.name === \"\") return notification.error({ message: `服务器名不能为空!` });\n\n\t\tlet cfg = Config.get(this.name);\n\t\tif (cfg) return notification.error({ message: \"ERROR\", description: `${this.name} 已经存在!` });\n\n\t\tConfig.set(this.name, data);\n\n\t\tthis.onClose();\n\n\t\tEvent.emit(\"addServer\", this.name);\n\n\t\treturn notification.success({ message: \"SUCCESS\", description: \"创建成功\" });\n\t}\n}\n","import Socket from \"lows\";\n\nclass WebSocket {\n\tws: Socket;\n\tisStart = false;\n\n\tconstructor() {\n\t\tthis.ws = new Socket();\n\n\t\tthis.ws.config = {\n\t\t\thost: \"http://127.0.0.1\",\n\t\t\tport: \"12389\"\n\t\t};\n\n\t\tthis.ws.onOpen = () => {\n\t\t\tconsole.log(\"on open\");\n\t\t};\n\n\t\tthis.ws.onError = (err: any) => {\n\t\t\tconsole.log(\"on error\", err);\n\t\t};\n\n\t\tthis.ws.onClose = () => {\n\t\t\tconsole.log(\"on close\");\n\t\t};\n\t}\n\n\tstart() {\n\t\t!this.isStart && this.ws.start();\n\t\tthis.isStart = true;\n\t}\n\n\tclose() {\n\t\tthis.isStart && this.ws.close();\n\t\tthis.isStart = false;\n\t}\n\n\tlisten(...args: any[]) {\n\t\tthis.ws.addListener(...args);\n\t}\n}\n\nexport default new WebSocket();\n","class Tree {\n\tdataTree: any[] = [];\n\n\tcheckRead(data: any[]) {\n\t\tlet res: any[] = [];\n\t\tlet read = (data: any[]) => {\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i].children) {\n\t\t\t\t\tread(data[i].children);\n\t\t\t\t} else {\n\t\t\t\t\tif (!data[i].read) {\n\t\t\t\t\t\tres.push(data[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[i].read = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tread(data);\n\t\treturn res;\n\t}\n\n\tsearch(data: any[], key: string): any {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i].children) {\n\t\t\t\tlet res = this.search(data[i].children, key);\n\t\t\t\tif (res) return res;\n\t\t\t} else {\n\t\t\t\tif (data[i].prefix === key) {\n\t\t\t\t\treturn data[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tdeleteNode(data: any) {\n\t\tif (!data.parent) {\n\t\t\tlet index = this.dataTree.findIndex((v: any) => v.id === data.id);\n\t\t\tthis.dataTree.splice(index, 1);\n\t\t\treturn;\n\t\t}\n\t\tlet index = data.parent.children.findIndex((v: any) => v.id === data.id);\n\t\tdata.parent.children.splice(index, 1);\n\t\tif (data.parent.children.length === 0) this.deleteNode(data.parent);\n\t}\n\n\tdeleteKey(key: any) {\n\t\tvar node = this.search(this.dataTree, key);\n\t\tif (node) {\n\t\t\tthis.countSub(node);\n\t\t\tthis.deleteNode(node);\n\t\t}\n\t}\n\n\tinArr(arr: any, i: any) {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index][\"i\"] === i && arr[index].children) return arr[index];\n\t\t}\n\t\treturn false;\n\t}\n\n\tinArr1(arr: any, i: any): any {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index].id === i) return { parent: arr, current: arr[index] };\n\t\t}\n\t\treturn false;\n\t}\n\n\taddKey(key: string, isRead: boolean) {\n\t\tlet params = key.split(\":\");\n\t\tlet temp = this.dataTree;\n\t\tvar parent = null;\n\t\tfor (let index = 0; index < params.length; index++) {\n\t\t\tif (params.length === 1) {\n\t\t\t\tvar arr = this.inArr1(temp, params[index]);\n\t\t\t\tif (arr.parent) {\n\t\t\t\t\tarr.current.read = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.length !== 1) {\n\t\t\t\tvar arr = this.inArr(temp, params[index]);\n\t\t\t\tif (arr) {\n\t\t\t\t\tif (index !== params.length - 1) {\n\t\t\t\t\t\tparent = arr;\n\t\t\t\t\t\ttemp = arr.children;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (index === params.length - 1) {\n\t\t\t\t\tfor (let i = 0; i < temp.length; i++) {\n\t\t\t\t\t\tif (temp[i].name === key) {\n\t\t\t\t\t\t\ttemp[i].read = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet item: any = {\n\t\t\t\tid: Math.random().toString(16),\n\t\t\t\tname: index === params.length - 1 ? key : params[index],\n\t\t\t\tisKey: index === params.length - 1,\n\t\t\t\ti: params[index],\n\t\t\t\tprefix: params.slice(0, index + 1).join(\":\"),\n\t\t\t\tchildren: index === params.length - 1 ? null : [],\n\t\t\t\tread: isRead,\n\t\t\t\tcount: 0,\n\t\t\t\tparent: parent\n\t\t\t};\n\n\t\t\tif (index === params.length - 1) this.countAdd(item);\n\n\t\t\tparent = item;\n\n\t\t\ttemp.push(item);\n\t\t\ttemp = item.children;\n\t\t}\n\t}\n\n\tcountAdd(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count++;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countAdd(data.parent);\n\t\t}\n\t}\n\n\tcountSub(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count--;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countSub(data.parent);\n\t\t}\n\t}\n}\n\nexport default new Tree();\n","import React, { Component } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport \"./keyTree.scss\";\nimport { Select, Button, message, notification } from \"antd\";\nimport Tools from \"../../tools/Tools\";\nimport Event from \"../../event/Event\";\nimport Config from \"../config/Config\";\nimport WebSocket from \"../../ws/WebSocket\";\nimport { Treebeard } from \"react-treebeard\";\nimport Command from \"../../services/Command\";\nimport Layer from \"../layer/Layer\";\nimport DataTree from \"./Tree\";\n\nconst Option = Select.Option;\n\nexport default class KeyTree extends Component {\n\tstate = {\n\t\tdatabases: [] as any[],\n\t\tdataTree: [] as any[],\n\t\tdb: \"请选择DB\" as any\n\t};\n\n\tserverName = \"\";\n\ttype = \"\";\n\tdbSize = 0;\n\n\tupdateTree() {\n\t\tthis.setState({ dataTree: DataTree.dataTree });\n\t}\n\n\tupdateDatabases() {\n\t\tfor (let i = 0; i < this.state.databases.length; i++) {\n\t\t\tif (this.state.databases[i].key === this.state.db) {\n\t\t\t\tthis.state.databases[i].size = this.dbSize;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ databases: this.state.databases });\n\t}\n\n\tasync componentDidMount() {\n\t\tEvent.add(\"connect\", (type, serverName) => this.connect(type, serverName));\n\t\tEvent.add(\"disconnect\", serverName => this.disconnect(serverName));\n\t\tEvent.add(\"update\", serverName => this.update(serverName));\n\t\tEvent.add(\"delete\", serverName => this.delete(serverName));\n\t\tEvent.add(\"deleteKey\", (key, fn) => this.deleteKey(key, fn));\n\t\tEvent.add(\"insertKey\", (key, fn) => this.insertKey(key, this.shouldRefresh, fn));\n\n\t\tWebSocket.listen(\"scan\", (e: any, v: any) => {\n\t\t\tlet keys = v.keys || [];\n\t\t\tfor (let index = 0; index < keys.length; index++) {\n\t\t\t\tDataTree.addKey(keys[index], this.shouldRefresh);\n\t\t\t}\n\n\t\t\tEvent.emit(\"progress\", (v.current / v.dbSize) * 100);\n\n\t\t\tthis.dbSize = v.dbSize;\n\n\t\t\t// read done\n\t\t\tif (v.dbSize === v.current) {\n\t\t\t\tEvent.emit(\"progress\", 0);\n\t\t\t\tthis.readDone();\n\t\t\t}\n\t\t\t// render tree\n\t\t\tthis.updateTree();\n\n\t\t\t// render databases\n\t\t\tthis.updateDatabases();\n\n\t\t\t// console.log(this.state.dataTree);\n\t\t});\n\n\t\tawait this.connect(\"normal\", \"127.0.0.1\");\n\t\tthis.selectDB(0);\n\t}\n\n\tdeleteKey(key: string, fn: any) {\n\t\tDataTree.deleteKey(key);\n\t\tthis.dbSize--;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\tinsertKey(key: string, isRead: boolean, fn: any) {\n\t\tDataTree.addKey(key, this.shouldRefresh);\n\t\tthis.dbSize++;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\treadDone() {\n\t\tmessage.info(\"数据加载成功\");\n\t\tif (this.shouldRefresh) {\n\t\t\tvar notRead = DataTree.checkRead(DataTree.dataTree);\n\t\t\tfor (let i = 0; i < notRead.length; i++) {\n\t\t\t\tDataTree.deleteNode(notRead[i]);\n\t\t\t}\n\t\t}\n\t\tthis.shouldRefresh = false;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"connect\");\n\t\tEvent.remove(\"disconnect\");\n\t\tEvent.remove(\"update\");\n\t\tEvent.remove(\"delete\");\n\t}\n\n\tasync connect(type: string, serverName: any) {\n\t\tthis.setState({ select: null, dataTree: [], title: null });\n\t\tthis.state.dataTree = [];\n\t\tthis.state.databases = [];\n\t\tthis.state.db = \"请选择DB\";\n\t\tthis.serverName = serverName;\n\t\tthis.type = type;\n\t\tthis.dbSize = 0;\n\t\tDataTree.dataTree = [];\n\t\tlet res = await this.login();\n\t\tif (!res) return;\n\n\t\tfor (let i = 0; i < parseInt(res); i++) {\n\t\t\tthis.state.databases.push({ title: `db-${i}`, key: i, size: 0 });\n\t\t}\n\n\t\tmessage.success(\"连接成功\");\n\n\t\tConfig.setCurrent(Config.get(serverName));\n\n\t\tthis.updateDatabases();\n\t}\n\n\tdisconnect(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.setState({ select: [], dataTree: [], title: null });\n\t\t}\n\t}\n\n\tupdate(serverName: any) {\n\t\tEvent.emit(\"openUpdateServer\", serverName);\n\t}\n\n\tdelete(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.setState({ select: [], dataTree: [], title: null });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Rnd\n\t\t\t\tdefault={{ height: \"100%\", width: \"20%\", x: 0, y: 0 }}\n\t\t\t\tminWidth={\"20%\"}\n\t\t\t\tmaxWidth={\"40%\"}\n\t\t\t\tbounds=\".content\"\n\t\t\t\tenableResizing={{ right: true }}\n\t\t\t\tdisableDragging={true}\n\t\t\t\tclassName=\"key-tree\"\n\t\t\t>\n\t\t\t\t<div className=\"select-panel\">\n\t\t\t\t\t{this.state.databases.length > 0 ? (\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.db}\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\tlistHeight={600}\n\t\t\t\t\t\t\tonSelect={value => this.selectDB(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.databases.map(v => (\n\t\t\t\t\t\t\t\t<Option key={v.key} value={v.key}>\n\t\t\t\t\t\t\t\t\t{v.title} {v.size ? `(${v.size})` : \"\"}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"data-tree\">\n\t\t\t\t\t{this.state.dataTree.length > 0 ? (\n\t\t\t\t\t\t<Treebeard\n\t\t\t\t\t\t\tdata={this.state.dataTree}\n\t\t\t\t\t\t\tonToggle={(node, toggled) => this.onToggle(node, toggled)}\n\t\t\t\t\t\t\tstyle={this.style}\n\t\t\t\t\t\t\tanimations={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.serverName}({this.type})\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.refresh()}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Rnd>\n\t\t);\n\t}\n\n\tshouldRefresh = false;\n\trefresh(): void {\n\t\tthis.shouldRefresh = true;\n\t\tthis.selectDB(this.state.db);\n\t}\n\n\tstyle: any = {\n\t\ttree: {\n\t\t\tbase: {\n\t\t\t\tfontSize: \"12px\",\n\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\tbackgroundColor: \"#ffffff\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tpadding: \"5px\"\n\t\t\t},\n\t\t\tnode: { base: { color: \"red\" }, activeLink: { backgroundColor: \"#bae7ff\" } }\n\t\t}\n\t};\n\n\tprev: any;\n\n\tonToggle(node: import(\"react-treebeard\").TreeNode, toggled: boolean): void {\n\t\tif (this.prev) {\n\t\t\tthis.prev.active = false;\n\t\t}\n\n\t\tthis.prev = node;\n\n\t\tnode.active = true;\n\n\t\tif (node.children) {\n\t\t\tnode.toggled = toggled;\n\t\t} else {\n\t\t\tthis.onSelect(node.name);\n\t\t}\n\n\t\tthis.updateTree();\n\t}\n\n\tasync onSelect(key: string) {\n\t\tlet type = await Command.type(this.serverName, key);\n\t\tEvent.emit(\"selectKey\", this.serverName, type, key);\n\t}\n\n\tasync login() {\n\t\tLayer.load();\n\t\tlet cfg = Config.get(this.serverName);\n\t\tlet response = await Command.register(this.type, cfg);\n\t\tLayer.close();\n\t\tif (response.data.code !== 200) {\n\t\t\tTools.Notification(response);\n\t\t\treturn false;\n\t\t}\n\t\treturn response.data.msg[1];\n\t}\n\n\tasync selectDB(db: any) {\n\t\tif (this.state.db !== db) DataTree.dataTree = [];\n\t\tthis.state.db = db;\n\t\tlet response = await Command.selectDB(this.serverName, db);\n\t\tif (response.data.code !== 200) return Tools.Notification(response);\n\t\tawait Command.scan(this.serverName);\n\t}\n}\n","import { notification } from \"antd\";\nimport Tools from \"../tools/Tools\";\nimport Command from \"../services/Command\";\n\nclass Cmd {\n\tCmd(...args: any[]) {}\n}\n\nclass Transform {\n\tcheck(type: string): any {\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\treturn new String();\n\t\t\tcase \"list\":\n\t\t\t\treturn new List();\n\t\t\tcase \"hash\":\n\t\t\t\treturn new Hash();\n\t\t\tcase \"set\":\n\t\t\t\treturn new Set();\n\t\t\tcase \"zset\":\n\t\t\t\treturn new ZSet();\n\t\t\tdefault:\n\t\t\t\tnotification.error({ message: `Unsupported type ${type}` });\n\t\t\t\treturn new Empty();\n\t\t}\n\t}\n\n\tselect(serverName: string, type: string, key: string) {\n\t\treturn this.do(serverName, key, this.check(type).select(key));\n\t}\n\n\tupdate(serverName: string, type: string, key: string, value: string) {\n\t\treturn this.do(serverName, key, this.check(type).update(key, value));\n\t}\n\n\tinsert(serverName: string, type: string, key: string, value: string) {\n\t\treturn this.do(serverName, key, this.check(type).insert(key, value));\n\t}\n\n\tdelete(serverName: string, type: string, key: string) {\n\t\treturn this.do(serverName, key, this.check(type).delete(key));\n\t}\n\n\tttl(serverName: string, key: string) {\n\t\treturn this.do(serverName, key, `TTL ${key}`);\n\t}\n\n\trename(serverName: string, key: string, newKey: string) {\n\t\treturn this.do(serverName, key, `RENAME ${key} ${newKey}`);\n\t}\n\n\texpire(serverName: string, key: string, seconds: number) {\n\t\treturn this.do(serverName, key, `EXPIRE ${key} ${seconds}`);\n\t}\n\n\tasync doPipe(serverName: string, key: string, ...cmd: string[]) {\n\t\treturn await Command.doPipe(serverName, key, ...cmd);\n\t}\n\n\tasync do(serverName: string, key: string, cmd: string) {\n\t\treturn await Command.do(serverName, key, cmd);\n\t}\n}\n\nclass String {\n\tselect(key: string) {\n\t\treturn `GET ${key}`;\n\t}\n\tupdate(key: string, value: string) {\n\t\treturn `SET ${key} ${value}`;\n\t}\n\tinsert(key: string, value: string) {\n\t\treturn `SET ${key} ${value}`;\n\t}\n\tdelete(key: string) {\n\t\treturn `DEL ${key}`;\n\t}\n}\nclass List {\n\tselect() {}\n}\nclass Hash {\n\tselect() {}\n}\nclass Set {\n\tselect() {}\n}\nclass ZSet {\n\tselect() {}\n}\nclass Empty {\n\tselect() {}\n}\n\nexport default new Transform();\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./string.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\tserverName: string;\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class String extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.serverName = this.props.serverName;\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.serverName, this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = { key: \"\", value: \"\", rename: false, view: \"显示格式\" };\n\n\tserverName = \"\";\n\ttype = \"\";\n\tvalue = \"\";\n\tkey = \"\";\n\tttl = -1;\n\n\tasync select(serverName: string, type: string, key: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet value = await Transform.select(serverName, type, key);\n\t\tthis.value = value;\n\t\tlet ttl = await Transform.ttl(serverName, key);\n\t\tthis.ttl = ttl;\n\t\tthis.setState({ key: key, value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"string\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.serverName, this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.save()}>\n\t\t\t\t\t\t\t保存\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\tasync save() {\n\t\tlet r = await Transform.update(this.serverName, this.type, this.key, this.state.value);\n\t\tif (!r) return;\n\t\tthis.value = this.state.value;\n\t\tmessage.success(\"保存成功\");\n\t}\n\tchangeView(view: string): void {\n\t\tif (view === \"json\") {\n\t\t\tthis.state.value = JSON.stringify(JSON.parse(this.state.value), null, 4);\n\t\t}\n\t\tthis.setState({ view: view, value: this.state.value });\n\t}\n\n\tasync insert(serverName: string, type: string, key: string, value: string) {\n\t\treturn await Transform.insert(serverName, type, key, value);\n\t}\n\n\tasync delete(serverName: string, type: string, key: string) {\n\t\treturn await Transform.delete(serverName, type, key);\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.delete(this.serverName, this.type, this.state.key);\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(this.serverName, oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.serverName, this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ value: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\n\nexport default class List extends Component {\n\trender() {\n\t\treturn <div>list</div>;\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./panel.scss\";\nimport Event from \"../../event/Event\";\nimport String from \"./data/String\";\nimport List from \"./data/List\";\nimport { Tabs } from \"antd\";\nconst { TabPane } = Tabs;\nexport default class Panel extends Component {\n\tstate = { activeKey: \"\", panes: [] as any[] };\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tEvent.add(\"selectKey\", (serverName: string, type: string, key: string) => {\n\t\t\tif (this.state.panes.find(v => v.key === key)) {\n\t\t\t\tthis.setState({ activeKey: key });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet component = null;\n\n\t\t\tswitch (type) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tcomponent = this.createString(serverName, type, key);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"list\":\n\t\t\t\t\tcomponent = <List></List>;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hash\":\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"zset\":\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"set\":\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst { panes } = this.state;\n\n\t\t\tpanes.push({ title: key, content: component, key: key });\n\n\t\t\tif (panes.length > 3) panes.shift();\n\n\t\t\tthis.setState({ panes: panes, activeKey: key });\n\t\t});\n\t}\n\n\tcreateString(serverName: string, type: string, key: string) {\n\t\treturn <String parent={this} serverName={serverName} type={type} keys={key}></String>;\n\t}\n\n\tcomponentDidMount() {}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"selectKey\");\n\t}\n\n\tonChange = (activeKey: any) => {\n\t\t// console.log(activeKey);\n\t\tthis.setState({ activeKey });\n\t};\n\n\tonEdit = (targetKey: any, action: string | number) => {\n\t\tif (action === \"add\") {\n\t\t\tthis.add();\n\t\t} else {\n\t\t\tthis.remove(targetKey);\n\t\t}\n\t};\n\n\tupdate(serverName: string, type: string, oldKey: string, newKey: string) {\n\t\tfor (let i = 0; i < this.state.panes.length; i++) {\n\t\t\tconst element = this.state.panes[i];\n\t\t\tif (element.key === oldKey) {\n\t\t\t\telement.title = newKey;\n\t\t\t\telement.key = newKey;\n\t\t\t\telement.content = this.createString(serverName, type, newKey);\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes: this.state.panes, activeKey: newKey });\n\t}\n\n\tadd = () => {};\n\n\tremove = (targetKey: string) => {\n\t\tlet activeKey = this.state.activeKey;\n\t\tlet lastIndex: any;\n\t\tthis.state.panes.forEach((pane: { key: string }, i: number) => {\n\t\t\tif (pane.key === targetKey) {\n\t\t\t\tlastIndex = i - 1;\n\t\t\t}\n\t\t});\n\t\tconst panes = this.state.panes.filter((pane: { key: string }) => pane.key !== targetKey);\n\t\tif (panes.length && activeKey === targetKey) {\n\t\t\tif (lastIndex >= 0) {\n\t\t\t\tactiveKey = panes[lastIndex].key;\n\t\t\t} else {\n\t\t\t\tactiveKey = panes[0].key;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes, activeKey });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<Tabs\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tactiveKey={this.state.activeKey}\n\t\t\t\t\ttype=\"editable-card\"\n\t\t\t\t\tonEdit={this.onEdit}\n\t\t\t\t\thideAdd\n\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t\t\ttabBarStyle={{ margin: 0, minWidth: \"200px\" }}\n\t\t\t\t\tdestroyInactiveTabPane={true}\n\t\t\t\t\tanimated={false}\n\t\t\t\t\ttabBarGutter={0}\n\t\t\t\t>\n\t\t\t\t\t{this.state.panes.map(\n\t\t\t\t\t\t(pane: {\n\t\t\t\t\t\t\ttitle: React.ReactNode;\n\t\t\t\t\t\t\tkey: string | undefined;\n\t\t\t\t\t\t\tclosable: boolean | undefined;\n\t\t\t\t\t\t\tcontent: React.ReactNode;\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<TabPane\n\t\t\t\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n\t\t\t\t\t\t\t\ttab={pane.title}\n\t\t\t\t\t\t\t\tkey={pane.key}\n\t\t\t\t\t\t\t\tclosable={pane.closable}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{pane.content}\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Button, Modal } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./serverList.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\n\nexport default class ServerList extends Component {\n\tstate = { visible: false, modal: false, header: this.createHeader() };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openServerList\", () => this.onOpen());\n\t\tEvent.add(\"addServer\", () => this.setState({ header: this.createHeader() }));\n\t\tEvent.add(\"updateServer\", () => this.setState({ header: this.createHeader() }));\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openServerList\");\n\t}\n\n\tcreateHeader() {\n\t\tlet data = [];\n\t\tlet config = Config.all();\n\t\tfor (const serverName in config) {\n\t\t\tdata.push(\n\t\t\t\t<div className=\"db-header\" key={serverName}>\n\t\t\t\t\t<div>{serverName}</div>\n\t\t\t\t\t<div className=\"button\">\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.connect(serverName)}>\n\t\t\t\t\t\t\t连接\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.update(serverName)}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.disconnect(serverName)}>\n\t\t\t\t\t\t\t断开\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.delete(serverName)}>\n\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn data;\n\t}\n\n\tupdate(serverName: string) {\n\t\tEvent.emit(\"update\", serverName);\n\t}\n\n\tserverName = \"\";\n\tconnect(serverName: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.onChooseOpen();\n\t}\n\n\tdisconnect(serverName: string) {\n\t\tthis.onClose();\n\t\tEvent.emit(\"disconnect\", serverName);\n\t\tCommand.disconnect(serverName);\n\t}\n\n\tdelete(serverName: string) {\n\t\tModal.confirm({\n\t\t\ttitle: `确定要删除 ${serverName} 的配置吗`,\n\t\t\tokText: \"确认\",\n\t\t\tcancelText: \"取消\",\n\t\t\tonOk: () => {\n\t\t\t\tConfig.delete(serverName);\n\t\t\t\tthis.setState({ header: this.createHeader() });\n\t\t\t\tEvent.emit(\"delete\", serverName);\n\t\t\t}\n\t\t});\n\t}\n\n\tonChooseClose() {\n\t\tthis.setState({ modal: false });\n\t}\n\n\tonChooseOpen() {\n\t\tthis.setState({ modal: true });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"服务器列表\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tclassName=\"server-list\"\n\t\t\t\tdestroyOnClose\n\t\t\t>\n\t\t\t\t{this.state.header}\n\t\t\t\t<Modal\n\t\t\t\t\tdestroyOnClose\n\t\t\t\t\ttitle={`选择连接方式`}\n\t\t\t\t\tvisible={this.state.modal}\n\t\t\t\t\tclassName=\"choose-server\"\n\t\t\t\t\tonCancel={() => this.onChooseClose()}\n\t\t\t\t\tclosable={true}\n\t\t\t\t\tmaskClosable={true}\n\t\t\t\t\tfooter={null}\n\t\t\t\t>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"normal\")}>\n\t\t\t\t\t\tNormal\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"cluster\")}>\n\t\t\t\t\t\tCluster\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tchoose(type: string): void {\n\t\tEvent.emit(\"connect\", type, this.serverName);\n\t\tthis.onChooseClose();\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport Event from \"../../event/Event\";\nimport { Radio, Input, Button, notification, message } from \"antd\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\nimport \"./updateServer.scss\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\nimport Layer from \"../layer/Layer\";\n\nexport default class UpdateServer extends Component {\n\tstate = { visible: false, config: {} as config, type: \"normal\", clusterHostInput: null };\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tserverName = \"\";\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openUpdateServer\", serverName => {\n\t\t\tthis.serverName = serverName;\n\t\t\tlet config = Config.get(serverName);\n\t\t\tif (!config.cluster) config.cluster = [];\n\t\t\tthis.setState({ config: config }, () => this.setState({ clusterHostInput: this.createCluster() }));\n\t\t\tthis.onOpen();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openUpdateServer\");\n\t}\n\n\tonChange(type: string, value: string) {\n\t\t(this.state.config as any)[type] = value;\n\t\tthis.setState({ config: this.state.config, clusterHostInput: this.createCluster() });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`修改 ${this.state.config.name} 配置`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"update-server\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tvalue={this.state.config.name}\n\t\t\t\t\t\tonChange={value => this.onChange(\"name\", value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tvalue={this.state.config.host}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"host\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tvalue={this.state.config.port}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"port\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tvalue={this.state.config.master}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"master\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tvalue={this.state.config.password}\n\t\t\t\t\t\tonChange={value => this.onChange(\"password\", value.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.state.config.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tvalue={this.state.config.cluster[i]}\n\t\t\t\tonChange={value => {\n\t\t\t\t\tthis.state.config.cluster[i] = value.target.value;\n\t\t\t\t\tthis.setState({ config: this.state.config, clusterHostInput: this.createCluster() });\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.state.config.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.state.config.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tthis.state.config.cluster = this.state.config.cluster.filter(v => v !== \"\");\n\t\tLayer.load();\n\t\tlet response = await Command.register(this.state.type, this.state.config);\n\t\tLayer.close();\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tsubmit() {\n\t\tConfig.delete(this.serverName);\n\t\tthis.state.config.cluster = this.state.config.cluster.filter(v => v !== \"\");\n\t\tConfig.set(this.state.config.name, this.state.config);\n\t\tmessage.success(\"修改成功\");\n\t\tthis.onClose();\n\t\tEvent.emit(\"updateServer\");\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport \"./progress.scss\";\nimport Event from \"../../event/Event\";\n\nexport default class MProgress extends Component {\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"progress\");\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"progress\", v => this.progress(v));\n\t}\n\n\tprogress(v: number) {\n\t\tif (v === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ progress: v });\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tthis.setState({ progress: v });\n\t\t}\n\t}\n\n\tstate = { progress: 0 };\n\n\trender() {\n\t\treturn (\n\t\t\t<Progress\n\t\t\t\tstrokeColor={{\n\t\t\t\t\t\"0%\": \"#108ee9\",\n\t\t\t\t\t\"100%\": \"#87d068\"\n\t\t\t\t}}\n\t\t\t\tstyle={{ width: \"100%\", height: \"1px\" }}\n\t\t\t\tshowInfo={false}\n\t\t\t\tstrokeWidth={3}\n\t\t\t\tpercent={this.state.progress}\n\t\t\t\tclassName=\"progress\"\n\t\t\t/>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification, Modal, message } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addKey.scss\";\nimport Command from \"../../services/Command\";\nimport Transform from \"../../transform/Transform\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\n\nexport default class AddKey extends Component {\n\tstate = { visible: false, keyType: \"string\", key: \"\", value: \"\" };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.config = Config.getCurrent();\n\t\tif (this.config.name === \"\") {\n\t\t\tmessage.error(\"请连接服务器!\");\n\t\t\treturn this.onClose();\n\t\t}\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"addKey\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"addKey\");\n\t}\n\n\tconfig: config = {} as config;\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`添加KEY`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"add-key\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div className=\"select-box\">\n\t\t\t\t\t<Radio.Group\n\t\t\t\t\t\tvalue={this.state.keyType}\n\t\t\t\t\t\tonChange={value => this.setState({ keyType: value.target.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Radio.Button value=\"string\">string</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"list\">list</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"hash\">hash</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"set\">set</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"zset\">zset</Radio.Button>\n\t\t\t\t\t</Radio.Group>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"input-box\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"KEY\"\n\t\t\t\t\t\tplaceholder=\"key\"\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Value\"\n\t\t\t\t\t\tplaceholder=\"value\"\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={value => this.setState({ value: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => this.add()}>\n\t\t\t\t\t\t确定\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t取消\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\tasync add() {\n\t\tif (this.state.key === \"\") {\n\t\t\tmessage.error(\"KEY不能为空!\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.state.value === \"\") {\n\t\t\tmessage.error(\"VALUE不能为空!\");\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (this.state.keyType) {\n\t\t\tcase \"string\":\n\t\t\t\tlet r = await Transform.insert(this.config.name, this.state.keyType, this.state.key, this.state.value);\n\t\t\t\tif (!r) return;\n\t\t\t\tmessage.success(\"添加成功!\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage.error(\"不支持的类型!\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tEvent.emit(\"insertKey\", this.state.key);\n\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport Header from \"../../components/header/Header\";\nimport AddServer from \"../../components/addServer/AddServer\";\nimport KeyTree from \"../../components/keyTree/KeyTree\";\nimport Panel from \"../../components/panel/Panel\";\nimport ServerList from \"../../components/serverList/ServerList\";\nimport UpdateServer from \"../../components/updateServer/UpdateServer\";\nimport MProgress from \"../../components/progress/Progress\";\nimport AddKey from \"../../components/addKey/AddKey\";\n\nclass Index extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"index\">\n\t\t\t\t<AddKey></AddKey>\n\t\t\t\t<AddServer></AddServer>\n\t\t\t\t<ServerList></ServerList>\n\t\t\t\t<UpdateServer></UpdateServer>\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<Header></Header>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<KeyTree></KeyTree>\n\t\t\t\t\t<Panel></Panel>\n\t\t\t\t</div>\n\t\t\t\t<MProgress></MProgress>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Index;\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport \"./login.scss\";\n\nfunction Login() {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<Button type=\"default\">Button</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory, History, UnregisterCallback, Location } from \"history\";\nimport \"./App.scss\";\nimport Index from \"./pages/index/Index\";\nimport Login from \"./pages/login/Login\";\nimport WebSocket from \"./ws/WebSocket\";\n\nexport default class App extends Component {\n\tunlisten!: UnregisterCallback;\n\n\tchange(location: Location<History.PoorMansUnknown>) {\n\t\tif (false) return (window.location.hash = \"/login\");\n\t\tif (location.hash === \"#/login\") return (window.location.hash = \"/index\");\n\t}\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tWebSocket.start();\n\t}\n\n\tcomponentDidMount() {\n\t\tconst history = createBrowserHistory();\n\t\t// Get the current location.\n\t\tconst location = history.location;\n\n\t\tthis.change(location);\n\n\t\t// Listen for changes to the current location.\n\t\tthis.unlisten = history.listen((location, action) => {\n\t\t\t// location is an object like window.location\n\t\t\tthis.change(location);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tWebSocket.close();\n\t\tthis.unlisten();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<HashRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/index\" component={Index} />\n\t\t\t\t\t<Route path=\"/login\" component={Login} exact />\n\t\t\t\t\t<Redirect from=\"**\" to=\"/index\" />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { message, notification } from \"antd\";\n\nAxios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\nAxios.defaults.baseURL = \"http://127.0.0.1:12388\";\n\nAxios.defaults.timeout = 5000;\n\nAxios.interceptors.response.use(\n\tresponse => {\n\t\treturn response;\n\t},\n\terror => {\n\t\treturn error;\n\t}\n);\n\nmessage.config({ maxCount: 3 });\n\nnotification.config({ duration: 2, placement: \"bottomRight\" });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}