{"version":3,"sources":["app/event/Event.ts","app/components/header/Header.tsx","app/components/config/Config.ts","app/components/layer/Layer.ts","app/tools/Tools.ts","app/services/Command.ts","app/components/addServer/AddServer.tsx","app/ws/WebSocket.ts","app/components/keyTree/Tree.ts","app/components/keyTree/KeyTree.tsx","app/transform/Transform.ts","app/components/panel/data/String.tsx","app/components/panel/data/List.tsx","app/components/panel/data/Hash.tsx","app/components/panel/Panel.tsx","app/components/serverList/ServerList.tsx","app/components/updateServer/UpdateServer.tsx","app/components/progress/Progress.tsx","app/components/addKey/AddKey.tsx","app/pages/index/Index.tsx","app/pages/login/Login.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["events","name","e","this","args","Header","state","date","addKey","Event","emit","className","type","ghost","onClick","PlusOutlined","danger","AlignLeftOutlined","Component","JSON","parse","localStorage","getItem","cfg","setItem","stringify","removeItem","setServerName","db","parseInt","status","Math","random","toString","slice","config","mask","div","document","createElement","style","display","justifyContent","alignItems","width","height","position","top","left","child","appendChild","body","data","s","key","begin","end","res","index","push","response","success","error","isAxiosError","toJSON","console","log","notification","message","destroy","Layer","close","msg","code","Config","getServerName","getDB","uuid","getUUID","Axios","post","Qs","serverName","serverNameAndDB","Tools","Notification","AddServer","visible","clusterHostInput","event","host","port","password","master","cluster","setState","add","onOpen","remove","title","placement","closable","onClose","getContainer","destroyOnClose","Group","value","onChange","target","Button","spellCheck","addonBefore","placeholder","addHost","submit","test","map","v","i","addonAfter","MinusCircleOutlined","removeHost","splice","createCluster","filter","Command","register","get","description","set","ws","isStart","Socket","Global","OnOpen","Emit","AddListener","setStatus","window","location","hash","OnError","err","OnClose","delStatus","fn","Start","Close","RemoveListener","dataTree","read","length","children","search","prefix","parent","findIndex","id","deleteNode","node","countSub","arr","current","isRead","params","split","temp","arr1","inArr1","inArr","item","isKey","join","count","countAdd","Option","KeyTree","databases","dbSize","prev","shouldRefresh","tree","base","fontSize","whiteSpace","backgroundColor","padding","color","activeLink","DataTree","size","connect","disconnect","update","delete","deleteKey","insertKey","WebSocket","listen","keys","readDone","updateTree","updateDatabases","info","notRead","checkRead","reset","login","setCurrent","delDB","delServerName","delCurrent","default","x","y","minWidth","maxWidth","bounds","enableResizing","right","disableDragging","listHeight","onSelect","selectDB","onToggle","toggled","animations","refresh","active","load","setDB","scan","Transform","RString","List","Hash","Set","ZSet","Empty","do","check","select","insert","method","newKey","seconds","cmd","doPipe","page","curser","k","TextArea","String","props","showValue","rename","view","ttl","maskClosable","onOk","renameKey","onCancel","closeRename","okText","cancelText","toUpperCase","openRename","onConfirm","icon","QuestionCircleOutlined","changeView","save","oldKey","list","addRow","addRowValue","len","selectIndex","listIndex","vlist","React","createRef","onScroll","renderItem","Object","assign","background","el","selectItem","prevPage","setPage","go","nextPage","ceil","call","listArray","forceUpdateGrid","closeAddRow","delRow","openAddRow","ref","overscanRowCount","rowCount","rowHeight","rowRenderer","scrollToAlignment","LeftOutlined","RightOutlined","onBlur","showKey","addRowKey","allData","loadAllData","cursor","r","onChangeShowKey","onChangeShowValue","TabPane","Panel","activeKey","panes","onEdit","targetKey","action","lastIndex","forEach","pane","find","component","createComponent","content","shift","createString","createList","createHash","element","hideAdd","tabBarStyle","margin","destroyInactiveTabPane","animated","tabBarGutter","tab","ServerList","modal","header","createHeader","all","onChooseOpen","confirm","onChooseClose","footer","choose","UpdateServer","MProgress","progress","setTimeout","strokeColor","showInfo","strokeWidth","percent","AddKey","keyType","getCurrent","createNormal","createSpecial","Index","Login","LoadingOutlined","App","unlisten","start","getStatus","history","createBrowserHistory","change","path","exact","from","to","Boolean","hostname","match","defaults","headers","baseURL","timeout","interceptors","use","maxCount","duration","createUUID","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d70655ed.chunk.js","sourcesContent":["class Event {\n\tevents: { [key: string]: (...args: any[]) => void } = {};\n\n\tadd(name: string, e: (...args: any[]) => void): string {\n\t\tthis.events[name] = e;\n\t\treturn name;\n\t}\n\n\tremove(name: string) {\n\t\tdelete this.events[name];\n\t}\n\n\temit(name: string, ...args: any[]) {\n\t\tthis.events[name] && this.events[name](...args);\n\t}\n}\n\nexport default new Event();\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./header.scss\";\nimport Event from \"../../event/Event\";\nimport { AlignLeftOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nexport default class Header extends Component {\n\tstate = { date: \"\" };\n\n\taddKey = () => {\n\t\tEvent.emit(\"addKey\");\n\t};\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<Button type=\"link\" ghost onClick={this.addKey}>\n\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => Event.emit(\"openAddServer\")}>\n\t\t\t\t\t\t添加服务器\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" danger ghost onClick={() => Event.emit(\"openServerList\")}>\n\t\t\t\t\t\t<AlignLeftOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { config } from \"../../interface/config\";\n\nclass Config {\n\tgetCurrent() {\n\t\treturn JSON.parse(localStorage.getItem(\"current\") || \"{}\");\n\t}\n\n\tsetCurrent(cfg: config) {\n\t\tlocalStorage.setItem(\"current\", JSON.stringify(cfg));\n\t}\n\n\tdelCurrent() {\n\t\tlocalStorage.removeItem(\"current\");\n\t}\n\n\tsetServerName(setServerName: string) {\n\t\tlocalStorage.setItem(\"serverName\", setServerName);\n\t}\n\n\tgetServerName() {\n\t\treturn localStorage.getItem(\"serverName\");\n\t}\n\n\tdelServerName() {\n\t\tlocalStorage.removeItem(\"serverName\");\n\t}\n\n\tsetDB(db: number) {\n\t\tlocalStorage.setItem(\"db\", `${db}`);\n\t}\n\n\tgetDB() {\n\t\tlet db = localStorage.getItem(\"db\");\n\t\tif (!db) return null;\n\t\treturn parseInt(db);\n\t}\n\n\tdelDB() {\n\t\tlocalStorage.removeItem(\"db\");\n\t}\n\n\tsetStatus(status: any) {\n\t\tlocalStorage.setItem(\"status\", status);\n\t}\n\n\tgetStatus() {\n\t\treturn localStorage.getItem(\"status\");\n\t}\n\n\tdelStatus() {\n\t\tlocalStorage.removeItem(\"status\");\n\t}\n\n\tcreateUUID() {\n\t\tlocalStorage.setItem(\n\t\t\t\"uuid\",\n\t\t\tMath.random()\n\t\t\t\t.toString(16)\n\t\t\t\t.slice(2)\n\t\t);\n\t}\n\n\tgetUUID() {\n\t\treturn localStorage.getItem(\"uuid\");\n\t}\n\n\tall() {\n\t\treturn JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t}\n\n\tget(name: string): config {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\treturn cfg[name];\n\t}\n\n\tset(name: string, config: config) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tcfg[name] = config;\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tdelete(name: string) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tdelete cfg[name];\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tclear() {\n\t\tlocalStorage.removeItem(\"config\");\n\t}\n}\n\nexport default new Config();\n","class Layer {\n\tmask: any;\n\n\tconstructor() {\n\t\tlet div = document.createElement(\"div\");\n\t\tdiv.style.display = \"flex\";\n\t\tdiv.style.justifyContent = \"center\";\n\t\tdiv.style.alignItems = \"center\";\n\t\tdiv.style.width = \"100vw\";\n\t\tdiv.style.height = \"100vh\";\n\t\tdiv.style.position = \"absolute\";\n\t\tdiv.style.top = \"0\";\n\t\tdiv.style.left = \"0\";\n\t\tdiv.style.display = \"none\";\n\t\tthis.mask = div;\n\n\t\tlet child = document.createElement(\"div\");\n\t\tchild.className = \"load-mask-child\";\n\n\t\tdiv.appendChild(child);\n\t\tdocument.body.appendChild(div);\n\t}\n\n\tload() {\n\t\tthis.mask.style.display = \"flex\";\n\t}\n\n\tclose() {\n\t\tthis.mask.style.display = \"none\";\n\t}\n}\n\nexport default new Layer();\n","import { notification, message } from \"antd\";\nimport Layer from \"../components/layer/Layer\";\nclass Tools {\n\tQueryString(data: { [key: string]: string }) {\n\t\tlet s = \"\";\n\t\tfor (const key in data) {\n\t\t\ts += `${key}=${data[key]}&`;\n\t\t}\n\t\treturn s.slice(0, -1);\n\t}\n\n\tRange(begin: number, end: number): number[] {\n\t\tlet res = [];\n\t\tfor (let index = begin; index < end; index++) {\n\t\t\tres.push(index);\n\t\t}\n\t\treturn res;\n\t}\n\n\tNotification(response: any, success?: any, error?: any) {\n\t\tif (response.isAxiosError) {\n\t\t\tlet error = response.toJSON();\n\t\t\tconsole.log(error);\n\t\t\tnotification.error({ message: error.message });\n\t\t\tmessage.destroy();\n\t\t\tLayer.close();\n\t\t\tthrow error;\n\t\t}\n\t\tsuccess = success || response.data.msg;\n\t\terror = error || response.data.msg;\n\t\tif (response.data.code === 200) {\n\t\t\tconsole.log(response.data);\n\t\t\tnotification.success({ message: success });\n\t\t\treturn true;\n\t\t} else {\n\t\t\tnotification.error({ message: error });\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport default new Tools();\n","import { config } from \"../interface/config\";\nimport Axios from \"axios\";\nimport Qs from \"querystring\";\nimport Tools from \"../tools/Tools\";\nimport Config from \"../components/config/Config\";\nimport { notification } from \"antd\";\n\nclass Command {\n\tserverNameAndDB(): any {\n\t\tlet name = Config.getServerName();\n\t\tlet db = Config.getDB();\n\t\tif (name === null) return notification.error({ message: \"请连接服务!\" });\n\t\tif (db === null) return notification.error({ message: \"请选择DB!\" });\n\t\treturn { name, db };\n\t}\n\n\tuuid() {\n\t\tlet uuid = Config.getUUID();\n\t\tif (!uuid) return notification.error({ message: \"uuid is empty!\" });\n\t\treturn { uuid };\n\t}\n\n\tasync register(type: string, cfg: config) {\n\t\treturn await Axios.post(`/redis/register/${type}`, Qs.stringify({ ...this.uuid(), ...cfg }));\n\t}\n\n\tasync disconnect(serverName: string) {\n\t\treturn await Axios.post(`/redis/db/disconnect`, Qs.stringify({ name: serverName, ...this.uuid() }));\n\t}\n\n\tasync selectDB(serverName: string, db: any) {\n\t\treturn await Axios.post(`/redis/db/select`, Qs.stringify({ name: serverName, db, ...this.uuid() }));\n\t}\n\n\tasync scan() {\n\t\tlet response = await Axios.post(`/redis/db/scan`, Qs.stringify({ ...this.serverNameAndDB(), ...this.uuid() }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync type(key: string) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/type`,\n\t\t\tQs.stringify({ ...this.serverNameAndDB(), key: key, ...this.uuid() })\n\t\t);\n\t\treturn response.data.msg;\n\t}\n\n\tasync do(key: string, args: any[]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\t...this.serverNameAndDB(),\n\t\t\t\t...this.uuid(),\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n\n\tasync doPipe(key: string, args: any[][]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\t...this.serverNameAndDB(),\n\t\t\t\t...this.uuid(),\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n}\n\nexport default new Command();\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addServer.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\n\nexport default class AddServer extends Component {\n\tstate = { visible: false, type: \"normal\", clusterHostInput: null };\n\tevent!: string;\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.event = Event.add(\"openAddServer\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(this.event);\n\t}\n\n\tname = \"\";\n\thost = \"\";\n\tport = \"\";\n\tpassword = \"\";\n\tmaster = \"\";\n\tcluster: any[] = [];\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"添加服务器\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tdestroyOnClose\n\t\t\t\tclassName=\"add-server\"\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tonChange={value => (this.name = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tonChange={value => (this.host = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tonChange={value => (this.port = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tonChange={value => (this.master = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tonChange={value => (this.password = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t创建\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tonChange={value => {\n\t\t\t\t\tthis.cluster[i] = value.target.value;\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tlet data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tlet response = await Command.register(this.state.type, data);\n\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tasync submit() {\n\t\tvar data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tif (this.name === \"\") return notification.error({ message: `服务器名不能为空!` });\n\n\t\tlet cfg = Config.get(this.name);\n\t\tif (cfg) return notification.error({ message: \"ERROR\", description: `${this.name} 已经存在!` });\n\n\t\tConfig.set(this.name, data);\n\n\t\tthis.onClose();\n\n\t\tEvent.emit(\"addServer\", this.name);\n\n\t\treturn notification.success({ message: \"SUCCESS\", description: \"创建成功\" });\n\t}\n}\n","import Socket from \"lows\";\nimport Config from \"../components/config/Config\";\n\nclass WebSocket {\n\tws: Socket;\n\tisStart = false;\n\n\tconstructor() {\n\t\tthis.ws = new Socket({\n\t\t\thost: \"http://127.0.0.1\",\n\t\t\tport: \"12389\"\n\t\t});\n\n\t\tthis.ws.Global = { uuid: Config.getUUID() };\n\n\t\tthis.ws.OnOpen = () => {\n\t\t\tconsole.log(\"on open\");\n\t\t\tthis.ws.Emit(\"/redis/login/login\", {});\n\t\t};\n\n\t\tthis.ws.AddListener(\"/redis/login/login\", (e: any, data: any) => {\n\t\t\tConfig.setStatus(\"ready\");\n\t\t\twindow.location.hash = \"#/index\";\n\t\t});\n\n\t\tthis.ws.OnError = (err: any) => {\n\t\t\tconsole.log(\"on error\", err);\n\t\t};\n\n\t\tthis.ws.OnClose = () => {\n\t\t\tConfig.delStatus();\n\t\t\twindow.location.hash = \"#/login\";\n\t\t\tconsole.log(\"on close\");\n\t\t};\n\t}\n\n\tstart(fn: any) {\n\t\t!this.isStart && this.ws.Start(fn);\n\t\tthis.isStart = true;\n\t}\n\n\tclose() {\n\t\tthis.isStart && this.ws.Close();\n\t\tthis.isStart = false;\n\t}\n\n\tlisten(...args: any[]) {\n\t\tthis.ws.AddListener(...args);\n\t}\n\n\tremove(...args: any[]) {\n\t\tthis.ws.RemoveListener(...args);\n\t}\n}\n\nexport default new WebSocket();\n","class Tree {\n\tdataTree: any[] = [];\n\n\tcheckRead(data: any[]) {\n\t\tlet res: any[] = [];\n\t\tlet read = (data: any[]) => {\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i].children) {\n\t\t\t\t\tread(data[i].children);\n\t\t\t\t} else {\n\t\t\t\t\tif (!data[i].read) {\n\t\t\t\t\t\tres.push(data[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[i].read = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tread(data);\n\t\treturn res;\n\t}\n\n\tsearch(data: any[], key: string): any {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i].children) {\n\t\t\t\tlet res = this.search(data[i].children, key);\n\t\t\t\tif (res) return res;\n\t\t\t} else {\n\t\t\t\tif (data[i].prefix === key) {\n\t\t\t\t\treturn data[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tdeleteNode(data: any) {\n\t\tif (!data.parent) {\n\t\t\tlet index = this.dataTree.findIndex((v: any) => v.id === data.id);\n\t\t\tthis.dataTree.splice(index, 1);\n\t\t\treturn;\n\t\t}\n\t\tlet index = data.parent.children.findIndex((v: any) => v.id === data.id);\n\t\tdata.parent.children.splice(index, 1);\n\t\tif (data.parent.children.length === 0) this.deleteNode(data.parent);\n\t}\n\n\tdeleteKey(key: any) {\n\t\tvar node = this.search(this.dataTree, key);\n\t\tif (node) {\n\t\t\tthis.countSub(node);\n\t\t\tthis.deleteNode(node);\n\t\t}\n\t}\n\n\tinArr(arr: any, i: any) {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index][\"i\"] === i && arr[index].children) return arr[index];\n\t\t}\n\t\treturn false;\n\t}\n\n\tinArr1(arr: any, i: any): any {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index].i === i && !arr[index].children) return { parent: arr, current: arr[index] };\n\t\t}\n\t\treturn false;\n\t}\n\n\taddKey(key: string, isRead: boolean) {\n\t\tlet params = key.split(\":\");\n\t\tlet temp = this.dataTree;\n\t\tvar parent = null;\n\t\tfor (let index = 0; index < params.length; index++) {\n\t\t\tif (params.length === 1) {\n\t\t\t\tvar arr1 = this.inArr1(temp, params[index]);\n\t\t\t\tif (arr1) {\n\t\t\t\t\tarr1.current.read = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.length !== 1) {\n\t\t\t\tvar arr = this.inArr(temp, params[index]);\n\t\t\t\tif (arr) {\n\t\t\t\t\tif (index !== params.length - 1) {\n\t\t\t\t\t\tparent = arr;\n\t\t\t\t\t\ttemp = arr.children;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (index === params.length - 1) {\n\t\t\t\t\tfor (let i = 0; i < temp.length; i++) {\n\t\t\t\t\t\tif (temp[i].name === key) {\n\t\t\t\t\t\t\ttemp[i].read = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet item: any = {\n\t\t\t\tid: Math.random().toString(16),\n\t\t\t\tname: index === params.length - 1 ? key : params[index],\n\t\t\t\tisKey: index === params.length - 1,\n\t\t\t\ti: params[index],\n\t\t\t\tprefix: params.slice(0, index + 1).join(\":\"),\n\t\t\t\tchildren: index === params.length - 1 ? null : [],\n\t\t\t\tread: isRead,\n\t\t\t\tcount: 0,\n\t\t\t\tparent: parent\n\t\t\t};\n\n\t\t\tif (index === params.length - 1) this.countAdd(item);\n\n\t\t\tparent = item;\n\n\t\t\ttemp.push(item);\n\t\t\ttemp = item.children;\n\t\t}\n\t}\n\n\tcountAdd(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count++;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countAdd(data.parent);\n\t\t}\n\t}\n\n\tcountSub(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count--;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countSub(data.parent);\n\t\t}\n\t}\n}\n\nexport default new Tree();\n","import React, { Component } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport \"./keyTree.scss\";\nimport { Select, Button, message } from \"antd\";\nimport Tools from \"../../tools/Tools\";\nimport Event from \"../../event/Event\";\nimport Config from \"../config/Config\";\nimport WebSocket from \"../../ws/WebSocket\";\nimport { Treebeard } from \"react-treebeard-ts\";\nimport Command from \"../../services/Command\";\nimport Layer from \"../layer/Layer\";\nimport DataTree from \"./Tree\";\n\nconst Option = Select.Option;\n\nexport default class KeyTree extends Component {\n\tstate = {\n\t\tdatabases: [] as any[],\n\t\tdataTree: [] as any[],\n\t\tdb: \"请选择DB\" as any\n\t};\n\n\tserverName = \"\";\n\ttype = \"\";\n\tdbSize = 0;\n\tprev: any = null;\n\tshouldRefresh = false;\n\n\t// constructor(props: any) {\n\t// \tsuper(props);\n\t// }\n\n\tupdateTree() {\n\t\tthis.setState({ dataTree: DataTree.dataTree });\n\t}\n\n\tupdateDatabases() {\n\t\tlet { databases } = this.state;\n\t\tfor (let i = 0; i < databases.length; i++) {\n\t\t\tif (databases[i].key === this.state.db) {\n\t\t\t\tdatabases[i].size = this.dbSize;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ databases: databases });\n\t}\n\n\tasync componentDidMount() {\n\t\tEvent.add(\"connect\", (type, serverName) => this.connect(type, serverName));\n\t\tEvent.add(\"disconnect\", serverName => this.disconnect(serverName));\n\t\tEvent.add(\"update\", serverName => this.update(serverName));\n\t\tEvent.add(\"delete\", serverName => this.delete(serverName));\n\t\tEvent.add(\"deleteKey\", (key, fn) => this.deleteKey(key, fn));\n\t\tEvent.add(\"insertKey\", (key, fn) => this.insertKey(key, this.shouldRefresh, fn));\n\n\t\tWebSocket.listen(\"scan\", (e: any, v: any) => {\n\t\t\tlet keys = v.keys || [];\n\n\t\t\tEvent.emit(\"progress\", (v.current / v.dbSize) * 100);\n\n\t\t\tfor (let index = 0; index < keys.length; index++) {\n\t\t\t\tDataTree.addKey(keys[index], this.shouldRefresh);\n\t\t\t}\n\n\t\t\tthis.dbSize = v.dbSize;\n\n\t\t\t// read done\n\t\t\tif (v.dbSize === v.current) {\n\t\t\t\tEvent.emit(\"progress\", 0);\n\t\t\t\tthis.readDone();\n\t\t\t}\n\t\t\t// render tree\n\t\t\tthis.updateTree();\n\n\t\t\t// render databases\n\t\t\tthis.updateDatabases();\n\t\t});\n\n\t\t// await this.connect(\"normal\", \"127.0.0.1\");\n\t\t// this.selectDB(0);\n\t}\n\n\tdeleteKey(key: string, fn: any) {\n\t\tDataTree.deleteKey(key);\n\t\tthis.dbSize--;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\tinsertKey(key: string, isRead: boolean, fn: any) {\n\t\tDataTree.addKey(key, this.shouldRefresh);\n\t\tthis.dbSize++;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\treadDone() {\n\t\tmessage.info(\"数据加载成功\");\n\t\tif (this.shouldRefresh) {\n\t\t\tvar notRead = DataTree.checkRead(DataTree.dataTree);\n\t\t\tfor (let i = 0; i < notRead.length; i++) {\n\t\t\t\tDataTree.deleteKey(notRead[i].name);\n\t\t\t}\n\t\t}\n\t\tthis.shouldRefresh = false;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"connect\");\n\t\tEvent.remove(\"disconnect\");\n\t\tEvent.remove(\"update\");\n\t\tEvent.remove(\"delete\");\n\t\tEvent.remove(\"deleteKey\");\n\t\tEvent.remove(\"insertKey\");\n\t\tWebSocket.remove(\"scan\");\n\t\tDataTree.dataTree = [];\n\t}\n\n\tasync connect(type: string, serverName: any) {\n\t\tthis.reset();\n\t\tthis.type = type;\n\t\tthis.serverName = serverName;\n\t\tlet res = await this.login();\n\t\tif (!res) return;\n\n\t\tConfig.setServerName(serverName);\n\n\t\tfor (let i = 0; i < parseInt(res); i++) {\n\t\t\tthis.state.databases.push({ title: `db-${i}`, key: i, size: 0 });\n\t\t}\n\n\t\tmessage.success(\"连接成功\");\n\n\t\tConfig.setCurrent(Config.get(serverName));\n\n\t\tthis.updateDatabases();\n\t}\n\n\treset() {\n\t\tDataTree.dataTree = [];\n\t\tthis.serverName = \"\";\n\t\tthis.type = \"\";\n\t\tthis.dbSize = 0;\n\t\tthis.prev = null;\n\t\tthis.shouldRefresh = false;\n\t\tthis.setState({ databases: [], dataTree: [], db: \"请选择DB\" });\n\t\tConfig.delDB();\n\t\tConfig.delServerName();\n\t\tConfig.delCurrent();\n\t}\n\n\tdisconnect(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\tupdate(serverName: any) {\n\t\tEvent.emit(\"openUpdateServer\", serverName);\n\t}\n\n\tdelete(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Rnd\n\t\t\t\tdefault={{ height: \"100%\", width: \"250px\", x: 0, y: 0 }}\n\t\t\t\tminWidth={250}\n\t\t\t\tmaxWidth={500}\n\t\t\t\tbounds=\".content\"\n\t\t\t\tenableResizing={{ right: true }}\n\t\t\t\tdisableDragging={true}\n\t\t\t\tclassName=\"key-tree\"\n\t\t\t>\n\t\t\t\t<div className=\"select-panel\">\n\t\t\t\t\t{this.state.databases.length > 0 ? (\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.db}\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\tlistHeight={600}\n\t\t\t\t\t\t\tonSelect={value => this.selectDB(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.databases.map(v => (\n\t\t\t\t\t\t\t\t<Option key={v.key} value={v.key}>\n\t\t\t\t\t\t\t\t\t{v.title} {v.size ? `(${v.size})` : \"\"}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"data-tree\">\n\t\t\t\t\t{this.state.dataTree.length > 0 ? (\n\t\t\t\t\t\t<Treebeard\n\t\t\t\t\t\t\tdata={this.state.dataTree}\n\t\t\t\t\t\t\tonToggle={(node, toggled) => this.onToggle(node, toggled)}\n\t\t\t\t\t\t\tstyle={this.style}\n\t\t\t\t\t\t\tanimations={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.serverName} {this.type}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.refresh()}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Rnd>\n\t\t);\n\t}\n\n\trefresh(): void {\n\t\tthis.shouldRefresh = true;\n\t\tthis.selectDB(this.state.db);\n\t}\n\n\tstyle: any = {\n\t\ttree: {\n\t\t\tbase: {\n\t\t\t\tfontSize: \"12px\",\n\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\tbackgroundColor: \"#ffffff\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tpadding: \"5px\"\n\t\t\t},\n\t\t\tnode: { base: { color: \"red\" }, activeLink: { backgroundColor: \"#bae7ff\" } }\n\t\t}\n\t};\n\n\tonToggle(node: import(\"react-treebeard-ts\").TreeNode, toggled: boolean): void {\n\t\tif (this.prev) {\n\t\t\tthis.prev.active = false;\n\t\t}\n\n\t\tthis.prev = node;\n\n\t\tnode.active = true;\n\n\t\tif (node.children) {\n\t\t\tnode.toggled = toggled;\n\t\t} else {\n\t\t\tthis.onSelect(node.name);\n\t\t}\n\n\t\tthis.updateTree();\n\t}\n\n\tasync onSelect(key: string) {\n\t\tlet type = await Command.type(key);\n\t\tEvent.emit(\"selectKey\", this.serverName, type, key);\n\t}\n\n\tasync login() {\n\t\tLayer.load();\n\t\tlet cfg = Config.get(this.serverName);\n\t\tlet response = await Command.register(this.type, cfg);\n\t\tLayer.close();\n\t\tif (response.data.code !== 200) {\n\t\t\tTools.Notification(response);\n\t\t\treturn false;\n\t\t}\n\t\treturn response.data.msg[1];\n\t}\n\n\tasync selectDB(db: any) {\n\t\tif (this.state.db !== db) DataTree.dataTree = [];\n\t\tthis.state.db = db;\n\t\tlet response = await Command.selectDB(this.serverName, db);\n\t\tif (response.data.code !== 200) return Tools.Notification(response);\n\t\tConfig.setDB(db);\n\t\tawait Command.scan();\n\t}\n}\n","import { notification } from \"antd\";\nimport Command from \"../services/Command\";\n\nclass Transform {\n\tcheck(type: string): any {\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\treturn new RString();\n\t\t\tcase \"list\":\n\t\t\t\treturn new List();\n\t\t\tcase \"hash\":\n\t\t\t\treturn new Hash();\n\t\t\tcase \"set\":\n\t\t\t\treturn new Set();\n\t\t\tcase \"zset\":\n\t\t\t\treturn new ZSet();\n\t\t\tdefault:\n\t\t\t\tnotification.error({ message: `Unsupported type ${type}` });\n\t\t\t\treturn new Empty();\n\t\t}\n\t}\n\n\tselect(type: string, key: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).select(key, ...args));\n\t}\n\n\tupdate(type: string, key: string, value: any, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).update(key, value, ...args));\n\t}\n\n\tinsert(type: string, key: string, value: any, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).insert(key, value, ...args));\n\t}\n\n\tdelete(type: string, key: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).delete(key, ...args));\n\t}\n\n\tcall(type: string, key: string, method: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type)[method](key, ...args));\n\t}\n\n\tttl(key: string) {\n\t\treturn this.do(key, [\"TTL\", key]);\n\t}\n\n\trename(key: string, newKey: string) {\n\t\treturn this.do(key, [\"RENAME\", key, newKey]);\n\t}\n\n\texpire(key: string, seconds: number) {\n\t\treturn this.do(key, [\"EXPIRE\", key, seconds]);\n\t}\n\n\tasync doPipe(key: string, cmd: any[][]) {\n\t\treturn await Command.doPipe(key, cmd);\n\t}\n\n\tasync do(key: string, cmd: any[]) {\n\t\treturn await Command.do(key, cmd);\n\t}\n}\n\nclass RString {\n\tselect(key: string) {\n\t\treturn [\"GET\", key];\n\t}\n\tupdate(key: string, value: string) {\n\t\treturn [\"SET\", key, value];\n\t}\n\tinsert(key: string, value: string) {\n\t\treturn [\"SET\", key, value];\n\t}\n\tdelete(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass List {\n\tlen(key: string) {\n\t\treturn [\"LLEN\", key];\n\t}\n\n\tinsert(key: string, value: string) {\n\t\treturn [\"LPUSH\", key, value];\n\t}\n\n\tselect(key: string, page: number, size: number) {\n\t\tlet skip = (page - 1) * size;\n\t\treturn [\"LRANGE\", key, skip, size * page - 1];\n\t}\n\n\tupdate(key: string, index: number, value: string) {\n\t\treturn [\"LSET\", key, index, value];\n\t}\n\n\tdelete(key: string, value: string) {\n\t\treturn [\"LREM\", key, 0, value];\n\t}\n\n\tremove(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass Hash {\n\tselect(key: string, curser: number) {\n\t\treturn [\"HSCAN\", key, curser, \"COUNT\", 10000];\n\t}\n\n\tlen(key: string) {\n\t\treturn [\"HLEN\", key];\n\t}\n\n\tupdate(key: string, k: string, v: string) {\n\t\treturn [\"HSET\", key, k, v];\n\t}\n\n\tinsert(key: string, k: string, v: string) {\n\t\treturn [\"HSET\", key, k, v];\n\t}\n\n\tdelete(key: string, k: string) {\n\t\treturn [\"HDEL\", key, k];\n\t}\n\n\tremove(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass Set {\n\tselect() {}\n}\nclass ZSet {\n\tselect() {}\n}\nclass Empty {\n\tselect() {}\n}\n\nexport default new Transform();\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./string.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class String extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = { key: \"\", showValue: \"\", rename: false, view: \"显示格式\" };\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\n\tasync select(type: string, key: string) {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet value = await Transform.select(type, key);\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\t\tthis.setState({ key: key, showValue: value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"string\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要保存吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.save()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"primary\">保存</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\tasync save() {\n\t\tlet r = await Transform.update(this.type, this.key, this.state.showValue);\n\t\tif (!r) return;\n\t\tmessage.success(\"保存成功\");\n\t}\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.delete(this.type, this.state.key);\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./list.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class List extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = {\n\t\tkey: \"\",\n\t\tshowValue: \"\",\n\t\tlist: [] as any[],\n\t\tpage: 1,\n\t\trename: false,\n\t\taddRow: false,\n\t\taddRowValue: \"\",\n\t\tview: \"显示格式\"\n\t};\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tsize = 1000;\n\tlen = 0;\n\n\tselectIndex = 0;\n\tpage = 1;\n\tlistIndex = 0;\n\n\tasync select(type: string, key: string) {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.call(type, key, \"len\");\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\t\tthis.page = this.state.page;\n\t\tlet listArray = await Transform.select(type, key, this.state.page, this.size);\n\t\tif (listArray === false) return;\n\t\tif (this.selectIndex >= listArray.length - 1) this.selectIndex = listArray.length - 1;\n\t\tlet { list } = this.state;\n\t\tlist = [];\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ value: listArray[i], select: i === this.selectIndex });\n\t\t}\n\n\t\tthis.setState({ key, list, showValue: listArray[this.selectIndex] }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\tonScroll = (value: any) => {\n\t\t// console.log(value);\n\t\t// clientHeight + scrollTop = scrollHeight\n\t};\n\n\trenderItem = (value: any) => {\n\t\tif (value.index > this.state.list.length - 1) return;\n\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"key\">{(this.page - 1) * this.size + value.index + 1}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.listIndex = (this.page - 1) * this.size + value.index;\n\n\t\tthis.setState({ list, showValue: list[value.index].value }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tasync delRow() {\n\t\tif (this.len === 1) return this.deleteKey();\n\t\tlet u = await Transform.update(this.type, this.key, this.listIndex, \"@--LEMO-YXK--@\");\n\t\tif (!u) return;\n\t\tlet d = await Transform.delete(this.type, this.key, \"@--LEMO-YXK--@\");\n\t\tif (!d) return;\n\t\tif (this.listIndex === this.len - 1) {\n\t\t\tthis.selectIndex--;\n\t\t\tthis.listIndex--;\n\t\t}\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"删除成功!\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"list\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.addRow}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.addRow()}\n\t\t\t\t\tonCancel={() => this.closeAddRow()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.addRowValue}\n\t\t\t\t\t\tonChange={value => this.setState({ addRowValue: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要删除 ${this.state.showValue} 吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.delRow()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button>删除行</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t\t<Button onClick={() => this.openAddRow()}>添加行</Button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.state.list.length}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\t// scrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"end\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.onScroll}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonBlur={() => this.setPage(this.state.page || this.page)}\n\t\t\t\t\t\t\t\tvalue={this.state.page}\n\t\t\t\t\t\t\t\tonChange={value => this.setPage(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要保存吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.save()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button type=\"primary\">保存</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tasync addRow() {\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.addRowValue);\n\t\tif (!r) return;\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"添加成功!\");\n\t\tthis.closeAddRow();\n\t\tthis.state.addRowValue = \"\";\n\t\tthis.selectIndex++;\n\t\tthis.listIndex++;\n\t}\n\n\tprevPage = () => {\n\t\tif (this.state.page <= 1 || !this.state.page) return;\n\t\tthis.state.page--;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tnextPage = () => {\n\t\tif (this.state.page >= Math.ceil(this.len / this.size) || !this.state.page) return;\n\t\tthis.state.page++;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tgo = () => {\n\t\tthis.select(this.type, this.key);\n\t};\n\n\tsetPage(page: any) {\n\t\tif (page === \"\") return this.setState({ page });\n\t\tpage = parseInt(page) || 1;\n\t\tif (page < 1 || page > Math.ceil(this.len / this.size)) return;\n\t\tthis.setState({ page });\n\t}\n\n\tasync save() {\n\t\tlet r = await Transform.update(this.type, this.key, this.listIndex, this.state.showValue);\n\t\tif (!r) return;\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].value = this.state.showValue;\n\t\tthis.setState({ list }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.call(this.type, this.state.key, \"remove\");\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tcloseAddRow(): void {\n\t\tthis.setState({ addRow: false });\n\t}\n\n\topenAddRow(): void {\n\t\tthis.setState({ addRow: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./hash.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class Hash extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAllData(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = {\n\t\tkey: \"\",\n\t\tshowValue: \"\",\n\t\tshowKey: \"\",\n\t\tlist: [] as any[],\n\t\tpage: 1,\n\t\trename: false,\n\t\taddRow: false,\n\t\taddRowValue: \"\",\n\t\taddRowKey: \"\",\n\t\tview: \"显示格式\"\n\t};\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tsize = 1000;\n\tlen = 0;\n\n\tselectIndex = 0;\n\tpage = 1;\n\tlistIndex = 0;\n\n\tallData: any[] = [];\n\n\tasync loadAllData(type: string, key: string) {\n\t\tthis.allData = [];\n\t\tvar cursor = 0;\n\t\tvar res: any = {};\n\t\twhile (1) {\n\t\t\tlet r = await Transform.select(type, key, cursor);\n\t\t\tif (!r) return;\n\t\t\tcursor = parseInt(r[0]);\n\t\t\tfor (let i = 0; i < r[1].length; i += 2) {\n\t\t\t\tconst key = r[1][i];\n\t\t\t\tconst value = r[1][i + 1];\n\t\t\t\tres[key] = value;\n\t\t\t}\n\t\t\tif (cursor === 0) break;\n\t\t}\n\t\tfor (const key in res) {\n\t\t\tthis.allData.push({ key: key, value: res[key] });\n\t\t}\n\n\t\tthis.select(type, key);\n\t}\n\n\tasync select(type: string, key: string) {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.call(type, key, \"len\");\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\n\t\tthis.page = this.state.page;\n\t\tlet listArray = this.allData.slice((this.page - 1) * this.size, (this.page - 1) * this.size + this.size);\n\t\tif (this.selectIndex >= listArray.length - 1) this.selectIndex = listArray.length - 1;\n\n\t\tlet { list } = this.state;\n\t\tlist = [];\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ key: listArray[i].key, value: listArray[i].value, select: i === this.selectIndex });\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{ key, list, showValue: listArray[this.selectIndex].value, showKey: listArray[this.selectIndex].key },\n\t\t\t() => {\n\t\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t\t}\n\t\t);\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\tonScroll = (value: any) => {\n\t\t// console.log(value);\n\t\t// clientHeight + scrollTop = scrollHeight\n\t};\n\n\trenderItem = (value: any) => {\n\t\tif (value.index > this.state.list.length - 1) return;\n\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"i\">{(this.page - 1) * this.size + value.index + 1}</div>\n\t\t\t\t<div className=\"key\">{this.state.list[value.index].key}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.listIndex = (this.page - 1) * this.size + value.index;\n\n\t\tthis.setState({ list, showValue: list[value.index].value, showKey: list[value.index].key }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tasync delRow() {\n\t\tlet item = this.state.list[this.selectIndex];\n\t\tif (this.len === 1) return this.deleteKey();\n\t\tlet d = await Transform.delete(this.type, this.key, item.key);\n\t\tif (d === false) return;\n\t\tif (this.listIndex === this.len - 1) {\n\t\t\tthis.selectIndex--;\n\t\t\tthis.listIndex--;\n\t\t}\n\t\tthis.allData.splice(this.selectIndex, 1);\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"删除成功!\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"hash\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.addRow}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.addRow()}\n\t\t\t\t\tonCancel={() => this.closeAddRow()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"add-row\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.addRowKey}\n\t\t\t\t\t\t\taddonBefore={\"KEY\"}\n\t\t\t\t\t\t\tonChange={value => this.setState({ addRowKey: value.target.value })}\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.addRowValue}\n\t\t\t\t\t\t\taddonBefore={\"VALUE\"}\n\t\t\t\t\t\t\tonChange={value => this.setState({ addRowValue: value.target.value })}\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.loadAllData(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Option key=\"text\" value=\"text\">\n\t\t\t\t\t\t\t\t\ttext\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要删除 ${this.state.showKey} 吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.delRow()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button>删除行</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t\t<Button onClick={() => this.openAddRow()}>添加行</Button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.state.list.length}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\t// scrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"end\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.onScroll}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={this.state.showKey}\n\t\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\t\tonChange={value => this.onChangeShowKey(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\t\t\tonChange={value => this.onChangeShowValue(value.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonBlur={() => this.setPage(this.state.page || this.page)}\n\t\t\t\t\t\t\t\tvalue={this.state.page}\n\t\t\t\t\t\t\t\tonChange={value => this.setPage(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\ttitle={`确定要保存吗?`}\n\t\t\t\t\t\t\t\tonConfirm={() => this.save()}\n\t\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button type=\"primary\">保存</Button>\n\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tasync addRow() {\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.addRowKey, this.state.addRowValue);\n\t\tif (r === false) return;\n\t\tif (r === 0) {\n\t\t\tthis.filter(this.state.addRowKey);\n\t\t}\n\t\tthis.allData.splice(this.selectIndex, 0, { value: this.state.addRowValue, key: this.state.addRowKey });\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"添加成功!\");\n\t\tthis.closeAddRow();\n\t\tthis.state.addRowValue = \"\";\n\t\tthis.state.addRowKey = \"\";\n\t\tthis.selectIndex++;\n\t\tthis.listIndex++;\n\t}\n\n\tprevPage = () => {\n\t\tif (this.state.page <= 1 || !this.state.page) return;\n\t\tthis.state.page--;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tnextPage = () => {\n\t\tif (this.state.page >= Math.ceil(this.len / this.size) || !this.state.page) return;\n\t\tthis.state.page++;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tgo = () => {\n\t\tthis.select(this.type, this.key);\n\t};\n\n\tsetPage(page: any) {\n\t\tif (page === \"\") return this.setState({ page });\n\t\tpage = parseInt(page) || 1;\n\t\tif (page < 1 || page > Math.ceil(this.len / this.size)) return;\n\t\tthis.setState({ page });\n\t}\n\n\tfilter(key: string) {\n\t\tfor (let i = 0; i < this.allData.length; i++) {\n\t\t\tconst element = this.allData[i];\n\t\t\tif (element.key === key) {\n\t\t\t\tthis.allData.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync save() {\n\t\tlet item = this.state.list[this.selectIndex];\n\n\t\t// delete\n\t\tlet d = await Transform.delete(this.type, this.key, item.key);\n\t\tif (d === false) return;\n\n\t\tthis.allData.splice(this.selectIndex, 1);\n\n\t\t// add\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.showKey, this.state.showValue);\n\t\tif (r === false) return;\n\t\tif (r === 0) {\n\t\t\tthis.filter(this.state.showKey);\n\t\t}\n\t\tthis.allData.splice(this.selectIndex, 0, { value: this.state.showValue, key: this.state.showKey });\n\n\t\tthis.select(this.type, this.key);\n\t\t// let { list } = this.state;\n\t\t// list[this.selectIndex].value = this.state.showValue;\n\t\t// list[this.selectIndex].key = this.state.showKey;\n\t\t// this.setState({ list }, () => {\n\t\t// \tthis.vlist.current?.forceUpdateGrid();\n\t\t// });\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.call(this.type, this.state.key, \"remove\");\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tcloseAddRow(): void {\n\t\tthis.setState({ addRow: false });\n\t}\n\n\topenAddRow(): void {\n\t\tthis.setState({ addRow: true });\n\t}\n\n\tonChangeShowValue(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n\n\tonChangeShowKey(value: string): void {\n\t\tthis.setState({ showKey: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./panel.scss\";\nimport Event from \"../../event/Event\";\nimport String from \"./data/String\";\nimport List from \"./data/List\";\nimport { Tabs } from \"antd\";\nimport Hash from \"./data/Hash\";\nconst { TabPane } = Tabs;\nexport default class Panel extends Component {\n\tstate = { activeKey: \"\", panes: [] as any[] };\n\tserverName = \"\";\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tEvent.add(\"selectKey\", (serverName: string, type: string, key: string) => {\n\t\t\tthis.serverName = serverName;\n\n\t\t\tif (this.state.panes.find(v => v.key === key)) {\n\t\t\t\tthis.setState({ activeKey: key });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { panes } = this.state;\n\n\t\t\tlet component = this.createComponent(type, key);\n\n\t\t\tpanes.push({ title: key, content: component, key: key });\n\n\t\t\tif (panes.length > 3) panes.shift();\n\n\t\t\tthis.setState({ panes: panes, activeKey: key });\n\t\t});\n\t}\n\n\tcreateComponent(type: string, key: string) {\n\t\tlet component = null;\n\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\tcomponent = this.createString(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"list\":\n\t\t\t\tcomponent = this.createList(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"hash\":\n\t\t\t\tcomponent = this.createHash(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"zset\":\n\t\t\t\tbreak;\n\t\t\tcase \"set\":\n\t\t\t\tbreak;\n\t\t}\n\t\treturn component;\n\t}\n\n\tcreateString(type: string, key: string) {\n\t\treturn <String parent={this} type={type} keys={key}></String>;\n\t}\n\n\tcreateList(type: string, key: string) {\n\t\treturn <List parent={this} type={type} keys={key}></List>;\n\t}\n\n\tcreateHash(type: string, key: string) {\n\t\treturn <Hash parent={this} type={type} keys={key}></Hash>;\n\t}\n\n\tcomponentDidMount() {}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"selectKey\");\n\t}\n\n\tonChange = (activeKey: any) => {\n\t\tthis.setState({ activeKey });\n\t};\n\n\tonEdit = (targetKey: any, action: string | number) => {\n\t\tif (action === \"add\") {\n\t\t\tthis.add();\n\t\t} else {\n\t\t\tthis.remove(targetKey);\n\t\t}\n\t};\n\n\tupdate(type: string, oldKey: string, newKey: string) {\n\t\tfor (let i = 0; i < this.state.panes.length; i++) {\n\t\t\tconst element = this.state.panes[i];\n\t\t\tif (element.key === oldKey) {\n\t\t\t\telement.title = newKey;\n\t\t\t\telement.key = newKey;\n\t\t\t\telement.content = this.createComponent(type, newKey);\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes: this.state.panes, activeKey: newKey });\n\t}\n\n\tadd = () => {};\n\n\tremove = (targetKey: string) => {\n\t\tlet activeKey = this.state.activeKey;\n\t\tlet lastIndex: any;\n\t\tthis.state.panes.forEach((pane: { key: string }, i: number) => {\n\t\t\tif (pane.key === targetKey) {\n\t\t\t\tlastIndex = i - 1;\n\t\t\t}\n\t\t});\n\t\tconst panes = this.state.panes.filter((pane: { key: string }) => pane.key !== targetKey);\n\t\tif (panes.length && activeKey === targetKey) {\n\t\t\tif (lastIndex >= 0) {\n\t\t\t\tactiveKey = panes[lastIndex].key;\n\t\t\t} else {\n\t\t\t\tactiveKey = panes[0].key;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes, activeKey });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<Tabs\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tactiveKey={this.state.activeKey}\n\t\t\t\t\ttype=\"editable-card\"\n\t\t\t\t\tonEdit={this.onEdit}\n\t\t\t\t\thideAdd\n\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t\t\ttabBarStyle={{ margin: 0, minWidth: \"200px\" }}\n\t\t\t\t\tdestroyInactiveTabPane={true}\n\t\t\t\t\tanimated={false}\n\t\t\t\t\ttabBarGutter={0}\n\t\t\t\t>\n\t\t\t\t\t{this.state.panes.map(\n\t\t\t\t\t\t(pane: {\n\t\t\t\t\t\t\ttitle: React.ReactNode;\n\t\t\t\t\t\t\tkey: string | undefined;\n\t\t\t\t\t\t\tclosable: boolean | undefined;\n\t\t\t\t\t\t\tcontent: React.ReactNode;\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<TabPane\n\t\t\t\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n\t\t\t\t\t\t\t\ttab={pane.title}\n\t\t\t\t\t\t\t\tkey={pane.key}\n\t\t\t\t\t\t\t\tclosable={pane.closable}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{pane.content}\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Button, Modal } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./serverList.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\n\nexport default class ServerList extends Component {\n\tstate = { visible: false, modal: false, header: this.createHeader() };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openServerList\", () => this.onOpen());\n\t\tEvent.add(\"addServer\", () => this.setState({ header: this.createHeader() }));\n\t\tEvent.add(\"updateServer\", () => this.setState({ header: this.createHeader() }));\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openServerList\");\n\t}\n\n\tcreateHeader() {\n\t\tlet data = [];\n\t\tlet config = Config.all();\n\t\tfor (const serverName in config) {\n\t\t\tdata.push(\n\t\t\t\t<div className=\"db-header\" key={serverName}>\n\t\t\t\t\t<div>{serverName}</div>\n\t\t\t\t\t<div className=\"button\">\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.connect(serverName)}>\n\t\t\t\t\t\t\t连接\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.update(serverName)}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.disconnect(serverName)}>\n\t\t\t\t\t\t\t断开\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.delete(serverName)}>\n\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn data;\n\t}\n\n\tupdate(serverName: string) {\n\t\tEvent.emit(\"update\", serverName);\n\t}\n\n\tserverName = \"\";\n\tconnect(serverName: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.onChooseOpen();\n\t}\n\n\tdisconnect(serverName: string) {\n\t\tthis.onClose();\n\t\tEvent.emit(\"disconnect\", serverName);\n\t\tCommand.disconnect(serverName);\n\t}\n\n\tdelete(serverName: string) {\n\t\tModal.confirm({\n\t\t\ttitle: `确定要删除 ${serverName} 的配置吗`,\n\t\t\tokText: \"确认\",\n\t\t\tcancelText: \"取消\",\n\t\t\tonOk: () => {\n\t\t\t\tConfig.delete(serverName);\n\t\t\t\tthis.setState({ header: this.createHeader() });\n\t\t\t\tEvent.emit(\"delete\", serverName);\n\t\t\t\tCommand.disconnect(serverName);\n\t\t\t}\n\t\t});\n\t}\n\n\tonChooseClose() {\n\t\tthis.setState({ modal: false });\n\t}\n\n\tonChooseOpen() {\n\t\tthis.setState({ modal: true });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"服务器列表\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tclassName=\"server-list\"\n\t\t\t\tdestroyOnClose\n\t\t\t>\n\t\t\t\t{this.state.header}\n\t\t\t\t<Modal\n\t\t\t\t\tdestroyOnClose\n\t\t\t\t\ttitle={`选择连接方式`}\n\t\t\t\t\tvisible={this.state.modal}\n\t\t\t\t\tclassName=\"choose-server\"\n\t\t\t\t\tonCancel={() => this.onChooseClose()}\n\t\t\t\t\tclosable={true}\n\t\t\t\t\tmaskClosable={true}\n\t\t\t\t\tfooter={null}\n\t\t\t\t>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"normal\")}>\n\t\t\t\t\t\tNormal\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"cluster\")}>\n\t\t\t\t\t\tCluster\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tchoose(type: string): void {\n\t\tEvent.emit(\"connect\", type, this.serverName);\n\t\tthis.onChooseClose();\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport Event from \"../../event/Event\";\nimport { Radio, Input, Button, message } from \"antd\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\nimport \"./updateServer.scss\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\nimport Layer from \"../layer/Layer\";\n\nexport default class UpdateServer extends Component {\n\tstate = { visible: false, config: {} as config, type: \"normal\", clusterHostInput: null };\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tserverName = \"\";\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openUpdateServer\", serverName => {\n\t\t\tthis.serverName = serverName;\n\t\t\tlet config = Config.get(serverName);\n\t\t\tif (!config.cluster) config.cluster = [];\n\t\t\tthis.setState({ config: config }, () => this.setState({ clusterHostInput: this.createCluster() }));\n\t\t\tthis.onOpen();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openUpdateServer\");\n\t}\n\n\tonChange(type: string, value: string) {\n\t\t(this.state.config as any)[type] = value;\n\t\tthis.setState({ config: this.state.config, clusterHostInput: this.createCluster() });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`修改 ${this.state.config.name} 配置`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"update-server\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tvalue={this.state.config.name}\n\t\t\t\t\t\tonChange={value => this.onChange(\"name\", value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tvalue={this.state.config.host}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"host\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tvalue={this.state.config.port}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"port\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tvalue={this.state.config.master}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"master\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tvalue={this.state.config.password}\n\t\t\t\t\t\tonChange={value => this.onChange(\"password\", value.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.state.config.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tvalue={this.state.config.cluster[i]}\n\t\t\t\tonChange={value => {\n\t\t\t\t\tlet cfg = this.state.config;\n\t\t\t\t\tcfg.cluster[i] = value.target.value;\n\t\t\t\t\tthis.setState({ config: cfg, clusterHostInput: this.createCluster() });\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.state.config.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.state.config.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tthis.state.config.cluster = this.state.config.cluster.filter(v => v !== \"\");\n\t\tLayer.load();\n\t\tlet response = await Command.register(this.state.type, this.state.config);\n\t\tLayer.close();\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tsubmit() {\n\t\tConfig.delete(this.serverName);\n\t\tlet cfg = this.state.config;\n\t\tcfg.cluster = cfg.cluster.filter(v => v !== \"\");\n\t\tConfig.set(this.state.config.name, this.state.config);\n\t\tmessage.success(\"修改成功\");\n\t\tthis.onClose();\n\t\tEvent.emit(\"updateServer\");\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport \"./progress.scss\";\nimport Event from \"../../event/Event\";\n\nexport default class MProgress extends Component {\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"progress\");\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"progress\", v => this.progress(v));\n\t}\n\n\tprogress(v: number) {\n\t\tif (v === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ progress: v });\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tthis.setState({ progress: v });\n\t\t}\n\t}\n\n\tstate = { progress: 100 };\n\n\trender() {\n\t\treturn (\n\t\t\t<Progress\n\t\t\t\tstrokeColor={{\n\t\t\t\t\t\"0%\": \"#108ee9\",\n\t\t\t\t\t\"100%\": \"#87d068\"\n\t\t\t\t}}\n\t\t\t\tstyle={{ width: \"100%\", height: \"1px\" }}\n\t\t\t\tshowInfo={false}\n\t\t\t\tstrokeWidth={3}\n\t\t\t\tpercent={this.state.progress}\n\t\t\t\tclassName=\"progress\"\n\t\t\t/>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Radio, Input, Button, Modal, message } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addKey.scss\";\nimport Transform from \"../../transform/Transform\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\n\nexport default class AddKey extends Component {\n\tstate = { visible: false, keyType: \"string\", key: \"\", k: \"\", v: \"\" };\n\n\tonClose() {\n\t\tthis.setState({ visible: false, key: \"\", k: \"\", v: \"\" });\n\t}\n\n\tonOpen() {\n\t\tthis.config = Config.getCurrent();\n\t\tif (!this.config.name) {\n\t\t\tmessage.error(\"请连接服务器!\");\n\t\t\treturn this.onClose();\n\t\t}\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"addKey\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"addKey\");\n\t}\n\n\tconfig: config = {} as config;\n\n\tcreateNormal() {\n\t\treturn (\n\t\t\t<div className=\"input-box-2\">\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"KEY\"\n\t\t\t\t\t\tplaceholder=\"key\"\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"VALUE\"\n\t\t\t\t\t\tplaceholder=\"value\"\n\t\t\t\t\t\tvalue={this.state.v}\n\t\t\t\t\t\tonChange={value => this.setState({ v: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcreateSpecial() {\n\t\treturn (\n\t\t\t<div className=\"input-box-3\">\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"KEY\"\n\t\t\t\t\t\tplaceholder=\"key\"\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tplaceholder=\"k\"\n\t\t\t\t\t\tvalue={this.state.k}\n\t\t\t\t\t\tonChange={value => this.setState({ k: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tplaceholder=\"v\"\n\t\t\t\t\t\tvalue={this.state.v}\n\t\t\t\t\t\tonChange={value => this.setState({ v: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcreateComponent() {\n\t\tswitch (this.state.keyType) {\n\t\t\tcase \"string\":\n\t\t\tcase \"list\":\n\t\t\tcase \"set\":\n\t\t\t\treturn this.createNormal();\n\t\t\tcase \"hash\":\n\t\t\tcase \"zset\":\n\t\t\t\treturn this.createSpecial();\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`添加KEY`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"add-key\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div className=\"select-box\">\n\t\t\t\t\t<Radio.Group\n\t\t\t\t\t\tvalue={this.state.keyType}\n\t\t\t\t\t\tonChange={value => this.setState({ keyType: value.target.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Radio.Button value=\"string\">string</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"list\">list</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"set\">set</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"hash\">hash</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"zset\">zset</Radio.Button>\n\t\t\t\t\t</Radio.Group>\n\t\t\t\t</div>\n\n\t\t\t\t{this.createComponent()}\n\n\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => this.add()}>\n\t\t\t\t\t\t确定\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t取消\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\tasync add() {\n\t\tif (this.state.key === \"\") message.error(\"请填写完整!\");\n\n\t\tif (this.state.v === \"\") message.error(\"请填写完整!\");\n\n\t\tswitch (this.state.keyType) {\n\t\t\tcase \"string\":\n\t\t\tcase \"list\":\n\t\t\tcase \"set\":\n\t\t\t\tlet n = await Transform.insert(this.state.keyType, this.state.key, this.state.v);\n\t\t\t\tif (!n) return;\n\t\t\t\tmessage.success(\"添加成功!\");\n\t\t\t\tbreak;\n\t\t\tcase \"hash\":\n\t\t\tcase \"zset\":\n\t\t\t\tif (this.state.k === \"\") return message.error(\"请填写完整!\");\n\t\t\t\tlet s = await Transform.insert(this.state.keyType, this.state.key, this.state.k, this.state.v);\n\t\t\t\tif (!s) return;\n\t\t\t\tmessage.success(\"添加成功!\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn message.error(\"不支持的类型!\");\n\t\t}\n\n\t\tEvent.emit(\"insertKey\", this.state.key);\n\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport Header from \"../../components/header/Header\";\nimport AddServer from \"../../components/addServer/AddServer\";\nimport KeyTree from \"../../components/keyTree/KeyTree\";\nimport Panel from \"../../components/panel/Panel\";\nimport ServerList from \"../../components/serverList/ServerList\";\nimport UpdateServer from \"../../components/updateServer/UpdateServer\";\nimport MProgress from \"../../components/progress/Progress\";\nimport AddKey from \"../../components/addKey/AddKey\";\n\nclass Index extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"index\">\n\t\t\t\t<AddKey></AddKey>\n\t\t\t\t<AddServer></AddServer>\n\t\t\t\t<ServerList></ServerList>\n\t\t\t\t<UpdateServer></UpdateServer>\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<Header></Header>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<KeyTree></KeyTree>\n\t\t\t\t\t<Panel></Panel>\n\t\t\t\t</div>\n\t\t\t\t<MProgress></MProgress>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Index;\n","import React from \"react\";\nimport \"./login.scss\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nfunction Login() {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<LoadingOutlined style={{ fontSize: \"2rem\" }}></LoadingOutlined>\n\t\t\t\t\t<div className=\"tips\">正在准备...</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory, History, UnregisterCallback, Location } from \"history\";\nimport \"./App.scss\";\nimport Index from \"./pages/index/Index\";\nimport Login from \"./pages/login/Login\";\nimport WebSocket from \"./ws/WebSocket\";\nimport Config from \"./components/config/Config\";\n\nexport default class App extends Component {\n\tunlisten!: UnregisterCallback;\n\n\tchange(location: Location<History.PoorMansUnknown>) {\n\t\tif (!Config.getStatus()) return (window.location.hash = \"/login\");\n\t\tif (location.hash === \"#/login\") return (window.location.hash = \"/index\");\n\t}\n\n\tstate = { start: false };\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tWebSocket.start(() => this.setState({ start: true }));\n\t}\n\n\tcomponentDidMount() {\n\t\tconst history = createBrowserHistory();\n\t\t// Get the current location.\n\t\tconst location = history.location;\n\n\t\tthis.change(location);\n\n\t\t// Listen for changes to the current location.\n\t\tthis.unlisten = history.listen((location, action) => {\n\t\t\t// location is an object like window.location\n\t\t\tthis.change(location);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tWebSocket.close();\n\t\tthis.unlisten();\n\t}\n\n\trender() {\n\t\treturn this.state.start ? (\n\t\t\t<HashRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/index\" component={Index} />\n\t\t\t\t\t<Route path=\"/login\" component={Login} exact />\n\t\t\t\t\t<Redirect from=\"**\" to=\"/index\" />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t) : null;\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { message, notification } from \"antd\";\nimport Config from \"./app/components/config/Config\";\n\nAxios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\nAxios.defaults.baseURL = \"http://127.0.0.1:12388\";\n\nAxios.defaults.timeout = 5000;\n\nAxios.interceptors.response.use(\n\tresponse => {\n\t\treturn response;\n\t},\n\terror => {\n\t\treturn error;\n\t}\n);\n\nmessage.config({ maxCount: 3 });\n\nnotification.config({ duration: 2, placement: \"bottomRight\" });\n\n// create uuid\nif (!Config.getUUID()) Config.createUUID();\nConfig.delDB();\nConfig.delServerName();\nConfig.delCurrent();\nConfig.delStatus();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}