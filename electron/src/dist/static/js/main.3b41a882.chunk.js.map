{"version":3,"sources":["app/event/Event.ts","app/components/header/Header.tsx","app/components/config/Config.ts","app/components/layer/Layer.ts","app/tools/Tools.ts","app/services/Command.ts","app/components/addServer/AddServer.tsx","app/ws/WebSocket.ts","app/components/keyTree/Tree.ts","app/components/keyTree/KeyTree.tsx","app/transform/Transform.ts","app/components/panel/data/String.tsx","app/components/panel/data/List.tsx","app/components/panel/data/Hash.tsx","app/components/panel/Panel.tsx","app/components/serverList/ServerList.tsx","app/components/updateServer/UpdateServer.tsx","app/components/progress/Progress.tsx","app/components/addKey/AddKey.tsx","app/pages/index/Index.tsx","app/pages/login/Login.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["events","name","e","this","args","Header","state","date","addKey","Event","emit","className","type","ghost","onClick","PlusOutlined","danger","AlignLeftOutlined","Component","JSON","parse","localStorage","getItem","cfg","setItem","stringify","removeItem","setServerName","db","parseInt","Math","random","toString","slice","config","mask","div","document","createElement","style","display","justifyContent","alignItems","width","height","position","top","left","child","appendChild","body","data","s","key","begin","end","res","index","push","response","success","error","isAxiosError","toJSON","console","log","notification","message","destroy","Layer","close","msg","code","Config","getServerName","getDB","uuid","getUUID","Axios","post","Qs","serverName","serverNameAndDB","Tools","Notification","AddServer","visible","clusterHostInput","event","host","port","password","master","cluster","setState","add","onOpen","remove","title","placement","closable","onClose","getContainer","destroyOnClose","Group","value","onChange","target","Button","spellCheck","addonBefore","placeholder","addHost","submit","test","map","v","i","addonAfter","MinusCircleOutlined","removeHost","splice","createCluster","filter","Command","register","get","description","set","ws","isStart","Socket","Global","OnOpen","Emit","AddListener","window","location","hash","OnError","err","OnClose","fn","Start","Close","RemoveListener","dataTree","read","length","children","search","prefix","parent","findIndex","id","deleteNode","node","countSub","arr","current","isRead","params","split","temp","arr1","inArr1","inArr","item","isKey","join","count","countAdd","Option","KeyTree","databases","dbSize","prev","shouldRefresh","tree","base","fontSize","whiteSpace","backgroundColor","padding","color","activeLink","DataTree","size","connect","disconnect","update","delete","deleteKey","insertKey","WebSocket","listen","keys","readDone","updateTree","updateDatabases","info","notRead","checkRead","reset","login","setCurrent","delDB","delServerName","delCurrent","default","x","y","minWidth","maxWidth","bounds","enableResizing","right","disableDragging","listHeight","onSelect","selectDB","onToggle","toggled","animations","refresh","active","load","setDB","scan","Transform","RString","List","Hash","Set","ZSet","Empty","do","check","select","insert","method","newKey","seconds","cmd","doPipe","page","curser","k","TextArea","String","props","showValue","rename","view","ttl","maskClosable","onOk","renameKey","onCancel","closeRename","okText","cancelText","toUpperCase","openRename","onConfirm","icon","QuestionCircleOutlined","changeView","save","oldKey","list","addRow","addRowValue","len","selectIndex","listIndex","vlist","React","createRef","onScroll","renderItem","Object","assign","background","el","selectItem","prevPage","setPage","go","nextPage","ceil","call","listArray","forceUpdateGrid","closeAddRow","delRow","openAddRow","ref","overscanRowCount","rowCount","rowHeight","rowRenderer","scrollToAlignment","LeftOutlined","RightOutlined","onBlur","showKey","addRowKey","allData","loadAllData","cursor","r","onChangeShowKey","onChangeShowValue","TabPane","Panel","activeKey","panes","onEdit","targetKey","action","lastIndex","forEach","pane","find","component","createComponent","content","shift","createString","createList","createHash","element","hideAdd","tabBarStyle","margin","destroyInactiveTabPane","animated","tabBarGutter","tab","ServerList","modal","header","createHeader","all","onChooseOpen","confirm","onChooseClose","footer","choose","UpdateServer","MProgress","progress","setTimeout","strokeColor","showInfo","strokeWidth","percent","AddKey","keyType","getCurrent","Index","Login","LoadingOutlined","App","unlisten","start","history","createBrowserHistory","change","path","exact","from","to","Boolean","hostname","match","defaults","headers","baseURL","timeout","interceptors","use","maxCount","duration","createUUID","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3b41a882.chunk.js","sourcesContent":["class Event {\n\tevents: { [key: string]: (...args: any[]) => void } = {};\n\n\tadd(name: string, e: (...args: any[]) => void): string {\n\t\tthis.events[name] = e;\n\t\treturn name;\n\t}\n\n\tremove(name: string) {\n\t\tdelete this.events[name];\n\t}\n\n\temit(name: string, ...args: any[]) {\n\t\tthis.events[name] && this.events[name](...args);\n\t}\n}\n\nexport default new Event();\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./header.scss\";\nimport Event from \"../../event/Event\";\nimport { AlignLeftOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nexport default class Header extends Component {\n\tstate = { date: \"\" };\n\n\taddKey = () => {\n\t\tEvent.emit(\"addKey\");\n\t};\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<Button type=\"link\" ghost onClick={this.addKey}>\n\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => Event.emit(\"openAddServer\")}>\n\t\t\t\t\t\t添加服务器\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" danger ghost onClick={() => Event.emit(\"openServerList\")}>\n\t\t\t\t\t\t<AlignLeftOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { config } from \"../../interface/config\";\n\nclass Config {\n\tgetCurrent() {\n\t\treturn JSON.parse(localStorage.getItem(\"current\") || \"{}\");\n\t}\n\n\tsetCurrent(cfg: config) {\n\t\tlocalStorage.setItem(\"current\", JSON.stringify(cfg));\n\t}\n\n\tdelCurrent() {\n\t\tlocalStorage.removeItem(\"current\");\n\t}\n\n\tsetServerName(setServerName: string) {\n\t\tlocalStorage.setItem(\"serverName\", setServerName);\n\t}\n\n\tgetServerName() {\n\t\treturn localStorage.getItem(\"serverName\");\n\t}\n\n\tdelServerName() {\n\t\tlocalStorage.removeItem(\"serverName\");\n\t}\n\n\tsetDB(db: number) {\n\t\tlocalStorage.setItem(\"db\", `${db}`);\n\t}\n\n\tgetDB() {\n\t\tlet db = localStorage.getItem(\"db\");\n\t\tif (!db) return null;\n\t\treturn parseInt(db);\n\t}\n\n\tdelDB() {\n\t\tlocalStorage.removeItem(\"db\");\n\t}\n\n\tcreateUUID() {\n\t\tlocalStorage.setItem(\n\t\t\t\"uuid\",\n\t\t\tMath.random()\n\t\t\t\t.toString(16)\n\t\t\t\t.slice(2)\n\t\t);\n\t}\n\n\tgetUUID() {\n\t\treturn localStorage.getItem(\"uuid\");\n\t}\n\n\tall() {\n\t\treturn JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t}\n\n\tget(name: string): config {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\treturn cfg[name];\n\t}\n\n\tset(name: string, config: config) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tcfg[name] = config;\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tdelete(name: string) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tdelete cfg[name];\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tclear() {\n\t\tlocalStorage.removeItem(\"config\");\n\t}\n}\n\nexport default new Config();\n","class Layer {\n\tmask: any;\n\n\tconstructor() {\n\t\tlet div = document.createElement(\"div\");\n\t\tdiv.style.display = \"flex\";\n\t\tdiv.style.justifyContent = \"center\";\n\t\tdiv.style.alignItems = \"center\";\n\t\tdiv.style.width = \"100vw\";\n\t\tdiv.style.height = \"100vh\";\n\t\tdiv.style.position = \"absolute\";\n\t\tdiv.style.top = \"0\";\n\t\tdiv.style.left = \"0\";\n\t\tdiv.style.display = \"none\";\n\t\tthis.mask = div;\n\n\t\tlet child = document.createElement(\"div\");\n\t\tchild.className = \"load-mask-child\";\n\n\t\tdiv.appendChild(child);\n\t\tdocument.body.appendChild(div);\n\t}\n\n\tload() {\n\t\tthis.mask.style.display = \"flex\";\n\t}\n\n\tclose() {\n\t\tthis.mask.style.display = \"none\";\n\t}\n}\n\nexport default new Layer();\n","import { notification, message } from \"antd\";\nimport Layer from \"../components/layer/Layer\";\nclass Tools {\n\tQueryString(data: { [key: string]: string }) {\n\t\tlet s = \"\";\n\t\tfor (const key in data) {\n\t\t\ts += `${key}=${data[key]}&`;\n\t\t}\n\t\treturn s.slice(0, -1);\n\t}\n\n\tRange(begin: number, end: number): number[] {\n\t\tlet res = [];\n\t\tfor (let index = begin; index < end; index++) {\n\t\t\tres.push(index);\n\t\t}\n\t\treturn res;\n\t}\n\n\tNotification(response: any, success?: any, error?: any) {\n\t\tif (response.isAxiosError) {\n\t\t\tlet error = response.toJSON();\n\t\t\tconsole.log(error);\n\t\t\tnotification.error({ message: error.message });\n\t\t\tmessage.destroy();\n\t\t\tLayer.close();\n\t\t\tthrow error;\n\t\t}\n\t\tsuccess = success || response.data.msg;\n\t\terror = error || response.data.msg;\n\t\tif (response.data.code === 200) {\n\t\t\tconsole.log(response.data);\n\t\t\tnotification.success({ message: success });\n\t\t\treturn true;\n\t\t} else {\n\t\t\tnotification.error({ message: error });\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport default new Tools();\n","import { config } from \"../interface/config\";\nimport Axios from \"axios\";\nimport Qs from \"querystring\";\nimport Tools from \"../tools/Tools\";\nimport Config from \"../components/config/Config\";\nimport { notification } from \"antd\";\n\nclass Command {\n\tserverNameAndDB(): any {\n\t\tlet name = Config.getServerName();\n\t\tlet db = Config.getDB();\n\t\tif (name === null) return notification.error({ message: \"请连接服务!\" });\n\t\tif (db === null) return notification.error({ message: \"请选择DB!\" });\n\t\treturn { name, db };\n\t}\n\n\tuuid() {\n\t\tlet uuid = Config.getUUID();\n\t\tif (!uuid) return notification.error({ message: \"uuid is empty!\" });\n\t\treturn { uuid };\n\t}\n\n\tasync register(type: string, cfg: config) {\n\t\treturn await Axios.post(`/redis/register/${type}`, Qs.stringify({ ...this.uuid(), ...cfg }));\n\t}\n\n\tasync disconnect(serverName: string) {\n\t\treturn await Axios.post(`/redis/db/disconnect`, Qs.stringify({ name: serverName, ...this.uuid() }));\n\t}\n\n\tasync selectDB(serverName: string, db: any) {\n\t\treturn await Axios.post(`/redis/db/select`, Qs.stringify({ name: serverName, db, ...this.uuid() }));\n\t}\n\n\tasync scan() {\n\t\tlet response = await Axios.post(`/redis/db/scan`, Qs.stringify({ ...this.serverNameAndDB(), ...this.uuid() }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync type(key: string) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/type`,\n\t\t\tQs.stringify({ ...this.serverNameAndDB(), key: key, ...this.uuid() })\n\t\t);\n\t\treturn response.data.msg;\n\t}\n\n\tasync do(key: string, args: any[]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\t...this.serverNameAndDB(),\n\t\t\t\t...this.uuid(),\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n\n\tasync doPipe(key: string, args: any[][]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\t...this.serverNameAndDB(),\n\t\t\t\t...this.uuid(),\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n}\n\nexport default new Command();\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addServer.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\n\nexport default class AddServer extends Component {\n\tstate = { visible: false, type: \"normal\", clusterHostInput: null };\n\tevent!: string;\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.event = Event.add(\"openAddServer\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(this.event);\n\t}\n\n\tname = \"\";\n\thost = \"\";\n\tport = \"\";\n\tpassword = \"\";\n\tmaster = \"\";\n\tcluster: any[] = [];\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"添加服务器\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tdestroyOnClose\n\t\t\t\tclassName=\"add-server\"\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tonChange={value => (this.name = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tonChange={value => (this.host = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tonChange={value => (this.port = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tonChange={value => (this.master = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tonChange={value => (this.password = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t创建\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tonChange={value => {\n\t\t\t\t\tthis.cluster[i] = value.target.value;\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tlet data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tlet response = await Command.register(this.state.type, data);\n\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tasync submit() {\n\t\tvar data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tif (this.name === \"\") return notification.error({ message: `服务器名不能为空!` });\n\n\t\tlet cfg = Config.get(this.name);\n\t\tif (cfg) return notification.error({ message: \"ERROR\", description: `${this.name} 已经存在!` });\n\n\t\tConfig.set(this.name, data);\n\n\t\tthis.onClose();\n\n\t\tEvent.emit(\"addServer\", this.name);\n\n\t\treturn notification.success({ message: \"SUCCESS\", description: \"创建成功\" });\n\t}\n}\n","import Socket from \"lows\";\nimport Config from \"../components/config/Config\";\n\nclass WebSocket {\n\tws: Socket;\n\tisStart = false;\n\n\tconstructor() {\n\t\tthis.ws = new Socket({\n\t\t\thost: \"http://127.0.0.1\",\n\t\t\tport: \"12389\"\n\t\t});\n\n\t\tthis.ws.Global = { uuid: Config.getUUID() };\n\n\t\tthis.ws.OnOpen = () => {\n\t\t\tconsole.log(\"on open\");\n\t\t\tthis.ws.Emit(\"/redis/login/login\", {});\n\t\t};\n\n\t\tthis.ws.AddListener(\"/redis/login/login\", (e: any, data: any) => {\n\t\t\tlocalStorage.setItem(\"status\", \"ready\");\n\t\t\twindow.location.hash = \"#/index\";\n\t\t});\n\n\t\tthis.ws.OnError = (err: any) => {\n\t\t\tconsole.log(\"on error\", err);\n\t\t};\n\n\t\tthis.ws.OnClose = () => {\n\t\t\tlocalStorage.removeItem(\"status\");\n\t\t\twindow.location.hash = \"#/login\";\n\t\t\tconsole.log(\"on close\");\n\t\t};\n\t}\n\n\tstart(fn: any) {\n\t\t!this.isStart && this.ws.Start(fn);\n\t\tthis.isStart = true;\n\t}\n\n\tclose() {\n\t\tthis.isStart && this.ws.Close();\n\t\tthis.isStart = false;\n\t}\n\n\tlisten(...args: any[]) {\n\t\tthis.ws.AddListener(...args);\n\t}\n\n\tremove(...args: any[]) {\n\t\tthis.ws.RemoveListener(...args);\n\t}\n}\n\nexport default new WebSocket();\n","class Tree {\n\tdataTree: any[] = [];\n\n\tcheckRead(data: any[]) {\n\t\tlet res: any[] = [];\n\t\tlet read = (data: any[]) => {\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i].children) {\n\t\t\t\t\tread(data[i].children);\n\t\t\t\t} else {\n\t\t\t\t\tif (!data[i].read) {\n\t\t\t\t\t\tres.push(data[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[i].read = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tread(data);\n\t\treturn res;\n\t}\n\n\tsearch(data: any[], key: string): any {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i].children) {\n\t\t\t\tlet res = this.search(data[i].children, key);\n\t\t\t\tif (res) return res;\n\t\t\t} else {\n\t\t\t\tif (data[i].prefix === key) {\n\t\t\t\t\treturn data[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tdeleteNode(data: any) {\n\t\tif (!data.parent) {\n\t\t\tlet index = this.dataTree.findIndex((v: any) => v.id === data.id);\n\t\t\tthis.dataTree.splice(index, 1);\n\t\t\treturn;\n\t\t}\n\t\tlet index = data.parent.children.findIndex((v: any) => v.id === data.id);\n\t\tdata.parent.children.splice(index, 1);\n\t\tif (data.parent.children.length === 0) this.deleteNode(data.parent);\n\t}\n\n\tdeleteKey(key: any) {\n\t\tvar node = this.search(this.dataTree, key);\n\t\tif (node) {\n\t\t\tthis.countSub(node);\n\t\t\tthis.deleteNode(node);\n\t\t}\n\t}\n\n\tinArr(arr: any, i: any) {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index][\"i\"] === i && arr[index].children) return arr[index];\n\t\t}\n\t\treturn false;\n\t}\n\n\tinArr1(arr: any, i: any): any {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index].i === i && !arr[index].children) return { parent: arr, current: arr[index] };\n\t\t}\n\t\treturn false;\n\t}\n\n\taddKey(key: string, isRead: boolean) {\n\t\tlet params = key.split(\":\");\n\t\tlet temp = this.dataTree;\n\t\tvar parent = null;\n\t\tfor (let index = 0; index < params.length; index++) {\n\t\t\tif (params.length === 1) {\n\t\t\t\tvar arr1 = this.inArr1(temp, params[index]);\n\t\t\t\tif (arr1) {\n\t\t\t\t\tarr1.current.read = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.length !== 1) {\n\t\t\t\tvar arr = this.inArr(temp, params[index]);\n\t\t\t\tif (arr) {\n\t\t\t\t\tif (index !== params.length - 1) {\n\t\t\t\t\t\tparent = arr;\n\t\t\t\t\t\ttemp = arr.children;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (index === params.length - 1) {\n\t\t\t\t\tfor (let i = 0; i < temp.length; i++) {\n\t\t\t\t\t\tif (temp[i].name === key) {\n\t\t\t\t\t\t\ttemp[i].read = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet item: any = {\n\t\t\t\tid: Math.random().toString(16),\n\t\t\t\tname: index === params.length - 1 ? key : params[index],\n\t\t\t\tisKey: index === params.length - 1,\n\t\t\t\ti: params[index],\n\t\t\t\tprefix: params.slice(0, index + 1).join(\":\"),\n\t\t\t\tchildren: index === params.length - 1 ? null : [],\n\t\t\t\tread: isRead,\n\t\t\t\tcount: 0,\n\t\t\t\tparent: parent\n\t\t\t};\n\n\t\t\tif (index === params.length - 1) this.countAdd(item);\n\n\t\t\tparent = item;\n\n\t\t\ttemp.push(item);\n\t\t\ttemp = item.children;\n\t\t}\n\t}\n\n\tcountAdd(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count++;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countAdd(data.parent);\n\t\t}\n\t}\n\n\tcountSub(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count--;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countSub(data.parent);\n\t\t}\n\t}\n}\n\nexport default new Tree();\n","import React, { Component } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport \"./keyTree.scss\";\nimport { Select, Button, message } from \"antd\";\nimport Tools from \"../../tools/Tools\";\nimport Event from \"../../event/Event\";\nimport Config from \"../config/Config\";\nimport WebSocket from \"../../ws/WebSocket\";\nimport { Treebeard } from \"react-treebeard-ts\";\nimport Command from \"../../services/Command\";\nimport Layer from \"../layer/Layer\";\nimport DataTree from \"./Tree\";\n\nconst Option = Select.Option;\n\nexport default class KeyTree extends Component {\n\tstate = {\n\t\tdatabases: [] as any[],\n\t\tdataTree: [] as any[],\n\t\tdb: \"请选择DB\" as any\n\t};\n\n\tserverName = \"\";\n\ttype = \"\";\n\tdbSize = 0;\n\tprev: any = null;\n\tshouldRefresh = false;\n\n\t// constructor(props: any) {\n\t// \tsuper(props);\n\t// }\n\n\tupdateTree() {\n\t\tthis.setState({ dataTree: DataTree.dataTree });\n\t}\n\n\tupdateDatabases() {\n\t\tlet { databases } = this.state;\n\t\tfor (let i = 0; i < databases.length; i++) {\n\t\t\tif (databases[i].key === this.state.db) {\n\t\t\t\tdatabases[i].size = this.dbSize;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ databases: databases });\n\t}\n\n\tasync componentDidMount() {\n\t\tEvent.add(\"connect\", (type, serverName) => this.connect(type, serverName));\n\t\tEvent.add(\"disconnect\", serverName => this.disconnect(serverName));\n\t\tEvent.add(\"update\", serverName => this.update(serverName));\n\t\tEvent.add(\"delete\", serverName => this.delete(serverName));\n\t\tEvent.add(\"deleteKey\", (key, fn) => this.deleteKey(key, fn));\n\t\tEvent.add(\"insertKey\", (key, fn) => this.insertKey(key, this.shouldRefresh, fn));\n\n\t\tWebSocket.listen(\"scan\", (e: any, v: any) => {\n\t\t\tlet keys = v.keys || [];\n\n\t\t\tEvent.emit(\"progress\", (v.current / v.dbSize) * 100);\n\n\t\t\tfor (let index = 0; index < keys.length; index++) {\n\t\t\t\tDataTree.addKey(keys[index], this.shouldRefresh);\n\t\t\t}\n\n\t\t\tthis.dbSize = v.dbSize;\n\n\t\t\t// read done\n\t\t\tif (v.dbSize === v.current) {\n\t\t\t\tEvent.emit(\"progress\", 0);\n\t\t\t\tthis.readDone();\n\t\t\t}\n\t\t\t// render tree\n\t\t\tthis.updateTree();\n\n\t\t\t// render databases\n\t\t\tthis.updateDatabases();\n\t\t});\n\n\t\t// await this.connect(\"normal\", \"127.0.0.1\");\n\t\t// this.selectDB(0);\n\t}\n\n\tdeleteKey(key: string, fn: any) {\n\t\tDataTree.deleteKey(key);\n\t\tthis.dbSize--;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\tinsertKey(key: string, isRead: boolean, fn: any) {\n\t\tDataTree.addKey(key, this.shouldRefresh);\n\t\tthis.dbSize++;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\treadDone() {\n\t\tmessage.info(\"数据加载成功\");\n\t\tif (this.shouldRefresh) {\n\t\t\tvar notRead = DataTree.checkRead(DataTree.dataTree);\n\t\t\tfor (let i = 0; i < notRead.length; i++) {\n\t\t\t\tDataTree.deleteKey(notRead[i].name);\n\t\t\t}\n\t\t}\n\t\tthis.shouldRefresh = false;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"connect\");\n\t\tEvent.remove(\"disconnect\");\n\t\tEvent.remove(\"update\");\n\t\tEvent.remove(\"delete\");\n\t\tEvent.remove(\"deleteKey\");\n\t\tEvent.remove(\"insertKey\");\n\t\tWebSocket.remove(\"scan\");\n\t\tDataTree.dataTree = [];\n\t}\n\n\tasync connect(type: string, serverName: any) {\n\t\tthis.reset();\n\t\tthis.type = type;\n\t\tthis.serverName = serverName;\n\t\tlet res = await this.login();\n\t\tif (!res) return;\n\n\t\tConfig.setServerName(serverName);\n\n\t\tfor (let i = 0; i < parseInt(res); i++) {\n\t\t\tthis.state.databases.push({ title: `db-${i}`, key: i, size: 0 });\n\t\t}\n\n\t\tmessage.success(\"连接成功\");\n\n\t\tConfig.setCurrent(Config.get(serverName));\n\n\t\tthis.updateDatabases();\n\t}\n\n\treset() {\n\t\tDataTree.dataTree = [];\n\t\tthis.serverName = \"\";\n\t\tthis.type = \"\";\n\t\tthis.dbSize = 0;\n\t\tthis.prev = null;\n\t\tthis.shouldRefresh = false;\n\t\tthis.setState({ databases: [], dataTree: [], db: \"请选择DB\" });\n\t\tConfig.delDB();\n\t\tConfig.delServerName();\n\t\tConfig.delCurrent();\n\t}\n\n\tdisconnect(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\tupdate(serverName: any) {\n\t\tEvent.emit(\"openUpdateServer\", serverName);\n\t}\n\n\tdelete(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Rnd\n\t\t\t\tdefault={{ height: \"100%\", width: \"250px\", x: 0, y: 0 }}\n\t\t\t\tminWidth={250}\n\t\t\t\tmaxWidth={500}\n\t\t\t\tbounds=\".content\"\n\t\t\t\tenableResizing={{ right: true }}\n\t\t\t\tdisableDragging={true}\n\t\t\t\tclassName=\"key-tree\"\n\t\t\t>\n\t\t\t\t<div className=\"select-panel\">\n\t\t\t\t\t{this.state.databases.length > 0 ? (\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.db}\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\tlistHeight={600}\n\t\t\t\t\t\t\tonSelect={value => this.selectDB(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.databases.map(v => (\n\t\t\t\t\t\t\t\t<Option key={v.key} value={v.key}>\n\t\t\t\t\t\t\t\t\t{v.title} {v.size ? `(${v.size})` : \"\"}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"data-tree\">\n\t\t\t\t\t{this.state.dataTree.length > 0 ? (\n\t\t\t\t\t\t<Treebeard\n\t\t\t\t\t\t\tdata={this.state.dataTree}\n\t\t\t\t\t\t\tonToggle={(node, toggled) => this.onToggle(node, toggled)}\n\t\t\t\t\t\t\tstyle={this.style}\n\t\t\t\t\t\t\tanimations={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.serverName} {this.type}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.refresh()}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Rnd>\n\t\t);\n\t}\n\n\trefresh(): void {\n\t\tthis.shouldRefresh = true;\n\t\tthis.selectDB(this.state.db);\n\t}\n\n\tstyle: any = {\n\t\ttree: {\n\t\t\tbase: {\n\t\t\t\tfontSize: \"12px\",\n\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\tbackgroundColor: \"#ffffff\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tpadding: \"5px\"\n\t\t\t},\n\t\t\tnode: { base: { color: \"red\" }, activeLink: { backgroundColor: \"#bae7ff\" } }\n\t\t}\n\t};\n\n\tonToggle(node: import(\"react-treebeard-ts\").TreeNode, toggled: boolean): void {\n\t\tif (this.prev) {\n\t\t\tthis.prev.active = false;\n\t\t}\n\n\t\tthis.prev = node;\n\n\t\tnode.active = true;\n\n\t\tif (node.children) {\n\t\t\tnode.toggled = toggled;\n\t\t} else {\n\t\t\tthis.onSelect(node.name);\n\t\t}\n\n\t\tthis.updateTree();\n\t}\n\n\tasync onSelect(key: string) {\n\t\tlet type = await Command.type(key);\n\t\tEvent.emit(\"selectKey\", this.serverName, type, key);\n\t}\n\n\tasync login() {\n\t\tLayer.load();\n\t\tlet cfg = Config.get(this.serverName);\n\t\tlet response = await Command.register(this.type, cfg);\n\t\tLayer.close();\n\t\tif (response.data.code !== 200) {\n\t\t\tTools.Notification(response);\n\t\t\treturn false;\n\t\t}\n\t\treturn response.data.msg[1];\n\t}\n\n\tasync selectDB(db: any) {\n\t\tif (this.state.db !== db) DataTree.dataTree = [];\n\t\tthis.state.db = db;\n\t\tlet response = await Command.selectDB(this.serverName, db);\n\t\tif (response.data.code !== 200) return Tools.Notification(response);\n\t\tConfig.setDB(db);\n\t\tawait Command.scan();\n\t}\n}\n","import { notification } from \"antd\";\nimport Command from \"../services/Command\";\n\nclass Transform {\n\tcheck(type: string): any {\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\treturn new RString();\n\t\t\tcase \"list\":\n\t\t\t\treturn new List();\n\t\t\tcase \"hash\":\n\t\t\t\treturn new Hash();\n\t\t\tcase \"set\":\n\t\t\t\treturn new Set();\n\t\t\tcase \"zset\":\n\t\t\t\treturn new ZSet();\n\t\t\tdefault:\n\t\t\t\tnotification.error({ message: `Unsupported type ${type}` });\n\t\t\t\treturn new Empty();\n\t\t}\n\t}\n\n\tselect(type: string, key: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).select(key, ...args));\n\t}\n\n\tupdate(type: string, key: string, value: any, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).update(key, value, ...args));\n\t}\n\n\tinsert(type: string, key: string, value: any, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).insert(key, value, ...args));\n\t}\n\n\tdelete(type: string, key: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type).delete(key, ...args));\n\t}\n\n\tcall(type: string, key: string, method: string, ...args: any[]) {\n\t\treturn this.do(key, this.check(type)[method](key, ...args));\n\t}\n\n\tttl(key: string) {\n\t\treturn this.do(key, [\"TTL\", key]);\n\t}\n\n\trename(key: string, newKey: string) {\n\t\treturn this.do(key, [\"RENAME\", key, newKey]);\n\t}\n\n\texpire(key: string, seconds: number) {\n\t\treturn this.do(key, [\"EXPIRE\", key, seconds]);\n\t}\n\n\tasync doPipe(key: string, cmd: any[][]) {\n\t\treturn await Command.doPipe(key, cmd);\n\t}\n\n\tasync do(key: string, cmd: any[]) {\n\t\treturn await Command.do(key, cmd);\n\t}\n}\n\nclass RString {\n\tselect(key: string) {\n\t\treturn [\"GET\", key];\n\t}\n\tupdate(key: string, value: string) {\n\t\treturn [\"SET\", key, value];\n\t}\n\tinsert(key: string, value: string) {\n\t\treturn [\"SET\", key, value];\n\t}\n\tdelete(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass List {\n\tlen(key: string) {\n\t\treturn [\"LLEN\", key];\n\t}\n\n\tinsert(key: string, value: string) {\n\t\treturn [\"LPUSH\", key, value];\n\t}\n\n\tselect(key: string, page: number, size: number) {\n\t\tlet skip = (page - 1) * size;\n\t\treturn [\"LRANGE\", key, skip, size * page - 1];\n\t}\n\n\tupdate(key: string, index: number, value: string) {\n\t\treturn [\"LSET\", key, index, value];\n\t}\n\n\tdelete(key: string, value: string) {\n\t\treturn [\"LREM\", key, 0, value];\n\t}\n\n\tremove(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass Hash {\n\tselect(key: string, curser: number) {\n\t\treturn [\"HSCAN\", key, curser, \"COUNT\", 10000];\n\t}\n\n\tlen(key: string) {\n\t\treturn [\"HLEN\", key];\n\t}\n\n\tupdate(key: string, k: string, v: string) {\n\t\treturn [\"HSET\", key, k, v];\n\t}\n\n\tinsert(key: string, k: string, v: string) {\n\t\treturn [\"HSET\", key, k, v];\n\t}\n\n\tdelete(key: string, k: string) {\n\t\treturn [\"HDEL\", key, k];\n\t}\n\n\tremove(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass Set {\n\tselect() {}\n}\nclass ZSet {\n\tselect() {}\n}\nclass Empty {\n\tselect() {}\n}\n\nexport default new Transform();\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./string.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class String extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = { key: \"\", showValue: \"\", rename: false, view: \"显示格式\" };\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\n\tasync select(type: string, key: string) {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet value = await Transform.select(type, key);\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\t\tthis.setState({ key: key, value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"string\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.save()}>\n\t\t\t\t\t\t\t保存\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\tasync save() {\n\t\tlet r = await Transform.update(this.type, this.key, this.state.showValue);\n\t\tif (!r) return;\n\t\tmessage.success(\"保存成功\");\n\t}\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.delete(this.type, this.state.key);\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ value: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./list.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class List extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = {\n\t\tkey: \"\",\n\t\tshowValue: \"\",\n\t\tlist: [] as any[],\n\t\tpage: 1,\n\t\trename: false,\n\t\taddRow: false,\n\t\taddRowValue: \"\",\n\t\tview: \"显示格式\"\n\t};\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tsize = 1000;\n\tlen = 0;\n\n\tselectIndex = 0;\n\tpage = 1;\n\tlistIndex = 0;\n\n\tasync select(type: string, key: string) {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.call(type, key, \"len\");\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\t\tthis.page = this.state.page;\n\t\tlet listArray = await Transform.select(type, key, this.state.page, this.size);\n\t\tif (listArray === false) return;\n\t\tif (this.selectIndex >= listArray.length - 1) this.selectIndex = listArray.length - 1;\n\t\tlet { list } = this.state;\n\t\tlist = [];\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ value: listArray[i], select: i === this.selectIndex });\n\t\t}\n\n\t\tthis.setState({ key, list, showValue: listArray[this.selectIndex] }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\tonScroll = (value: any) => {\n\t\t// console.log(value);\n\t\t// clientHeight + scrollTop = scrollHeight\n\t};\n\n\trenderItem = (value: any) => {\n\t\tif (value.index > this.state.list.length - 1) return;\n\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"key\">{(this.page - 1) * this.size + value.index + 1}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.listIndex = (this.page - 1) * this.size + value.index;\n\n\t\tthis.setState({ list, showValue: list[value.index].value }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tasync delRow() {\n\t\tif (this.len === 1) return this.deleteKey();\n\t\tlet u = await Transform.update(this.type, this.key, this.listIndex, \"@--LEMO-YXK--@\");\n\t\tif (!u) return;\n\t\tlet d = await Transform.delete(this.type, this.key, \"@--LEMO-YXK--@\");\n\t\tif (!d) return;\n\t\tif (this.listIndex === this.len - 1) {\n\t\t\tthis.selectIndex--;\n\t\t\tthis.listIndex--;\n\t\t}\n\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"删除成功!\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"list\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.addRow}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.addRow()}\n\t\t\t\t\tonCancel={() => this.closeAddRow()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.addRowValue}\n\t\t\t\t\t\tonChange={value => this.setState({ addRowValue: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Button onClick={() => this.delRow()}>删除行</Button>\n\t\t\t\t\t\t\t<Button onClick={() => this.openAddRow()}>添加行</Button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.state.list.length}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\t// scrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"end\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.onScroll}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonBlur={() => this.setPage(this.state.page || this.page)}\n\t\t\t\t\t\t\t\tvalue={this.state.page}\n\t\t\t\t\t\t\t\tonChange={value => this.setPage(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.save()}>\n\t\t\t\t\t\t\t\t保存\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tasync addRow() {\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.addRowValue);\n\t\tif (!r) return;\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"添加成功!\");\n\t\tthis.closeAddRow();\n\t\tthis.state.addRowValue = \"\";\n\t\tthis.selectIndex++;\n\t\tthis.listIndex++;\n\t}\n\n\tprevPage = () => {\n\t\tif (this.state.page <= 1 || !this.state.page) return;\n\t\tthis.state.page--;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tnextPage = () => {\n\t\tif (this.state.page >= Math.ceil(this.len / this.size) || !this.state.page) return;\n\t\tthis.state.page++;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tgo = () => {\n\t\tthis.select(this.type, this.key);\n\t};\n\n\tsetPage(page: any) {\n\t\tif (page === \"\") return this.setState({ page });\n\t\tpage = parseInt(page) || 1;\n\t\tif (page < 1 || page > Math.ceil(this.len / this.size)) return;\n\t\tthis.setState({ page });\n\t}\n\n\tasync save() {\n\t\tlet r = await Transform.update(this.type, this.key, this.listIndex, this.state.showValue);\n\t\tif (!r) return;\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].value = this.state.showValue;\n\t\tthis.setState({ list }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.call(this.type, this.state.key, \"remove\");\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tcloseAddRow(): void {\n\t\tthis.setState({ addRow: false });\n\t}\n\n\topenAddRow(): void {\n\t\tthis.setState({ addRow: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./hash.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class Hash extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAllData(this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = {\n\t\tkey: \"\",\n\t\tshowValue: \"\",\n\t\tshowKey: \"\",\n\t\tlist: [] as any[],\n\t\tpage: 1,\n\t\trename: false,\n\t\taddRow: false,\n\t\taddRowValue: \"\",\n\t\taddRowKey: \"\",\n\t\tview: \"显示格式\"\n\t};\n\n\ttype = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tsize = 1000;\n\tlen = 0;\n\n\tselectIndex = 0;\n\tpage = 1;\n\tlistIndex = 0;\n\n\tallData: any[] = [];\n\n\tasync loadAllData(type: string, key: string) {\n\t\tthis.allData = [];\n\t\tvar cursor = 0;\n\t\tvar res: any = {};\n\t\twhile (1) {\n\t\t\tlet r = await Transform.select(type, key, cursor);\n\t\t\tif (!r) return;\n\t\t\tcursor = parseInt(r[0]);\n\t\t\tfor (let i = 0; i < r[1].length; i += 2) {\n\t\t\t\tconst key = r[1][i];\n\t\t\t\tconst value = r[1][i + 1];\n\t\t\t\tres[key] = value;\n\t\t\t}\n\t\t\tif (cursor === 0) break;\n\t\t}\n\t\tfor (const key in res) {\n\t\t\tthis.allData.push({ key: key, value: res[key] });\n\t\t}\n\n\t\tthis.select(type, key);\n\t}\n\n\tasync select(type: string, key: string) {\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.call(type, key, \"len\");\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(key);\n\t\tthis.ttl = ttl;\n\n\t\tthis.page = this.state.page;\n\t\tlet listArray = this.allData.slice((this.page - 1) * this.size, (this.page - 1) * this.size + this.size);\n\t\tif (this.selectIndex >= listArray.length - 1) this.selectIndex = listArray.length - 1;\n\n\t\tlet { list } = this.state;\n\t\tlist = [];\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ key: listArray[i].key, value: listArray[i].value, select: i === this.selectIndex });\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{ key, list, showValue: listArray[this.selectIndex].value, showKey: listArray[this.selectIndex].key },\n\t\t\t() => {\n\t\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t\t}\n\t\t);\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\tonScroll = (value: any) => {\n\t\t// console.log(value);\n\t\t// clientHeight + scrollTop = scrollHeight\n\t};\n\n\trenderItem = (value: any) => {\n\t\tif (value.index > this.state.list.length - 1) return;\n\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"i\">{(this.page - 1) * this.size + value.index + 1}</div>\n\t\t\t\t<div className=\"key\">{this.state.list[value.index].key}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.listIndex = (this.page - 1) * this.size + value.index;\n\n\t\tthis.setState({ list, showValue: list[value.index].value, showKey: list[value.index].key }, () => {\n\t\t\tthis.vlist.current?.forceUpdateGrid();\n\t\t});\n\t}\n\n\tasync delRow() {\n\t\tlet item = this.state.list[this.selectIndex];\n\t\tif (this.len === 1) return this.deleteKey();\n\t\tlet d = await Transform.delete(this.type, this.key, item.key);\n\t\tif (d === false) return;\n\t\tif (this.listIndex === this.len - 1) {\n\t\t\tthis.selectIndex--;\n\t\t\tthis.listIndex--;\n\t\t}\n\t\tthis.allData.splice(this.selectIndex, 1);\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"删除成功!\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"hash\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.addRow}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.addRow()}\n\t\t\t\t\tonCancel={() => this.closeAddRow()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"add-row\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.addRowKey}\n\t\t\t\t\t\t\taddonBefore={\"KEY\"}\n\t\t\t\t\t\t\tonChange={value => this.setState({ addRowKey: value.target.value })}\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.addRowValue}\n\t\t\t\t\t\t\taddonBefore={\"VAL\"}\n\t\t\t\t\t\t\tonChange={value => this.setState({ addRowValue: value.target.value })}\n\t\t\t\t\t\t></Input>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.loadAllData(this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Option key=\"text\" value=\"text\">\n\t\t\t\t\t\t\t\t\ttext\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Button onClick={() => this.delRow()}>删除行</Button>\n\t\t\t\t\t\t\t<Button onClick={() => this.openAddRow()}>添加行</Button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.state.list.length}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\t// scrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"end\"\n\t\t\t\t\t\t\t\t\t\tonScroll={this.onScroll}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={this.state.showKey}\n\t\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\t\tonChange={value => this.onChangeShowKey(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\t\tvalue={this.state.showValue}\n\t\t\t\t\t\t\t\tonChange={value => this.onChangeShowValue(value.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonBlur={() => this.setPage(this.state.page || this.page)}\n\t\t\t\t\t\t\t\tvalue={this.state.page}\n\t\t\t\t\t\t\t\tonChange={value => this.setPage(value.target.value)}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.save()}>\n\t\t\t\t\t\t\t\t保存\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tasync addRow() {\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.addRowKey, this.state.addRowValue);\n\t\tif (r === false) return;\n\t\tif (r === 0) {\n\t\t\tthis.filter(this.state.addRowKey);\n\t\t}\n\t\tthis.allData.splice(this.selectIndex, 0, { value: this.state.addRowValue, key: this.state.addRowKey });\n\t\tthis.select(this.type, this.key);\n\t\tmessage.success(\"添加成功!\");\n\t\tthis.closeAddRow();\n\t\tthis.state.addRowValue = \"\";\n\t\tthis.state.addRowKey = \"\";\n\t\tthis.selectIndex++;\n\t\tthis.listIndex++;\n\t}\n\n\tprevPage = () => {\n\t\tif (this.state.page <= 1 || !this.state.page) return;\n\t\tthis.state.page--;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tnextPage = () => {\n\t\tif (this.state.page >= Math.ceil(this.len / this.size) || !this.state.page) return;\n\t\tthis.state.page++;\n\t\tthis.setPage(this.state.page);\n\t\tthis.go();\n\t};\n\n\tgo = () => {\n\t\tthis.select(this.type, this.key);\n\t};\n\n\tsetPage(page: any) {\n\t\tif (page === \"\") return this.setState({ page });\n\t\tpage = parseInt(page) || 1;\n\t\tif (page < 1 || page > Math.ceil(this.len / this.size)) return;\n\t\tthis.setState({ page });\n\t}\n\n\tfilter(key: string) {\n\t\tfor (let i = 0; i < this.allData.length; i++) {\n\t\t\tconst element = this.allData[i];\n\t\t\tif (element.key === key) {\n\t\t\t\tthis.allData.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync save() {\n\t\tlet item = this.state.list[this.selectIndex];\n\n\t\t// delete\n\t\tlet d = await Transform.delete(this.type, this.key, item.key);\n\t\tif (d === false) return;\n\n\t\tthis.allData.splice(this.selectIndex, 1);\n\n\t\t// add\n\t\tlet r = await Transform.insert(this.type, this.key, this.state.showKey, this.state.showValue);\n\t\tif (r === false) return;\n\t\tif (r === 0) {\n\t\t\tthis.filter(this.state.showKey);\n\t\t}\n\t\tthis.allData.splice(this.selectIndex, 0, { value: this.state.showValue, key: this.state.showKey });\n\n\t\tthis.select(this.type, this.key);\n\t\t// let { list } = this.state;\n\t\t// list[this.selectIndex].value = this.state.showValue;\n\t\t// list[this.selectIndex].key = this.state.showKey;\n\t\t// this.setState({ list }, () => {\n\t\t// \tthis.vlist.current?.forceUpdateGrid();\n\t\t// });\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tswitch (view) {\n\t\t\tcase \"json\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v, null, 4) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\ttry {\n\t\t\t\t\tvar v = JSON.parse(this.state.showValue);\n\t\t\t\t\tthis.setState({ view: view, showValue: JSON.stringify(v) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.call(this.type, this.state.key, \"remove\");\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tcloseAddRow(): void {\n\t\tthis.setState({ addRow: false });\n\t}\n\n\topenAddRow(): void {\n\t\tthis.setState({ addRow: true });\n\t}\n\n\tonChangeShowValue(value: string): void {\n\t\tthis.setState({ showValue: value });\n\t}\n\n\tonChangeShowKey(value: string): void {\n\t\tthis.setState({ showKey: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./panel.scss\";\nimport Event from \"../../event/Event\";\nimport String from \"./data/String\";\nimport List from \"./data/List\";\nimport { Tabs } from \"antd\";\nimport Hash from \"./data/Hash\";\nconst { TabPane } = Tabs;\nexport default class Panel extends Component {\n\tstate = { activeKey: \"\", panes: [] as any[] };\n\tserverName = \"\";\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tEvent.add(\"selectKey\", (serverName: string, type: string, key: string) => {\n\t\t\tthis.serverName = serverName;\n\n\t\t\tif (this.state.panes.find(v => v.key === key)) {\n\t\t\t\tthis.setState({ activeKey: key });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { panes } = this.state;\n\n\t\t\tlet component = this.createComponent(type, key);\n\n\t\t\tpanes.push({ title: key, content: component, key: key });\n\n\t\t\tif (panes.length > 3) panes.shift();\n\n\t\t\tthis.setState({ panes: panes, activeKey: key });\n\t\t});\n\t}\n\n\tcreateComponent(type: string, key: string) {\n\t\tlet component = null;\n\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\tcomponent = this.createString(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"list\":\n\t\t\t\tcomponent = this.createList(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"hash\":\n\t\t\t\tcomponent = this.createHash(type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"zset\":\n\t\t\t\tbreak;\n\t\t\tcase \"set\":\n\t\t\t\tbreak;\n\t\t}\n\t\treturn component;\n\t}\n\n\tcreateString(type: string, key: string) {\n\t\treturn <String parent={this} type={type} keys={key}></String>;\n\t}\n\n\tcreateList(type: string, key: string) {\n\t\treturn <List parent={this} type={type} keys={key}></List>;\n\t}\n\n\tcreateHash(type: string, key: string) {\n\t\treturn <Hash parent={this} type={type} keys={key}></Hash>;\n\t}\n\n\tcomponentDidMount() {}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"selectKey\");\n\t}\n\n\tonChange = (activeKey: any) => {\n\t\tthis.setState({ activeKey });\n\t};\n\n\tonEdit = (targetKey: any, action: string | number) => {\n\t\tif (action === \"add\") {\n\t\t\tthis.add();\n\t\t} else {\n\t\t\tthis.remove(targetKey);\n\t\t}\n\t};\n\n\tupdate(type: string, oldKey: string, newKey: string) {\n\t\tfor (let i = 0; i < this.state.panes.length; i++) {\n\t\t\tconst element = this.state.panes[i];\n\t\t\tif (element.key === oldKey) {\n\t\t\t\telement.title = newKey;\n\t\t\t\telement.key = newKey;\n\t\t\t\telement.content = this.createComponent(type, newKey);\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes: this.state.panes, activeKey: newKey });\n\t}\n\n\tadd = () => {};\n\n\tremove = (targetKey: string) => {\n\t\tlet activeKey = this.state.activeKey;\n\t\tlet lastIndex: any;\n\t\tthis.state.panes.forEach((pane: { key: string }, i: number) => {\n\t\t\tif (pane.key === targetKey) {\n\t\t\t\tlastIndex = i - 1;\n\t\t\t}\n\t\t});\n\t\tconst panes = this.state.panes.filter((pane: { key: string }) => pane.key !== targetKey);\n\t\tif (panes.length && activeKey === targetKey) {\n\t\t\tif (lastIndex >= 0) {\n\t\t\t\tactiveKey = panes[lastIndex].key;\n\t\t\t} else {\n\t\t\t\tactiveKey = panes[0].key;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes, activeKey });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<Tabs\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tactiveKey={this.state.activeKey}\n\t\t\t\t\ttype=\"editable-card\"\n\t\t\t\t\tonEdit={this.onEdit}\n\t\t\t\t\thideAdd\n\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t\t\ttabBarStyle={{ margin: 0, minWidth: \"200px\" }}\n\t\t\t\t\tdestroyInactiveTabPane={true}\n\t\t\t\t\tanimated={false}\n\t\t\t\t\ttabBarGutter={0}\n\t\t\t\t>\n\t\t\t\t\t{this.state.panes.map(\n\t\t\t\t\t\t(pane: {\n\t\t\t\t\t\t\ttitle: React.ReactNode;\n\t\t\t\t\t\t\tkey: string | undefined;\n\t\t\t\t\t\t\tclosable: boolean | undefined;\n\t\t\t\t\t\t\tcontent: React.ReactNode;\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<TabPane\n\t\t\t\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n\t\t\t\t\t\t\t\ttab={pane.title}\n\t\t\t\t\t\t\t\tkey={pane.key}\n\t\t\t\t\t\t\t\tclosable={pane.closable}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{pane.content}\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Button, Modal } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./serverList.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\n\nexport default class ServerList extends Component {\n\tstate = { visible: false, modal: false, header: this.createHeader() };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openServerList\", () => this.onOpen());\n\t\tEvent.add(\"addServer\", () => this.setState({ header: this.createHeader() }));\n\t\tEvent.add(\"updateServer\", () => this.setState({ header: this.createHeader() }));\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openServerList\");\n\t}\n\n\tcreateHeader() {\n\t\tlet data = [];\n\t\tlet config = Config.all();\n\t\tfor (const serverName in config) {\n\t\t\tdata.push(\n\t\t\t\t<div className=\"db-header\" key={serverName}>\n\t\t\t\t\t<div>{serverName}</div>\n\t\t\t\t\t<div className=\"button\">\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.connect(serverName)}>\n\t\t\t\t\t\t\t连接\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.update(serverName)}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.disconnect(serverName)}>\n\t\t\t\t\t\t\t断开\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.delete(serverName)}>\n\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn data;\n\t}\n\n\tupdate(serverName: string) {\n\t\tEvent.emit(\"update\", serverName);\n\t}\n\n\tserverName = \"\";\n\tconnect(serverName: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.onChooseOpen();\n\t}\n\n\tdisconnect(serverName: string) {\n\t\tthis.onClose();\n\t\tEvent.emit(\"disconnect\", serverName);\n\t\tCommand.disconnect(serverName);\n\t}\n\n\tdelete(serverName: string) {\n\t\tModal.confirm({\n\t\t\ttitle: `确定要删除 ${serverName} 的配置吗`,\n\t\t\tokText: \"确认\",\n\t\t\tcancelText: \"取消\",\n\t\t\tonOk: () => {\n\t\t\t\tConfig.delete(serverName);\n\t\t\t\tthis.setState({ header: this.createHeader() });\n\t\t\t\tEvent.emit(\"delete\", serverName);\n\t\t\t\tCommand.disconnect(serverName);\n\t\t\t}\n\t\t});\n\t}\n\n\tonChooseClose() {\n\t\tthis.setState({ modal: false });\n\t}\n\n\tonChooseOpen() {\n\t\tthis.setState({ modal: true });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"服务器列表\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tclassName=\"server-list\"\n\t\t\t\tdestroyOnClose\n\t\t\t>\n\t\t\t\t{this.state.header}\n\t\t\t\t<Modal\n\t\t\t\t\tdestroyOnClose\n\t\t\t\t\ttitle={`选择连接方式`}\n\t\t\t\t\tvisible={this.state.modal}\n\t\t\t\t\tclassName=\"choose-server\"\n\t\t\t\t\tonCancel={() => this.onChooseClose()}\n\t\t\t\t\tclosable={true}\n\t\t\t\t\tmaskClosable={true}\n\t\t\t\t\tfooter={null}\n\t\t\t\t>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"normal\")}>\n\t\t\t\t\t\tNormal\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"cluster\")}>\n\t\t\t\t\t\tCluster\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tchoose(type: string): void {\n\t\tEvent.emit(\"connect\", type, this.serverName);\n\t\tthis.onChooseClose();\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport Event from \"../../event/Event\";\nimport { Radio, Input, Button, message } from \"antd\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\nimport \"./updateServer.scss\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\nimport Layer from \"../layer/Layer\";\n\nexport default class UpdateServer extends Component {\n\tstate = { visible: false, config: {} as config, type: \"normal\", clusterHostInput: null };\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tserverName = \"\";\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openUpdateServer\", serverName => {\n\t\t\tthis.serverName = serverName;\n\t\t\tlet config = Config.get(serverName);\n\t\t\tif (!config.cluster) config.cluster = [];\n\t\t\tthis.setState({ config: config }, () => this.setState({ clusterHostInput: this.createCluster() }));\n\t\t\tthis.onOpen();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openUpdateServer\");\n\t}\n\n\tonChange(type: string, value: string) {\n\t\t(this.state.config as any)[type] = value;\n\t\tthis.setState({ config: this.state.config, clusterHostInput: this.createCluster() });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`修改 ${this.state.config.name} 配置`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"update-server\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tvalue={this.state.config.name}\n\t\t\t\t\t\tonChange={value => this.onChange(\"name\", value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tvalue={this.state.config.host}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"host\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tvalue={this.state.config.port}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"port\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tvalue={this.state.config.master}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"master\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tvalue={this.state.config.password}\n\t\t\t\t\t\tonChange={value => this.onChange(\"password\", value.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.state.config.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tvalue={this.state.config.cluster[i]}\n\t\t\t\tonChange={value => {\n\t\t\t\t\tlet cfg = this.state.config;\n\t\t\t\t\tcfg.cluster[i] = value.target.value;\n\t\t\t\t\tthis.setState({ config: cfg, clusterHostInput: this.createCluster() });\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.state.config.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.state.config.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tthis.state.config.cluster = this.state.config.cluster.filter(v => v !== \"\");\n\t\tLayer.load();\n\t\tlet response = await Command.register(this.state.type, this.state.config);\n\t\tLayer.close();\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tsubmit() {\n\t\tConfig.delete(this.serverName);\n\t\tlet cfg = this.state.config;\n\t\tcfg.cluster = cfg.cluster.filter(v => v !== \"\");\n\t\tConfig.set(this.state.config.name, this.state.config);\n\t\tmessage.success(\"修改成功\");\n\t\tthis.onClose();\n\t\tEvent.emit(\"updateServer\");\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport \"./progress.scss\";\nimport Event from \"../../event/Event\";\n\nexport default class MProgress extends Component {\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"progress\");\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"progress\", v => this.progress(v));\n\t}\n\n\tprogress(v: number) {\n\t\tif (v === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ progress: v });\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tthis.setState({ progress: v });\n\t\t}\n\t}\n\n\tstate = { progress: 100 };\n\n\trender() {\n\t\treturn (\n\t\t\t<Progress\n\t\t\t\tstrokeColor={{\n\t\t\t\t\t\"0%\": \"#108ee9\",\n\t\t\t\t\t\"100%\": \"#87d068\"\n\t\t\t\t}}\n\t\t\t\tstyle={{ width: \"100%\", height: \"1px\" }}\n\t\t\t\tshowInfo={false}\n\t\t\t\tstrokeWidth={3}\n\t\t\t\tpercent={this.state.progress}\n\t\t\t\tclassName=\"progress\"\n\t\t\t/>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Radio, Input, Button, Modal, message } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addKey.scss\";\nimport Transform from \"../../transform/Transform\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\n\nexport default class AddKey extends Component {\n\tstate = { visible: false, keyType: \"string\", key: \"\", value: \"\" };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.config = Config.getCurrent();\n\t\tif (this.config.name === \"\") {\n\t\t\tmessage.error(\"请连接服务器!\");\n\t\t\treturn this.onClose();\n\t\t}\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"addKey\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"addKey\");\n\t}\n\n\tconfig: config = {} as config;\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`添加KEY`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"add-key\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div className=\"select-box\">\n\t\t\t\t\t<Radio.Group\n\t\t\t\t\t\tvalue={this.state.keyType}\n\t\t\t\t\t\tonChange={value => this.setState({ keyType: value.target.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Radio.Button value=\"string\">string</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"list\">list</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"hash\">hash</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"set\">set</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"zset\">zset</Radio.Button>\n\t\t\t\t\t</Radio.Group>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"input-box\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"KEY\"\n\t\t\t\t\t\tplaceholder=\"key\"\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Value\"\n\t\t\t\t\t\tplaceholder=\"value\"\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={value => this.setState({ value: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => this.add()}>\n\t\t\t\t\t\t确定\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t取消\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\tasync add() {\n\t\tif (this.state.key === \"\") {\n\t\t\tmessage.error(\"KEY不能为空!\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.state.value === \"\") {\n\t\t\tmessage.error(\"VALUE不能为空!\");\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (this.state.keyType) {\n\t\t\tcase \"string\":\n\t\t\t\tlet r = await Transform.insert(this.config.name, this.state.keyType, this.state.key, this.state.value);\n\t\t\t\tif (!r) return;\n\t\t\t\tmessage.success(\"添加成功!\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage.error(\"不支持的类型!\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tEvent.emit(\"insertKey\", this.state.key);\n\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport Header from \"../../components/header/Header\";\nimport AddServer from \"../../components/addServer/AddServer\";\nimport KeyTree from \"../../components/keyTree/KeyTree\";\nimport Panel from \"../../components/panel/Panel\";\nimport ServerList from \"../../components/serverList/ServerList\";\nimport UpdateServer from \"../../components/updateServer/UpdateServer\";\nimport MProgress from \"../../components/progress/Progress\";\nimport AddKey from \"../../components/addKey/AddKey\";\n\nclass Index extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"index\">\n\t\t\t\t<AddKey></AddKey>\n\t\t\t\t<AddServer></AddServer>\n\t\t\t\t<ServerList></ServerList>\n\t\t\t\t<UpdateServer></UpdateServer>\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<Header></Header>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<KeyTree></KeyTree>\n\t\t\t\t\t<Panel></Panel>\n\t\t\t\t</div>\n\t\t\t\t<MProgress></MProgress>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Index;\n","import React from \"react\";\nimport \"./login.scss\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nfunction Login() {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<LoadingOutlined style={{ fontSize: \"2rem\" }}></LoadingOutlined>\n\t\t\t\t\t<div className=\"tips\">正在准备...</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory, History, UnregisterCallback, Location } from \"history\";\nimport \"./App.scss\";\nimport Index from \"./pages/index/Index\";\nimport Login from \"./pages/login/Login\";\nimport WebSocket from \"./ws/WebSocket\";\n\nexport default class App extends Component {\n\tunlisten!: UnregisterCallback;\n\n\tchange(location: Location<History.PoorMansUnknown>) {\n\t\tif (!localStorage.getItem(\"status\")) return (window.location.hash = \"/login\");\n\t\tif (location.hash === \"#/login\") return (window.location.hash = \"/index\");\n\t}\n\n\tstate = { start: false };\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tWebSocket.start(() => this.setState({ start: true }));\n\t}\n\n\tcomponentDidMount() {\n\t\tconst history = createBrowserHistory();\n\t\t// Get the current location.\n\t\tconst location = history.location;\n\n\t\tthis.change(location);\n\n\t\t// Listen for changes to the current location.\n\t\tthis.unlisten = history.listen((location, action) => {\n\t\t\t// location is an object like window.location\n\t\t\tthis.change(location);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tWebSocket.close();\n\t\tthis.unlisten();\n\t}\n\n\trender() {\n\t\treturn this.state.start ? (\n\t\t\t<HashRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/index\" component={Index} />\n\t\t\t\t\t<Route path=\"/login\" component={Login} exact />\n\t\t\t\t\t<Redirect from=\"**\" to=\"/index\" />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t) : null;\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { message, notification } from \"antd\";\nimport Config from \"./app/components/config/Config\";\n\nAxios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\nAxios.defaults.baseURL = \"http://127.0.0.1:12388\";\n\nAxios.defaults.timeout = 5000;\n\nAxios.interceptors.response.use(\n\tresponse => {\n\t\treturn response;\n\t},\n\terror => {\n\t\treturn error;\n\t}\n);\n\nmessage.config({ maxCount: 3 });\n\nnotification.config({ duration: 2, placement: \"bottomRight\" });\n\n// create uuid\nif (!Config.getUUID()) Config.createUUID();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}