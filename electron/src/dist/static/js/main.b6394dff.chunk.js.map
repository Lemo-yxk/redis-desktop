{"version":3,"sources":["app/event/Event.ts","app/components/header/Header.tsx","app/components/config/Config.ts","app/components/layer/Layer.ts","app/tools/Tools.ts","app/services/Command.ts","app/components/addServer/AddServer.tsx","app/ws/WebSocket.ts","app/components/keyTree/KeyTree.tsx","app/transform/Transform.ts","app/components/panel/data/String.tsx","app/components/panel/data/List.tsx","app/components/panel/Panel.tsx","app/components/serverList/ServerList.tsx","app/components/updateServer/UpdateServer.tsx","app/components/progress/Progress.tsx","app/components/addKey/AddKey.tsx","app/pages/index/Index.tsx","app/pages/login/Login.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["events","name","e","this","args","Header","state","date","addKey","Event","emit","className","type","ghost","onClick","PlusOutlined","danger","AlignLeftOutlined","Component","JSON","parse","localStorage","getItem","cfg","setItem","stringify","config","removeItem","mask","div","document","createElement","style","display","justifyContent","alignItems","width","height","position","top","left","child","appendChild","body","data","s","key","slice","begin","end","res","index","push","response","success","error","isAxiosError","toJSON","notification","message","destroy","Layer","close","msg","code","Axios","post","Qs","serverName","db","join","Tools","Notification","AddServer","visible","clusterHostInput","event","host","port","password","master","cluster","Array","setState","add","onOpen","remove","title","placement","closable","onClose","getContainer","destroyOnClose","Group","value","onChange","target","Button","spellCheck","addonBefore","placeholder","addHost","submit","test","map","v","i","addonAfter","MinusCircleOutlined","removeHost","splice","createCluster","filter","console","log","Command","register","Config","get","description","set","ws","isStart","Socket","onError","err","start","addListener","Option","KeyTree","select","dataTree","databases","baseKeys","shouldRefresh","tree","base","fontSize","whiteSpace","backgroundColor","padding","node","color","activeLink","prev","connect","disconnect","update","delete","deleteKey","insertKey","WebSocket","listen","keys","length","addDataTree","current","dbSize","createDataTree","readDone","selectDB","checkRead","children","read","params","split","temp","k","link","unshift","p","j","t","login","setCurrent","createSelect","createTitle","arr","parent","inArr1","inArr","item","id","Math","random","toString","default","x","y","minWidth","maxWidth","bounds","enableResizing","right","disableDragging","refresh","listHeight","onSelect","Range","parseInt","onToggle","toggled","animations","active","load","scan","Transform","String","List","Hash","Set","ZSet","Empty","do","check","insert","newKey","seconds","cmd","doPipe","TextArea","props","rename","view","ttl","maskClosable","onOk","renameKey","onCancel","closeRename","okText","cancelText","toUpperCase","openRename","onConfirm","icon","QuestionCircleOutlined","changeView","save","oldKey","TabPane","Panel","activeKey","panes","onEdit","targetKey","action","lastIndex","forEach","pane","find","component","createString","content","shift","element","hideAdd","tabBarStyle","margin","destroyInactiveTabPane","animated","tabBarGutter","tab","ServerList","modal","header","createHeader","all","onChooseOpen","confirm","onChooseClose","footer","choose","UpdateServer","MProgress","progress","strokeColor","showInfo","strokeWidth","percent","AddKey","keyType","getCurrent","Index","Login","App","unlisten","location","hash","window","history","createBrowserHistory","change","path","exact","from","to","Boolean","hostname","match","defaults","headers","baseURL","timeout","interceptors","use","maxCount","duration","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b6394dff.chunk.js","sourcesContent":["class Event {\n\tevents: { [key: string]: (...args: any[]) => void } = {};\n\n\tadd(name: string, e: (...args: any[]) => void): string {\n\t\tthis.events[name] = e;\n\t\treturn name;\n\t}\n\n\tremove(name: string) {\n\t\tdelete this.events[name];\n\t}\n\n\temit(name: string, ...args: any[]) {\n\t\tthis.events[name] && this.events[name](...args);\n\t}\n}\n\nexport default new Event();\n","import React, { Component } from \"react\";\nimport { Button, Progress } from \"antd\";\nimport \"./header.scss\";\nimport Event from \"../../event/Event\";\nimport { AlignLeftOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nexport default class Header extends Component {\n\tstate = { date: \"\" };\n\n\taddKey = () => {\n\t\tEvent.emit(\"addKey\");\n\t};\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<Button type=\"link\" ghost onClick={this.addKey}>\n\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => Event.emit(\"openAddServer\")}>\n\t\t\t\t\t\t添加服务器\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" danger ghost onClick={() => Event.emit(\"openServerList\")}>\n\t\t\t\t\t\t<AlignLeftOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { config } from \"../../interface/config\";\n\nclass Config {\n\tgetCurrent() {\n\t\treturn JSON.parse(localStorage.getItem(\"current\") || \"{}\");\n\t}\n\n\tsetCurrent(cfg: config) {\n\t\tlocalStorage.setItem(\"current\", JSON.stringify(cfg));\n\t}\n\n\tall() {\n\t\treturn JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t}\n\n\tget(name: string): config {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\treturn cfg[name];\n\t}\n\n\tset(name: string, config: config) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tcfg[name] = config;\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tdelete(name: string) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tdelete cfg[name];\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tclear() {\n\t\tlocalStorage.removeItem(\"config\");\n\t}\n}\n\nexport default new Config();\n","class Layer {\n\tmask: any;\n\n\tconstructor() {\n\t\tlet div = document.createElement(\"div\");\n\t\tdiv.style.display = \"flex\";\n\t\tdiv.style.justifyContent = \"center\";\n\t\tdiv.style.alignItems = \"center\";\n\t\tdiv.style.width = \"100vw\";\n\t\tdiv.style.height = \"100vh\";\n\t\tdiv.style.position = \"absolute\";\n\t\tdiv.style.top = \"0\";\n\t\tdiv.style.left = \"0\";\n\t\tdiv.style.display = \"none\";\n\t\tthis.mask = div;\n\n\t\tlet child = document.createElement(\"div\");\n\t\tchild.className = \"load-mask-child\";\n\n\t\tdiv.appendChild(child);\n\t\tdocument.body.appendChild(div);\n\t}\n\n\tload() {\n\t\tthis.mask.style.display = \"flex\";\n\t}\n\n\tclose() {\n\t\tthis.mask.style.display = \"none\";\n\t}\n}\n\nexport default new Layer();\n","import { notification, message } from \"antd\";\nimport Layer from \"../components/layer/Layer\";\nclass Tools {\n\tQueryString(data: { [key: string]: string }) {\n\t\tlet s = \"\";\n\t\tfor (const key in data) {\n\t\t\ts += `${key}=${data[key]}&`;\n\t\t}\n\t\treturn s.slice(0, -1);\n\t}\n\n\tRange(begin: number, end: number): number[] {\n\t\tlet res = [];\n\t\tfor (let index = begin; index < end; index++) {\n\t\t\tres.push(index);\n\t\t}\n\t\treturn res;\n\t}\n\n\tNotification(response: any, success?: any, error?: any) {\n\t\tif (response.isAxiosError) {\n\t\t\tlet error = response.toJSON();\n\t\t\tnotification.error({ message: error.message });\n\t\t\tmessage.destroy();\n\t\t\tLayer.close();\n\t\t\tthrow error;\n\t\t}\n\t\tsuccess = success || response.data.msg;\n\t\terror = error || response.data.msg;\n\t\tif (response.data.code === 200) {\n\t\t\tnotification.success({ message: success });\n\t\t\treturn true;\n\t\t} else {\n\t\t\tnotification.error({ message: error });\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport default new Tools();\n","import { config } from \"../interface/config\";\nimport Axios from \"axios\";\nimport Qs from \"querystring\";\nimport Tools from \"../tools/Tools\";\n\nclass Command {\n\tasync register(type: string, config: config) {\n\t\treturn await Axios.post(`/redis/register/${type}`, Qs.stringify(config as any));\n\t}\n\n\tasync disconnect(serverName: string) {\n\t\treturn await Axios.post(`/redis/db/disconnect`, Qs.stringify({ name: serverName }));\n\t}\n\n\tasync selectDB(serverName: string, db: any) {\n\t\treturn await Axios.post(`/redis/db/select`, Qs.stringify({ name: serverName, db }));\n\t}\n\n\tasync scan(serverName: string) {\n\t\tlet response = await Axios.post(`/redis/db/scan`, Qs.stringify({ name: serverName }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync type(serverName: string, key: string) {\n\t\tlet response = await Axios.post(`/redis/key/type`, Qs.stringify({ name: serverName, key: key }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync do(serverName: string, key: string, ...args: any[]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\tname: serverName,\n\t\t\t\tkey: key,\n\t\t\t\targs: args.join(\" \")\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n\n\tasync doPipe(serverName: string, key: string, ...args: any[]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\tname: serverName,\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n}\n\nexport default new Command();\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addServer.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\n\nexport default class AddServer extends Component {\n\tstate = { visible: false, type: \"normal\", clusterHostInput: null };\n\tevent!: string;\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.event = Event.add(\"openAddServer\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(this.event);\n\t}\n\n\tname = \"\";\n\thost = \"\";\n\tport = \"\";\n\tpassword = \"\";\n\tmaster = \"\";\n\tcluster = new Array();\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"添加服务器\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tdestroyOnClose\n\t\t\t\tclassName=\"add-server\"\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tonChange={value => (this.name = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tonChange={value => (this.host = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tonChange={value => (this.port = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tonChange={value => (this.master = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tonChange={value => (this.password = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t创建\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tonChange={value => {\n\t\t\t\t\tthis.cluster[i] = value.target.value;\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tlet data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tconsole.log(data);\n\n\t\tlet response = await Command.register(this.state.type, data);\n\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tasync submit() {\n\t\tvar data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tif (this.name === \"\") return notification.error({ message: `服务器名不能为空!` });\n\n\t\tlet cfg = Config.get(this.name);\n\t\tif (cfg) return notification.error({ message: \"ERROR\", description: `${this.name} 已经存在!` });\n\n\t\tConfig.set(this.name, data);\n\n\t\tthis.onClose();\n\n\t\tEvent.emit(\"addServer\", this.name);\n\n\t\treturn notification.success({ message: \"SUCCESS\", description: \"创建成功\" });\n\t}\n}\n","import Socket from \"lows\";\n\nclass WebSocket {\n\tws: Socket;\n\tisStart = false;\n\n\tconstructor() {\n\t\tthis.ws = new Socket();\n\n\t\tthis.ws.config = {\n\t\t\thost: \"http://127.0.0.1\",\n\t\t\tport: \"12389\"\n\t\t};\n\n\t\tthis.ws.onOpen = () => {\n\t\t\tconsole.log(\"on open\");\n\t\t};\n\n\t\tthis.ws.onError = (err: any) => {\n\t\t\tconsole.log(\"on error\", err);\n\t\t};\n\n\t\tthis.ws.onClose = () => {\n\t\t\tconsole.log(\"on close\");\n\t\t};\n\t}\n\n\tstart() {\n\t\t!this.isStart && this.ws.start();\n\t\tthis.isStart = true;\n\t}\n\n\tclose() {\n\t\tthis.isStart && this.ws.close();\n\t\tthis.isStart = false;\n\t}\n\n\tlisten(...args: any[]) {\n\t\tthis.ws.addListener(...args);\n\t}\n}\n\nexport default new WebSocket();\n","import React, { Component } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport \"./keyTree.scss\";\nimport { Select, Button, message, notification } from \"antd\";\nimport Tools from \"../../tools/Tools\";\nimport Event from \"../../event/Event\";\nimport Config from \"../config/Config\";\nimport WebSocket from \"../../ws/WebSocket\";\nimport { Treebeard } from \"react-treebeard\";\nimport Command from \"../../services/Command\";\nimport Layer from \"../layer/Layer\";\n\nconst Option = Select.Option;\n\nexport default class KeyTree extends Component {\n\tstate = {\n\t\tselect: null,\n\t\ttitle: null,\n\t\tdataTree: []\n\t};\n\n\tdataTree: any = [];\n\tserverName = \"\";\n\tdatabases = \"\";\n\tdb = \"请选择DB\";\n\ttype = \"\";\n\n\tbaseKeys: string[] = [];\n\n\tasync componentDidMount() {\n\t\tEvent.add(\"connect\", (type, serverName) => this.connect(type, serverName));\n\t\tEvent.add(\"disconnect\", serverName => this.disconnect(serverName));\n\t\tEvent.add(\"update\", serverName => this.update(serverName));\n\t\tEvent.add(\"delete\", serverName => this.delete(serverName));\n\t\tEvent.add(\"deleteKey\", key => this.deleteKey(key));\n\t\tEvent.add(\"insertKey\", key => this.insertKey(key));\n\n\t\tWebSocket.listen(\"scan\", (e: any, v: any) => {\n\t\t\tlet keys = v.keys;\n\t\t\tfor (let index = 0; index < keys.length; index++) {\n\t\t\t\tthis.baseKeys.push(keys[index]);\n\t\t\t\tthis.addDataTree(keys[index]);\n\t\t\t}\n\n\t\t\tEvent.emit(\"progress\", v.current / v.dbSize);\n\n\t\t\tthis.setState({ dataTree: this.createDataTree() });\n\n\t\t\t// read done\n\t\t\tif (v.dbSize === v.current) {\n\t\t\t\tEvent.emit(\"progress\", 0);\n\t\t\t\tthis.readDone();\n\t\t\t}\n\t\t});\n\n\t\tawait this.connect(\"normal\", \"127.0.0.1\");\n\t\tthis.selectDB(0);\n\t}\n\n\tinsertKey(key: any): void {\n\t\tthis.addDataTree(key);\n\t\tthis.setState({ dataTree: this.createDataTree() });\n\t}\n\n\treadDone() {\n\t\tmessage.success(\"数据加载成功\");\n\t\tif (this.shouldRefresh) {\n\t\t\tthis.checkRead(this.dataTree);\n\t\t}\n\t\tthis.shouldRefresh = false;\n\t}\n\n\tcheckRead(data: any[]) {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i].children) {\n\t\t\t\tthis.checkRead(data[i].children);\n\t\t\t} else {\n\t\t\t\tif (!data[i].read) {\n\t\t\t\t\tthis.deleteKey(data[i].name);\n\t\t\t\t} else {\n\t\t\t\t\tdata[i].read = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteKey(key: any) {\n\t\tlet params = key.split(\":\");\n\t\tlet temp = this.dataTree;\n\t\tlet k = -1;\n\t\tvar link = [];\n\t\tfor (let index = 0; index < params.length; index++) {\n\t\t\tfor (let i = 0; i < temp.length; i++) {\n\t\t\t\tif (temp[i][\"i\"] === params[index] && temp[i].children) {\n\t\t\t\t\tif (index !== params.length - 1) {\n\t\t\t\t\t\tlink.unshift(temp);\n\t\t\t\t\t\ttemp = temp[i].children;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < temp.length; i++) {\n\t\t\tif (temp[i].name === key) {\n\t\t\t\tk = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttemp.splice(k, 1);\n\n\t\tif (temp.length === 0) {\n\t\t\tfor (let i = 0; i < link.length; i++) {\n\t\t\t\tvar p = link[i];\n\t\t\t\tfor (let j = 0; j < p.length; j++) {\n\t\t\t\t\tconst t = p[j];\n\t\t\t\t\tif (t.children && t.children.length === 0) {\n\t\t\t\t\t\tlink[i].splice(j, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ dataTree: this.createDataTree() });\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"connect\");\n\t\tEvent.remove(\"disconnect\");\n\t\tEvent.remove(\"update\");\n\t\tEvent.remove(\"delete\");\n\t}\n\n\tasync connect(type: string, serverName: any) {\n\t\tthis.setState({ select: null, dataTree: [], title: null });\n\t\tthis.serverName = serverName;\n\t\tthis.dataTree = [];\n\t\tthis.db = \"请选择DB\";\n\t\tthis.type = type;\n\t\tlet res = await this.login();\n\t\tif (!res) return;\n\t\tthis.databases = res;\n\t\tnotification.success({ message: \"连接成功\" });\n\t\tConfig.setCurrent(Config.get(serverName));\n\t\tthis.setState({ select: this.createSelect(serverName), title: this.createTitle(serverName, type) });\n\t}\n\n\tdisconnect(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.setState({ select: null, dataTree: [], title: null });\n\t\t}\n\t}\n\n\tupdate(serverName: any) {\n\t\tEvent.emit(\"openUpdateServer\", serverName);\n\t}\n\n\tdelete(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.setState({ select: null, dataTree: [], title: null });\n\t\t}\n\t}\n\n\tinArr(arr: any, i: any) {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index][\"i\"] === i && arr[index].children) return arr[index];\n\t\t}\n\t\treturn false;\n\t}\n\n\tinArr1(arr: any, i: any): any {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index].i === i && !arr[index].children) return { parent: arr, current: arr[index] };\n\t\t}\n\t\treturn false;\n\t}\n\n\taddDataTree(key: string) {\n\t\tlet params = key.split(\":\");\n\t\tlet temp = this.dataTree;\n\t\tfor (let index = 0; index < params.length; index++) {\n\t\t\tif (params.length === 1) {\n\t\t\t\tvar arr = this.inArr1(temp, params[index]);\n\t\t\t\tif (arr.parent) {\n\t\t\t\t\tarr.current.read = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.length !== 1) {\n\t\t\t\tvar arr = this.inArr(temp, params[index]);\n\t\t\t\tif (arr) {\n\t\t\t\t\tif (index !== params.length - 1) {\n\t\t\t\t\t\ttemp = arr.children;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (index === params.length - 1) {\n\t\t\t\t\tfor (let i = 0; i < temp.length; i++) {\n\t\t\t\t\t\tif (temp[i].name === key) {\n\t\t\t\t\t\t\ttemp[i].read = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet item = {\n\t\t\t\tid: Math.random().toString(16),\n\t\t\t\tname: index === params.length - 1 ? key : params[index],\n\t\t\t\ti: params[index],\n\t\t\t\tchildren: index === params.length - 1 ? null : [],\n\t\t\t\tread: this.shouldRefresh\n\t\t\t};\n\n\t\t\ttemp.push(item);\n\t\t\ttemp = item.children;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Rnd\n\t\t\t\tdefault={{ height: \"100%\", width: \"20%\", x: 0, y: 0 }}\n\t\t\t\tminWidth={\"20%\"}\n\t\t\t\tmaxWidth={\"40%\"}\n\t\t\t\tbounds=\".content\"\n\t\t\t\tenableResizing={{ right: true }}\n\t\t\t\tdisableDragging={true}\n\t\t\t\tclassName=\"key-tree\"\n\t\t\t>\n\t\t\t\t<div className=\"select-panel\">{this.state.select}</div>\n\t\t\t\t<div className=\"data-tree\">{this.state.dataTree}</div>\n\t\t\t\t<div className=\"title\">{this.state.title}</div>\n\t\t\t</Rnd>\n\t\t);\n\t}\n\n\tcreateTitle(serverName: string, type: string) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t{serverName}({this.type})\n\t\t\t\t</div>\n\t\t\t\t<Button type=\"link\" danger onClick={() => this.refresh()}>\n\t\t\t\t\t刷新\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tshouldRefresh = false;\n\trefresh(): void {\n\t\tthis.shouldRefresh = true;\n\t\tthis.selectDB(this.db);\n\t}\n\n\tcreateSelect(key: any) {\n\t\treturn (\n\t\t\t<Select value={this.db} style={{ width: \"100%\" }} listHeight={600} onSelect={value => this.selectDB(value)}>\n\t\t\t\t{Tools.Range(0, parseInt(this.databases)).map(v => (\n\t\t\t\t\t<Option key={v} value={v}>\n\t\t\t\t\t\tdb({v})\n\t\t\t\t\t</Option>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t);\n\t}\n\n\tstyle: any = {\n\t\ttree: {\n\t\t\tbase: {\n\t\t\t\tfontSize: \"12px\",\n\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\tbackgroundColor: \"#ffffff\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tpadding: \"5px\"\n\t\t\t},\n\t\t\tnode: { base: { color: \"red\" }, activeLink: { backgroundColor: \"#bae7ff\" } }\n\t\t}\n\t};\n\n\tcreateDataTree() {\n\t\treturn (\n\t\t\t<Treebeard\n\t\t\t\tdata={this.dataTree}\n\t\t\t\tonToggle={(node, toggled) => this.onToggle(node, toggled)}\n\t\t\t\tstyle={this.style}\n\t\t\t\tanimations={false}\n\t\t\t/>\n\t\t);\n\t}\n\n\tprev: any;\n\n\tonToggle(node: import(\"react-treebeard\").TreeNode, toggled: boolean): void {\n\t\tif (this.prev) {\n\t\t\tthis.prev.active = false;\n\t\t}\n\n\t\tthis.prev = node;\n\n\t\tnode.active = true;\n\n\t\tif (node.children) {\n\t\t\tnode.toggled = toggled;\n\t\t} else {\n\t\t\tthis.onSelect(node.name);\n\t\t}\n\n\t\tthis.setState(() => ({ dataTree: this.createDataTree() }));\n\t}\n\n\tasync onSelect(key: string) {\n\t\tlet type = await Command.type(this.serverName, key);\n\t\tEvent.emit(\"selectKey\", this.serverName, type, key);\n\t}\n\n\tasync login() {\n\t\tLayer.load();\n\t\tlet cfg = Config.get(this.serverName);\n\t\tlet response = await Command.register(this.type, cfg);\n\t\tLayer.close();\n\t\tif (response.data.code !== 200) {\n\t\t\tTools.Notification(response);\n\t\t\treturn false;\n\t\t}\n\t\treturn response.data.msg[1];\n\t}\n\n\tasync selectDB(db: any) {\n\t\tthis.db = db;\n\t\tlet response = await Command.selectDB(this.serverName, db);\n\t\tif (response.data.code !== 200) return Tools.Notification(response);\n\t\tthis.setState({ select: this.createSelect(this.serverName) });\n\t\tawait Command.scan(this.serverName);\n\t}\n}\n","import { notification } from \"antd\";\nimport Tools from \"../tools/Tools\";\nimport Command from \"../services/Command\";\n\nclass Cmd {\n\tCmd(...args: any[]) {}\n}\n\nclass Transform {\n\tcheck(type: string): any {\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\treturn new String();\n\t\t\tcase \"list\":\n\t\t\t\treturn new List();\n\t\t\tcase \"hash\":\n\t\t\t\treturn new Hash();\n\t\t\tcase \"set\":\n\t\t\t\treturn new Set();\n\t\t\tcase \"zset\":\n\t\t\t\treturn new ZSet();\n\t\t\tdefault:\n\t\t\t\tnotification.error({ message: `Unsupported type ${type}` });\n\t\t\t\treturn new Empty();\n\t\t}\n\t}\n\n\tselect(serverName: string, type: string, key: string) {\n\t\treturn this.do(serverName, key, this.check(type).select(key));\n\t}\n\n\tupdate(serverName: string, type: string, key: string, value: string) {\n\t\treturn this.do(serverName, key, this.check(type).update(key, value));\n\t}\n\n\tinsert(serverName: string, type: string, key: string, value: string) {\n\t\treturn this.do(serverName, key, this.check(type).insert(key, value));\n\t}\n\n\tdelete(serverName: string, type: string, key: string) {\n\t\treturn this.do(serverName, key, this.check(type).delete(key));\n\t}\n\n\tttl(serverName: string, key: string) {\n\t\treturn this.do(serverName, key, `TTL ${key}`);\n\t}\n\n\trename(serverName: string, key: string, newKey: string) {\n\t\treturn this.do(serverName, key, `RENAME ${key} ${newKey}`);\n\t}\n\n\texpire(serverName: string, key: string, seconds: number) {\n\t\treturn this.do(serverName, key, `EXPIRE ${key} ${seconds}`);\n\t}\n\n\tasync doPipe(serverName: string, key: string, ...cmd: string[]) {\n\t\treturn await Command.doPipe(serverName, key, ...cmd);\n\t}\n\n\tasync do(serverName: string, key: string, cmd: string) {\n\t\treturn await Command.do(serverName, key, cmd);\n\t}\n}\n\nclass String {\n\tselect(key: string) {\n\t\treturn `GET ${key}`;\n\t}\n\tupdate(key: string, value: string) {\n\t\treturn `SET ${key} ${value}`;\n\t}\n\tinsert(key: string, value: string) {\n\t\treturn `SET ${key} ${value}`;\n\t}\n\tdelete(key: string) {\n\t\treturn `DEL ${key}`;\n\t}\n}\nclass List {\n\tselect() {}\n}\nclass Hash {\n\tselect() {}\n}\nclass Set {\n\tselect() {}\n}\nclass ZSet {\n\tselect() {}\n}\nclass Empty {\n\tselect() {}\n}\n\nexport default new Transform();\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./string.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\tserverName: string;\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class String extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.serverName = this.props.serverName;\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.serverName, this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = { key: \"\", value: \"\", rename: false, view: \"显示格式\" };\n\n\tserverName = \"\";\n\ttype = \"\";\n\tvalue = \"\";\n\tkey = \"\";\n\tttl = -1;\n\n\tasync select(serverName: string, type: string, key: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet value = await Transform.select(serverName, type, key);\n\t\tthis.value = value;\n\t\tlet ttl = await Transform.ttl(serverName, key);\n\t\tthis.ttl = ttl;\n\t\tthis.setState({ key: key, value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"string\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.serverName, this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.save()}>\n\t\t\t\t\t\t\t保存\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\tasync save() {\n\t\tlet r = await Transform.update(this.serverName, this.type, this.key, this.state.value);\n\t\tif (!r) return;\n\t\tthis.value = this.state.value;\n\t\tmessage.success(\"保存成功\");\n\t}\n\tchangeView(view: string): void {\n\t\tif (view === \"json\") {\n\t\t\tthis.state.value = JSON.stringify(JSON.parse(this.state.value), null, 4);\n\t\t}\n\t\tthis.setState({ view: view, value: this.state.value });\n\t}\n\n\tasync insert(serverName: string, type: string, key: string, value: string) {\n\t\treturn await Transform.insert(serverName, type, key, value);\n\t}\n\n\tasync delete(serverName: string, type: string, key: string) {\n\t\treturn await Transform.delete(serverName, type, key);\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.delete(this.serverName, this.type, this.state.key);\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(this.serverName, oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.serverName, this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ value: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\n\nexport default class List extends Component {\n\trender() {\n\t\treturn <div>list</div>;\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./panel.scss\";\nimport Event from \"../../event/Event\";\nimport String from \"./data/String\";\nimport List from \"./data/List\";\nimport { Tabs } from \"antd\";\nconst { TabPane } = Tabs;\nexport default class Panel extends Component {\n\tstate = { activeKey: \"\", panes: [] as any[] };\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tEvent.add(\"selectKey\", (serverName: string, type: string, key: string) => {\n\t\t\tif (this.state.panes.find(v => v.key === key)) {\n\t\t\t\tthis.setState({ activeKey: key });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet component = null;\n\n\t\t\tswitch (type) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tcomponent = this.createString(serverName, type, key);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"list\":\n\t\t\t\t\tcomponent = <List></List>;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hash\":\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"zset\":\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"set\":\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst { panes } = this.state;\n\n\t\t\tpanes.push({ title: key, content: component, key: key });\n\n\t\t\tif (panes.length > 3) panes.shift();\n\n\t\t\tthis.setState({ panes: panes, activeKey: key });\n\t\t});\n\t}\n\n\tcreateString(serverName: string, type: string, key: string) {\n\t\treturn <String parent={this} serverName={serverName} type={type} keys={key}></String>;\n\t}\n\n\tcomponentDidMount() {}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"selectKey\");\n\t}\n\n\tonChange = (activeKey: any) => {\n\t\tconsole.log(activeKey);\n\t\tthis.setState({ activeKey });\n\t};\n\n\tonEdit = (targetKey: any, action: string | number) => {\n\t\tif (action === \"add\") {\n\t\t\tthis.add();\n\t\t} else {\n\t\t\tthis.remove(targetKey);\n\t\t}\n\t};\n\n\tupdate(serverName: string, type: string, oldKey: string, newKey: string) {\n\t\tfor (let i = 0; i < this.state.panes.length; i++) {\n\t\t\tconst element = this.state.panes[i];\n\t\t\tif (element.key === oldKey) {\n\t\t\t\telement.title = newKey;\n\t\t\t\telement.key = newKey;\n\t\t\t\telement.content = this.createString(serverName, type, newKey);\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes: this.state.panes, activeKey: newKey });\n\t}\n\n\tadd = () => {};\n\n\tremove = (targetKey: string) => {\n\t\tlet activeKey = this.state.activeKey;\n\t\tlet lastIndex: any;\n\t\tthis.state.panes.forEach((pane: { key: string }, i: number) => {\n\t\t\tif (pane.key === targetKey) {\n\t\t\t\tlastIndex = i - 1;\n\t\t\t}\n\t\t});\n\t\tconst panes = this.state.panes.filter((pane: { key: string }) => pane.key !== targetKey);\n\t\tif (panes.length && activeKey === targetKey) {\n\t\t\tif (lastIndex >= 0) {\n\t\t\t\tactiveKey = panes[lastIndex].key;\n\t\t\t} else {\n\t\t\t\tactiveKey = panes[0].key;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes, activeKey });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<Tabs\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tactiveKey={this.state.activeKey}\n\t\t\t\t\ttype=\"editable-card\"\n\t\t\t\t\tonEdit={this.onEdit}\n\t\t\t\t\thideAdd\n\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t\t\ttabBarStyle={{ margin: 0, minWidth: \"200px\" }}\n\t\t\t\t\tdestroyInactiveTabPane={true}\n\t\t\t\t\tanimated={false}\n\t\t\t\t\ttabBarGutter={0}\n\t\t\t\t>\n\t\t\t\t\t{this.state.panes.map(\n\t\t\t\t\t\t(pane: {\n\t\t\t\t\t\t\ttitle: React.ReactNode;\n\t\t\t\t\t\t\tkey: string | undefined;\n\t\t\t\t\t\t\tclosable: boolean | undefined;\n\t\t\t\t\t\t\tcontent: React.ReactNode;\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<TabPane\n\t\t\t\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n\t\t\t\t\t\t\t\ttab={pane.title}\n\t\t\t\t\t\t\t\tkey={pane.key}\n\t\t\t\t\t\t\t\tclosable={pane.closable}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{pane.content}\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Button, Modal } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./serverList.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\n\nexport default class ServerList extends Component {\n\tstate = { visible: false, modal: false, header: this.createHeader() };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openServerList\", () => this.onOpen());\n\t\tEvent.add(\"addServer\", () => this.setState({ header: this.createHeader() }));\n\t\tEvent.add(\"updateServer\", () => this.setState({ header: this.createHeader() }));\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openServerList\");\n\t}\n\n\tcreateHeader() {\n\t\tlet data = [];\n\t\tlet config = Config.all();\n\t\tfor (const serverName in config) {\n\t\t\tdata.push(\n\t\t\t\t<div className=\"db-header\" key={serverName}>\n\t\t\t\t\t<div>{serverName}</div>\n\t\t\t\t\t<div className=\"button\">\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.connect(serverName)}>\n\t\t\t\t\t\t\t连接\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.update(serverName)}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.disconnect(serverName)}>\n\t\t\t\t\t\t\t断开\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.delete(serverName)}>\n\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn data;\n\t}\n\n\tupdate(serverName: string) {\n\t\tEvent.emit(\"update\", serverName);\n\t}\n\n\tserverName = \"\";\n\tconnect(serverName: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.onChooseOpen();\n\t}\n\n\tdisconnect(serverName: string) {\n\t\tthis.onClose();\n\t\tEvent.emit(\"disconnect\", serverName);\n\t\tCommand.disconnect(serverName);\n\t}\n\n\tdelete(serverName: string) {\n\t\tModal.confirm({\n\t\t\ttitle: `确定要删除 ${serverName} 的配置吗`,\n\t\t\tokText: \"确认\",\n\t\t\tcancelText: \"取消\",\n\t\t\tonOk: () => {\n\t\t\t\tConfig.delete(serverName);\n\t\t\t\tthis.setState({ header: this.createHeader() });\n\t\t\t\tEvent.emit(\"delete\", serverName);\n\t\t\t}\n\t\t});\n\t}\n\n\tonChooseClose() {\n\t\tthis.setState({ modal: false });\n\t}\n\n\tonChooseOpen() {\n\t\tthis.setState({ modal: true });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"服务器列表\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tclassName=\"server-list\"\n\t\t\t\tdestroyOnClose\n\t\t\t>\n\t\t\t\t{this.state.header}\n\t\t\t\t<Modal\n\t\t\t\t\tdestroyOnClose\n\t\t\t\t\ttitle={`选择连接方式`}\n\t\t\t\t\tvisible={this.state.modal}\n\t\t\t\t\tclassName=\"choose-server\"\n\t\t\t\t\tonCancel={() => this.onChooseClose()}\n\t\t\t\t\tclosable={true}\n\t\t\t\t\tmaskClosable={true}\n\t\t\t\t\tfooter={null}\n\t\t\t\t>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"normal\")}>\n\t\t\t\t\t\tNormal\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"cluster\")}>\n\t\t\t\t\t\tCluster\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tchoose(type: string): void {\n\t\tEvent.emit(\"connect\", type, this.serverName);\n\t\tthis.onChooseClose();\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport Event from \"../../event/Event\";\nimport { Radio, Input, Button, notification, message } from \"antd\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\nimport \"./updateServer.scss\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\nimport Layer from \"../layer/Layer\";\n\nexport default class UpdateServer extends Component {\n\tstate = { visible: false, config: {} as config, type: \"normal\", clusterHostInput: null };\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tserverName = \"\";\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openUpdateServer\", serverName => {\n\t\t\tthis.serverName = serverName;\n\t\t\tlet config = Config.get(serverName);\n\t\t\tif (!config.cluster) config.cluster = [];\n\t\t\tthis.setState({ config: config }, () => this.setState({ clusterHostInput: this.createCluster() }));\n\t\t\tthis.onOpen();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openUpdateServer\");\n\t}\n\n\tonChange(type: string, value: string) {\n\t\t(this.state.config as any)[type] = value;\n\t\tthis.setState({ config: this.state.config, clusterHostInput: this.createCluster() });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`修改 ${this.state.config.name} 配置`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"update-server\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tvalue={this.state.config.name}\n\t\t\t\t\t\tonChange={value => this.onChange(\"name\", value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tvalue={this.state.config.host}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"host\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tvalue={this.state.config.port}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"port\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tvalue={this.state.config.master}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"master\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tvalue={this.state.config.password}\n\t\t\t\t\t\tonChange={value => this.onChange(\"password\", value.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.state.config.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tvalue={this.state.config.cluster[i]}\n\t\t\t\tonChange={value => {\n\t\t\t\t\tthis.state.config.cluster[i] = value.target.value;\n\t\t\t\t\tthis.setState({ config: this.state.config, clusterHostInput: this.createCluster() });\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.state.config.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.state.config.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tthis.state.config.cluster = this.state.config.cluster.filter(v => v !== \"\");\n\t\tLayer.load();\n\t\tlet response = await Command.register(this.state.type, this.state.config);\n\t\tLayer.close();\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tsubmit() {\n\t\tConfig.delete(this.serverName);\n\t\tthis.state.config.cluster = this.state.config.cluster.filter(v => v !== \"\");\n\t\tConfig.set(this.state.config.name, this.state.config);\n\t\tmessage.success(\"修改成功\");\n\t\tthis.onClose();\n\t\tEvent.emit(\"updateServer\");\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport \"./progress.scss\";\nimport Event from \"../../event/Event\";\n\nexport default class MProgress extends Component {\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"progress\");\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"progress\", v => this.progress(v));\n\t}\n\tprogress(v: number) {\n\t\tthis.setState({ progress: v });\n\t}\n\n\tstate = { progress: 0 };\n\n\trender() {\n\t\treturn (\n\t\t\t<Progress\n\t\t\t\tstrokeColor={{\n\t\t\t\t\t\"0%\": \"#108ee9\",\n\t\t\t\t\t\"100%\": \"#87d068\"\n\t\t\t\t}}\n\t\t\t\tstyle={{ width: \"100%\", height: \"1px\" }}\n\t\t\t\tshowInfo={false}\n\t\t\t\tstrokeWidth={3}\n\t\t\t\tpercent={this.state.progress}\n\t\t\t\tclassName=\"progress\"\n\t\t\t/>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification, Modal, message } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addKey.scss\";\nimport Command from \"../../services/Command\";\nimport Transform from \"../../transform/Transform\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\n\nexport default class AddKey extends Component {\n\tstate = { visible: false, keyType: \"string\", key: \"\", value: \"\" };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.config = Config.getCurrent();\n\t\tif (this.config.name === \"\") {\n\t\t\tmessage.error(\"请连接服务器!\");\n\t\t\treturn this.onClose();\n\t\t}\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"addKey\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"addKey\");\n\t}\n\n\tconfig: config = {} as config;\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`添加KEY`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"add-key\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div className=\"select-box\">\n\t\t\t\t\t<Radio.Group\n\t\t\t\t\t\tvalue={this.state.keyType}\n\t\t\t\t\t\tonChange={value => this.setState({ keyType: value.target.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Radio.Button value=\"string\">string</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"list\">list</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"hash\">hash</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"set\">set</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"zset\">zset</Radio.Button>\n\t\t\t\t\t</Radio.Group>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"input-box\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"KEY\"\n\t\t\t\t\t\tplaceholder=\"key\"\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Value\"\n\t\t\t\t\t\tplaceholder=\"value\"\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={value => this.setState({ value: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => this.add()}>\n\t\t\t\t\t\t确定\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t取消\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\tasync add() {\n\t\tif (this.state.key === \"\") {\n\t\t\tmessage.error(\"KEY不能为空!\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.state.value === \"\") {\n\t\t\tmessage.error(\"VALUE不能为空!\");\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (this.state.keyType) {\n\t\t\tcase \"string\":\n\t\t\t\tlet r = await Transform.insert(this.config.name, this.state.keyType, this.state.key, this.state.value);\n\t\t\t\tif (!r) return;\n\t\t\t\tmessage.success(\"添加成功!\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage.error(\"不支持的类型!\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tEvent.emit(\"insertKey\", this.state.key);\n\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport Header from \"../../components/header/Header\";\nimport AddServer from \"../../components/addServer/AddServer\";\nimport KeyTree from \"../../components/keyTree/KeyTree\";\nimport Panel from \"../../components/panel/Panel\";\nimport ServerList from \"../../components/serverList/ServerList\";\nimport UpdateServer from \"../../components/updateServer/UpdateServer\";\nimport MProgress from \"../../components/progress/Progress\";\nimport AddKey from \"../../components/addKey/AddKey\";\n\nclass Index extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"index\">\n\t\t\t\t<AddKey></AddKey>\n\t\t\t\t<AddServer></AddServer>\n\t\t\t\t<ServerList></ServerList>\n\t\t\t\t<UpdateServer></UpdateServer>\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<Header></Header>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<KeyTree></KeyTree>\n\t\t\t\t\t<Panel></Panel>\n\t\t\t\t</div>\n\t\t\t\t<MProgress></MProgress>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Index;\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport \"./login.scss\";\n\nfunction Login() {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<Button type=\"default\">Button</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory, History, UnregisterCallback, Location } from \"history\";\nimport \"./App.scss\";\nimport Index from \"./pages/index/Index\";\nimport Login from \"./pages/login/Login\";\nimport WebSocket from \"./ws/WebSocket\";\n\nexport default class App extends Component {\n\tunlisten!: UnregisterCallback;\n\n\tchange(location: Location<History.PoorMansUnknown>) {\n\t\tif (false) return (window.location.hash = \"/login\");\n\t\tif (location.hash === \"#/login\") return (window.location.hash = \"/index\");\n\t}\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tWebSocket.start();\n\t}\n\n\tcomponentDidMount() {\n\t\tconst history = createBrowserHistory();\n\t\t// Get the current location.\n\t\tconst location = history.location;\n\n\t\tthis.change(location);\n\n\t\t// Listen for changes to the current location.\n\t\tthis.unlisten = history.listen((location, action) => {\n\t\t\t// location is an object like window.location\n\t\t\tthis.change(location);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tWebSocket.close();\n\t\tthis.unlisten();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<HashRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/index\" component={Index} />\n\t\t\t\t\t<Route path=\"/login\" component={Login} exact />\n\t\t\t\t\t<Redirect from=\"**\" to=\"/index\" />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { message, notification } from \"antd\";\n\nAxios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\nAxios.defaults.baseURL = \"http://127.0.0.1:12388\";\n\nAxios.defaults.timeout = 5000;\n\nAxios.interceptors.response.use(\n\tresponse => {\n\t\treturn response;\n\t},\n\terror => {\n\t\treturn error;\n\t}\n);\n\nmessage.config({ maxCount: 3 });\n\nnotification.config({ duration: 2, placement: \"bottomRight\" });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}