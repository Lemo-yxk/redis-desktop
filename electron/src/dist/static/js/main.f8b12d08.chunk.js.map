{"version":3,"sources":["app/event/Event.ts","app/components/header/Header.tsx","app/components/config/Config.ts","app/components/layer/Layer.ts","app/tools/Tools.ts","app/services/Command.ts","app/components/addServer/AddServer.tsx","app/ws/WebSocket.ts","app/components/keyTree/Tree.ts","app/components/keyTree/KeyTree.tsx","app/transform/Transform.ts","app/components/panel/data/String.tsx","app/components/panel/data/List.tsx","app/components/panel/Panel.tsx","app/components/serverList/ServerList.tsx","app/components/updateServer/UpdateServer.tsx","app/components/progress/Progress.tsx","app/components/addKey/AddKey.tsx","app/pages/index/Index.tsx","app/pages/login/Login.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["events","name","e","this","args","Header","state","date","addKey","Event","emit","className","type","ghost","onClick","PlusOutlined","danger","AlignLeftOutlined","Component","JSON","parse","localStorage","getItem","cfg","setItem","stringify","config","removeItem","mask","div","document","createElement","style","display","justifyContent","alignItems","width","height","position","top","left","child","appendChild","body","data","s","key","slice","begin","end","res","index","push","response","success","error","isAxiosError","toJSON","notification","message","destroy","Layer","close","msg","code","Axios","post","Qs","serverName","db","Tools","Notification","AddServer","visible","clusterHostInput","event","host","port","password","master","cluster","setState","add","onOpen","remove","title","placement","closable","onClose","getContainer","destroyOnClose","Group","value","onChange","target","Button","spellCheck","addonBefore","placeholder","addHost","submit","test","map","v","i","addonAfter","MinusCircleOutlined","removeHost","splice","createCluster","filter","Command","register","Config","get","description","set","ws","isStart","Socket","console","log","window","location","hash","onError","err","start","addListener","removeListener","dataTree","read","length","children","search","prefix","parent","findIndex","id","deleteNode","node","countSub","arr","current","isRead","params","split","temp","arr1","inArr1","inArr","item","Math","random","toString","isKey","join","count","countAdd","Option","KeyTree","databases","dbSize","shouldRefresh","tree","base","fontSize","whiteSpace","backgroundColor","padding","color","activeLink","prev","DataTree","size","connect","disconnect","update","delete","fn","deleteKey","insertKey","WebSocket","listen","keys","readDone","updateTree","updateDatabases","selectDB","info","notRead","checkRead","select","login","parseInt","setCurrent","default","x","y","minWidth","maxWidth","bounds","enableResizing","right","disableDragging","listHeight","onSelect","onToggle","toggled","animations","refresh","active","load","scan","Transform","RString","List","Hash","Set","ZSet","Empty","do","check","insert","len","newKey","seconds","cmd","doPipe","page","TextArea","String","props","rename","view","ttl","maskClosable","onOk","renameKey","onCancel","closeRename","okText","cancelText","toUpperCase","openRename","onConfirm","icon","QuestionCircleOutlined","changeView","save","oldKey","list","vlist","React","createRef","renderItem","Object","assign","background","el","selectItem","selectIndex","prevPage","nextPage","go","listArray","forceUpdateGrid","ref","overscanRowCount","rowCount","rowHeight","rowRenderer","scrollToIndex","LeftOutlined","RightOutlined","defaultValue","TabPane","Panel","activeKey","panes","onEdit","targetKey","action","lastIndex","forEach","pane","find","component","createComponent","content","shift","createString","createList","element","hideAdd","tabBarStyle","margin","destroyInactiveTabPane","animated","tabBarGutter","tab","ServerList","modal","header","createHeader","all","onChooseOpen","confirm","onChooseClose","footer","choose","UpdateServer","MProgress","progress","setTimeout","strokeColor","showInfo","strokeWidth","percent","AddKey","keyType","getCurrent","Index","Login","LoadingOutlined","App","unlisten","history","createBrowserHistory","change","path","exact","from","to","Boolean","hostname","match","defaults","headers","baseURL","timeout","interceptors","use","maxCount","duration","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f8b12d08.chunk.js","sourcesContent":["class Event {\n\tevents: { [key: string]: (...args: any[]) => void } = {};\n\n\tadd(name: string, e: (...args: any[]) => void): string {\n\t\tthis.events[name] = e;\n\t\treturn name;\n\t}\n\n\tremove(name: string) {\n\t\tdelete this.events[name];\n\t}\n\n\temit(name: string, ...args: any[]) {\n\t\tthis.events[name] && this.events[name](...args);\n\t}\n}\n\nexport default new Event();\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./header.scss\";\nimport Event from \"../../event/Event\";\nimport { AlignLeftOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nexport default class Header extends Component {\n\tstate = { date: \"\" };\n\n\taddKey = () => {\n\t\tEvent.emit(\"addKey\");\n\t};\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<Button type=\"link\" ghost onClick={this.addKey}>\n\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => Event.emit(\"openAddServer\")}>\n\t\t\t\t\t\t添加服务器\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" danger ghost onClick={() => Event.emit(\"openServerList\")}>\n\t\t\t\t\t\t<AlignLeftOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { config } from \"../../interface/config\";\n\nclass Config {\n\tgetCurrent() {\n\t\treturn JSON.parse(localStorage.getItem(\"current\") || \"{}\");\n\t}\n\n\tsetCurrent(cfg: config) {\n\t\tlocalStorage.setItem(\"current\", JSON.stringify(cfg));\n\t}\n\n\tall() {\n\t\treturn JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t}\n\n\tget(name: string): config {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\treturn cfg[name];\n\t}\n\n\tset(name: string, config: config) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tcfg[name] = config;\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tdelete(name: string) {\n\t\tlet cfg = JSON.parse(localStorage.getItem(\"config\") || \"{}\");\n\t\tdelete cfg[name];\n\t\tlocalStorage.setItem(\"config\", JSON.stringify(cfg));\n\t}\n\n\tclear() {\n\t\tlocalStorage.removeItem(\"config\");\n\t}\n}\n\nexport default new Config();\n","class Layer {\n\tmask: any;\n\n\tconstructor() {\n\t\tlet div = document.createElement(\"div\");\n\t\tdiv.style.display = \"flex\";\n\t\tdiv.style.justifyContent = \"center\";\n\t\tdiv.style.alignItems = \"center\";\n\t\tdiv.style.width = \"100vw\";\n\t\tdiv.style.height = \"100vh\";\n\t\tdiv.style.position = \"absolute\";\n\t\tdiv.style.top = \"0\";\n\t\tdiv.style.left = \"0\";\n\t\tdiv.style.display = \"none\";\n\t\tthis.mask = div;\n\n\t\tlet child = document.createElement(\"div\");\n\t\tchild.className = \"load-mask-child\";\n\n\t\tdiv.appendChild(child);\n\t\tdocument.body.appendChild(div);\n\t}\n\n\tload() {\n\t\tthis.mask.style.display = \"flex\";\n\t}\n\n\tclose() {\n\t\tthis.mask.style.display = \"none\";\n\t}\n}\n\nexport default new Layer();\n","import { notification, message } from \"antd\";\nimport Layer from \"../components/layer/Layer\";\nclass Tools {\n\tQueryString(data: { [key: string]: string }) {\n\t\tlet s = \"\";\n\t\tfor (const key in data) {\n\t\t\ts += `${key}=${data[key]}&`;\n\t\t}\n\t\treturn s.slice(0, -1);\n\t}\n\n\tRange(begin: number, end: number): number[] {\n\t\tlet res = [];\n\t\tfor (let index = begin; index < end; index++) {\n\t\t\tres.push(index);\n\t\t}\n\t\treturn res;\n\t}\n\n\tNotification(response: any, success?: any, error?: any) {\n\t\tif (response.isAxiosError) {\n\t\t\tlet error = response.toJSON();\n\t\t\tnotification.error({ message: error.message });\n\t\t\tmessage.destroy();\n\t\t\tLayer.close();\n\t\t\tthrow error;\n\t\t}\n\t\tsuccess = success || response.data.msg;\n\t\terror = error || response.data.msg;\n\t\tif (response.data.code === 200) {\n\t\t\tnotification.success({ message: success });\n\t\t\treturn true;\n\t\t} else {\n\t\t\tnotification.error({ message: error });\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport default new Tools();\n","import { config } from \"../interface/config\";\nimport Axios from \"axios\";\nimport Qs from \"querystring\";\nimport Tools from \"../tools/Tools\";\n\nclass Command {\n\tasync register(type: string, cfg: config) {\n\t\treturn await Axios.post(`/redis/register/${type}`, Qs.stringify(cfg as {}));\n\t}\n\n\tasync disconnect(serverName: string) {\n\t\treturn await Axios.post(`/redis/db/disconnect`, Qs.stringify({ name: serverName }));\n\t}\n\n\tasync selectDB(serverName: string, db: any) {\n\t\treturn await Axios.post(`/redis/db/select`, Qs.stringify({ name: serverName, db }));\n\t}\n\n\tasync scan(serverName: string) {\n\t\tlet response = await Axios.post(`/redis/db/scan`, Qs.stringify({ name: serverName }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync type(serverName: string, key: string) {\n\t\tlet response = await Axios.post(`/redis/key/type`, Qs.stringify({ name: serverName, key: key }));\n\t\treturn response.data.msg;\n\t}\n\n\tasync do(serverName: string, key: string, args: any[]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\tname: serverName,\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n\n\tasync doPipe(serverName: string, key: string, args: any[][]) {\n\t\tlet response = await Axios.post(\n\t\t\t`/redis/key/do`,\n\t\t\tQs.stringify({\n\t\t\t\tname: serverName,\n\t\t\t\tkey: key,\n\t\t\t\targs: JSON.stringify(args)\n\t\t\t})\n\t\t);\n\n\t\tif (response.data.code !== 200) {\n\t\t\treturn Tools.Notification(response);\n\t\t}\n\n\t\treturn response.data.msg;\n\t}\n}\n\nexport default new Command();\n","import React, { Component } from \"react\";\nimport { Drawer, Radio, Input, Button, notification } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addServer.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\n\nexport default class AddServer extends Component {\n\tstate = { visible: false, type: \"normal\", clusterHostInput: null };\n\tevent!: string;\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.event = Event.add(\"openAddServer\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(this.event);\n\t}\n\n\tname = \"\";\n\thost = \"\";\n\tport = \"\";\n\tpassword = \"\";\n\tmaster = \"\";\n\tcluster: any[] = [];\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"添加服务器\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tdestroyOnClose\n\t\t\t\tclassName=\"add-server\"\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tonChange={value => (this.name = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tonChange={value => (this.host = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tonChange={value => (this.port = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tonChange={value => (this.master = value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tonChange={value => (this.password = value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t创建\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tonChange={value => {\n\t\t\t\t\tthis.cluster[i] = value.target.value;\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tlet data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tlet response = await Command.register(this.state.type, data);\n\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tasync submit() {\n\t\tvar data = {\n\t\t\tname: this.name,\n\t\t\thost: this.host,\n\t\t\tport: this.port,\n\t\t\tpassword: this.password,\n\t\t\tmaster: this.master,\n\t\t\tcluster: this.cluster.filter(v => v !== \"\")\n\t\t};\n\n\t\tif (this.name === \"\") return notification.error({ message: `服务器名不能为空!` });\n\n\t\tlet cfg = Config.get(this.name);\n\t\tif (cfg) return notification.error({ message: \"ERROR\", description: `${this.name} 已经存在!` });\n\n\t\tConfig.set(this.name, data);\n\n\t\tthis.onClose();\n\n\t\tEvent.emit(\"addServer\", this.name);\n\n\t\treturn notification.success({ message: \"SUCCESS\", description: \"创建成功\" });\n\t}\n}\n","import Socket from \"lows\";\n\nclass WebSocket {\n\tws: Socket;\n\tisStart = false;\n\n\tconstructor() {\n\t\tthis.ws = new Socket();\n\n\t\tthis.ws.config = {\n\t\t\thost: \"http://127.0.0.1\",\n\t\t\tport: \"12389\"\n\t\t};\n\n\t\tthis.ws.onOpen = () => {\n\t\t\tconsole.log(\"on open\");\n\t\t\tlocalStorage.setItem(\"status\", \"ready\");\n\t\t\twindow.location.hash = \"#/index\";\n\t\t};\n\n\t\tthis.ws.onError = (err: any) => {\n\t\t\tconsole.log(\"on error\", err);\n\t\t};\n\n\t\tthis.ws.onClose = () => {\n\t\t\tlocalStorage.removeItem(\"status\");\n\t\t\twindow.location.hash = \"#/login\";\n\t\t\tconsole.log(\"on close\");\n\t\t};\n\t}\n\n\tstart() {\n\t\t!this.isStart && this.ws.start();\n\t\tthis.isStart = true;\n\t}\n\n\tclose() {\n\t\tthis.isStart && this.ws.close();\n\t\tthis.isStart = false;\n\t}\n\n\tlisten(...args: any[]) {\n\t\tthis.ws.addListener(...args);\n\t}\n\n\tremove(...args: any[]) {\n\t\tthis.ws.removeListener(...args);\n\t}\n}\n\nexport default new WebSocket();\n","class Tree {\n\tdataTree: any[] = [];\n\n\tcheckRead(data: any[]) {\n\t\tlet res: any[] = [];\n\t\tlet read = (data: any[]) => {\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i].children) {\n\t\t\t\t\tread(data[i].children);\n\t\t\t\t} else {\n\t\t\t\t\tif (!data[i].read) {\n\t\t\t\t\t\tres.push(data[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[i].read = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tread(data);\n\t\treturn res;\n\t}\n\n\tsearch(data: any[], key: string): any {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i].children) {\n\t\t\t\tlet res = this.search(data[i].children, key);\n\t\t\t\tif (res) return res;\n\t\t\t} else {\n\t\t\t\tif (data[i].prefix === key) {\n\t\t\t\t\treturn data[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tdeleteNode(data: any) {\n\t\tif (!data.parent) {\n\t\t\tlet index = this.dataTree.findIndex((v: any) => v.id === data.id);\n\t\t\tthis.dataTree.splice(index, 1);\n\t\t\treturn;\n\t\t}\n\t\tlet index = data.parent.children.findIndex((v: any) => v.id === data.id);\n\t\tdata.parent.children.splice(index, 1);\n\t\tif (data.parent.children.length === 0) this.deleteNode(data.parent);\n\t}\n\n\tdeleteKey(key: any) {\n\t\tvar node = this.search(this.dataTree, key);\n\t\tif (node) {\n\t\t\tthis.countSub(node);\n\t\t\tthis.deleteNode(node);\n\t\t}\n\t}\n\n\tinArr(arr: any, i: any) {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index][\"i\"] === i && arr[index].children) return arr[index];\n\t\t}\n\t\treturn false;\n\t}\n\n\tinArr1(arr: any, i: any): any {\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tif (arr[index].i === i && !arr[index].children) return { parent: arr, current: arr[index] };\n\t\t}\n\t\treturn false;\n\t}\n\n\taddKey(key: string, isRead: boolean) {\n\t\tlet params = key.split(\":\");\n\t\tlet temp = this.dataTree;\n\t\tvar parent = null;\n\t\tfor (let index = 0; index < params.length; index++) {\n\t\t\tif (params.length === 1) {\n\t\t\t\tvar arr1 = this.inArr1(temp, params[index]);\n\t\t\t\tif (arr1) {\n\t\t\t\t\tarr1.current.read = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.length !== 1) {\n\t\t\t\tvar arr = this.inArr(temp, params[index]);\n\t\t\t\tif (arr) {\n\t\t\t\t\tif (index !== params.length - 1) {\n\t\t\t\t\t\tparent = arr;\n\t\t\t\t\t\ttemp = arr.children;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (index === params.length - 1) {\n\t\t\t\t\tfor (let i = 0; i < temp.length; i++) {\n\t\t\t\t\t\tif (temp[i].name === key) {\n\t\t\t\t\t\t\ttemp[i].read = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet item: any = {\n\t\t\t\tid: Math.random().toString(16),\n\t\t\t\tname: index === params.length - 1 ? key : params[index],\n\t\t\t\tisKey: index === params.length - 1,\n\t\t\t\ti: params[index],\n\t\t\t\tprefix: params.slice(0, index + 1).join(\":\"),\n\t\t\t\tchildren: index === params.length - 1 ? null : [],\n\t\t\t\tread: isRead,\n\t\t\t\tcount: 0,\n\t\t\t\tparent: parent\n\t\t\t};\n\n\t\t\tif (index === params.length - 1) this.countAdd(item);\n\n\t\t\tparent = item;\n\n\t\t\ttemp.push(item);\n\t\t\ttemp = item.children;\n\t\t}\n\t}\n\n\tcountAdd(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count++;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countAdd(data.parent);\n\t\t}\n\t}\n\n\tcountSub(data: any) {\n\t\tif (data.parent) {\n\t\t\tdata.parent.count--;\n\t\t\tdata.parent.name = `${data.parent[\"i\"]} (${data.parent.count})`;\n\t\t\tthis.countSub(data.parent);\n\t\t}\n\t}\n}\n\nexport default new Tree();\n","import React, { Component } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport \"./keyTree.scss\";\nimport { Select, Button, message } from \"antd\";\nimport Tools from \"../../tools/Tools\";\nimport Event from \"../../event/Event\";\nimport Config from \"../config/Config\";\nimport WebSocket from \"../../ws/WebSocket\";\nimport { Treebeard } from \"react-treebeard-ts\";\nimport Command from \"../../services/Command\";\nimport Layer from \"../layer/Layer\";\nimport DataTree from \"./Tree\";\n\nconst Option = Select.Option;\n\nexport default class KeyTree extends Component {\n\tstate = {\n\t\tdatabases: [] as any[],\n\t\tdataTree: [] as any[],\n\t\tdb: \"请选择DB\" as any\n\t};\n\n\tserverName = \"\";\n\ttype = \"\";\n\tdbSize = 0;\n\n\t// constructor(props: any) {\n\t// \tsuper(props);\n\t// }\n\n\tupdateTree() {\n\t\tthis.setState({ dataTree: DataTree.dataTree });\n\t}\n\n\tupdateDatabases() {\n\t\tlet { databases } = this.state;\n\t\tfor (let i = 0; i < databases.length; i++) {\n\t\t\tif (databases[i].key === this.state.db) {\n\t\t\t\tdatabases[i].size = this.dbSize;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ databases: databases });\n\t}\n\n\tasync componentDidMount() {\n\t\tEvent.add(\"connect\", (type, serverName) => this.connect(type, serverName));\n\t\tEvent.add(\"disconnect\", serverName => this.disconnect(serverName));\n\t\tEvent.add(\"update\", serverName => this.update(serverName));\n\t\tEvent.add(\"delete\", serverName => this.delete(serverName));\n\t\tEvent.add(\"deleteKey\", (key, fn) => this.deleteKey(key, fn));\n\t\tEvent.add(\"insertKey\", (key, fn) => this.insertKey(key, this.shouldRefresh, fn));\n\n\t\tWebSocket.listen(\"scan\", (e: any, v: any) => {\n\t\t\tlet keys = v.keys || [];\n\n\t\t\tEvent.emit(\"progress\", (v.current / v.dbSize) * 100);\n\n\t\t\tfor (let index = 0; index < keys.length; index++) {\n\t\t\t\tDataTree.addKey(keys[index], this.shouldRefresh);\n\t\t\t}\n\n\t\t\tthis.dbSize = v.dbSize;\n\n\t\t\t// read done\n\t\t\tif (v.dbSize === v.current) {\n\t\t\t\tEvent.emit(\"progress\", 0);\n\t\t\t\tthis.readDone();\n\t\t\t}\n\t\t\t// render tree\n\t\t\tthis.updateTree();\n\n\t\t\t// render databases\n\t\t\tthis.updateDatabases();\n\t\t});\n\n\t\tawait this.connect(\"normal\", \"127.0.0.1\");\n\t\tthis.selectDB(0);\n\t}\n\n\tdeleteKey(key: string, fn: any) {\n\t\tDataTree.deleteKey(key);\n\t\tthis.dbSize--;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\tinsertKey(key: string, isRead: boolean, fn: any) {\n\t\tDataTree.addKey(key, this.shouldRefresh);\n\t\tthis.dbSize++;\n\t\tfn && fn();\n\t\tthis.updateDatabases();\n\t\tthis.updateTree();\n\t}\n\n\treadDone() {\n\t\tmessage.info(\"数据加载成功\");\n\t\tif (this.shouldRefresh) {\n\t\t\tvar notRead = DataTree.checkRead(DataTree.dataTree);\n\t\t\tfor (let i = 0; i < notRead.length; i++) {\n\t\t\t\tDataTree.deleteKey(notRead[i].name);\n\t\t\t}\n\t\t}\n\t\tthis.shouldRefresh = false;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"connect\");\n\t\tEvent.remove(\"disconnect\");\n\t\tEvent.remove(\"update\");\n\t\tEvent.remove(\"delete\");\n\t\tEvent.remove(\"deleteKey\");\n\t\tEvent.remove(\"insertKey\");\n\t\tWebSocket.remove(\"scan\");\n\t\tDataTree.dataTree = [];\n\t}\n\n\tasync connect(type: string, serverName: any) {\n\t\tthis.setState({ select: null, dataTree: [], title: null });\n\t\tthis.state.dataTree = [];\n\t\tthis.state.databases = [];\n\t\tthis.state.db = \"请选择DB\";\n\t\tthis.serverName = serverName;\n\t\tthis.type = type;\n\t\tthis.dbSize = 0;\n\t\tDataTree.dataTree = [];\n\t\tlet res = await this.login();\n\t\tif (!res) return;\n\n\t\tfor (let i = 0; i < parseInt(res); i++) {\n\t\t\tthis.state.databases.push({ title: `db-${i}`, key: i, size: 0 });\n\t\t}\n\n\t\tmessage.success(\"连接成功\");\n\n\t\tConfig.setCurrent(Config.get(serverName));\n\n\t\tthis.updateDatabases();\n\t}\n\n\tdisconnect(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.setState({ select: [], dataTree: [], title: null });\n\t\t}\n\t}\n\n\tupdate(serverName: any) {\n\t\tEvent.emit(\"openUpdateServer\", serverName);\n\t}\n\n\tdelete(serverName: any) {\n\t\tif (this.serverName === serverName) {\n\t\t\tthis.setState({ select: [], dataTree: [], title: null });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Rnd\n\t\t\t\tdefault={{ height: \"100%\", width: \"250px\", x: 0, y: 0 }}\n\t\t\t\tminWidth={250}\n\t\t\t\tmaxWidth={500}\n\t\t\t\tbounds=\".content\"\n\t\t\t\tenableResizing={{ right: true }}\n\t\t\t\tdisableDragging={true}\n\t\t\t\tclassName=\"key-tree\"\n\t\t\t>\n\t\t\t\t<div className=\"select-panel\">\n\t\t\t\t\t{this.state.databases.length > 0 ? (\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.db}\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\tlistHeight={600}\n\t\t\t\t\t\t\tonSelect={value => this.selectDB(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.databases.map(v => (\n\t\t\t\t\t\t\t\t<Option key={v.key} value={v.key}>\n\t\t\t\t\t\t\t\t\t{v.title} {v.size ? `(${v.size})` : \"\"}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"data-tree\">\n\t\t\t\t\t{this.state.dataTree.length > 0 ? (\n\t\t\t\t\t\t<Treebeard\n\t\t\t\t\t\t\tdata={this.state.dataTree}\n\t\t\t\t\t\t\tonToggle={(node, toggled) => this.onToggle(node, toggled)}\n\t\t\t\t\t\t\tstyle={this.style}\n\t\t\t\t\t\t\tanimations={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.serverName} {this.type}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.refresh()}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Rnd>\n\t\t);\n\t}\n\n\tshouldRefresh = false;\n\trefresh(): void {\n\t\tthis.shouldRefresh = true;\n\t\tthis.selectDB(this.state.db);\n\t}\n\n\tstyle: any = {\n\t\ttree: {\n\t\t\tbase: {\n\t\t\t\tfontSize: \"12px\",\n\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\tbackgroundColor: \"#ffffff\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tpadding: \"5px\"\n\t\t\t},\n\t\t\tnode: { base: { color: \"red\" }, activeLink: { backgroundColor: \"#bae7ff\" } }\n\t\t}\n\t};\n\n\tprev: any;\n\n\tonToggle(node: import(\"react-treebeard-ts\").TreeNode, toggled: boolean): void {\n\t\tif (this.prev) {\n\t\t\tthis.prev.active = false;\n\t\t}\n\n\t\tthis.prev = node;\n\n\t\tnode.active = true;\n\n\t\tif (node.children) {\n\t\t\tnode.toggled = toggled;\n\t\t} else {\n\t\t\tthis.onSelect(node.name);\n\t\t}\n\n\t\tthis.updateTree();\n\t}\n\n\tasync onSelect(key: string) {\n\t\tlet type = await Command.type(this.serverName, key);\n\t\tEvent.emit(\"selectKey\", this.serverName, type, key);\n\t}\n\n\tasync login() {\n\t\tLayer.load();\n\t\tlet cfg = Config.get(this.serverName);\n\t\tlet response = await Command.register(this.type, cfg);\n\t\tLayer.close();\n\t\tif (response.data.code !== 200) {\n\t\t\tTools.Notification(response);\n\t\t\treturn false;\n\t\t}\n\t\treturn response.data.msg[1];\n\t}\n\n\tasync selectDB(db: any) {\n\t\tif (this.state.db !== db) DataTree.dataTree = [];\n\t\tthis.state.db = db;\n\t\tlet response = await Command.selectDB(this.serverName, db);\n\t\tif (response.data.code !== 200) return Tools.Notification(response);\n\t\tawait Command.scan(this.serverName);\n\t}\n}\n","import { notification } from \"antd\";\nimport Command from \"../services/Command\";\n\nclass Transform {\n\tcheck(type: string): any {\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\treturn new RString();\n\t\t\tcase \"list\":\n\t\t\t\treturn new List();\n\t\t\tcase \"hash\":\n\t\t\t\treturn new Hash();\n\t\t\tcase \"set\":\n\t\t\t\treturn new Set();\n\t\t\tcase \"zset\":\n\t\t\t\treturn new ZSet();\n\t\t\tdefault:\n\t\t\t\tnotification.error({ message: `Unsupported type ${type}` });\n\t\t\t\treturn new Empty();\n\t\t}\n\t}\n\n\tselect(serverName: string, type: string, key: string, ...args: any[]) {\n\t\treturn this.do(serverName, key, this.check(type).select(key, ...args));\n\t}\n\n\tupdate(serverName: string, type: string, key: string, value: string) {\n\t\treturn this.do(serverName, key, this.check(type).update(key, value));\n\t}\n\n\tinsert(serverName: string, type: string, key: string, value: string) {\n\t\treturn this.do(serverName, key, this.check(type).insert(key, value));\n\t}\n\n\tdelete(serverName: string, type: string, key: string) {\n\t\treturn this.do(serverName, key, this.check(type).delete(key));\n\t}\n\n\tlen(serverName: string, type: string, key: string) {\n\t\treturn this.do(serverName, key, this.check(type).len(key));\n\t}\n\n\tttl(serverName: string, key: string) {\n\t\treturn this.do(serverName, key, [\"TTL\", key]);\n\t}\n\n\trename(serverName: string, key: string, newKey: string) {\n\t\treturn this.do(serverName, key, [\"RENAME\", key, newKey]);\n\t}\n\n\texpire(serverName: string, key: string, seconds: number) {\n\t\treturn this.do(serverName, key, [\"EXPIRE\", key, seconds]);\n\t}\n\n\tasync doPipe(serverName: string, key: string, cmd: any[][]) {\n\t\treturn await Command.doPipe(serverName, key, cmd);\n\t}\n\n\tasync do(serverName: string, key: string, cmd: any[]) {\n\t\treturn await Command.do(serverName, key, cmd);\n\t}\n}\n\nclass RString {\n\tselect(key: string) {\n\t\treturn [\"GET\", key];\n\t}\n\tupdate(key: string, value: string) {\n\t\treturn [\"SET\", key, value];\n\t}\n\tinsert(key: string, value: string) {\n\t\treturn [\"SET\", key, value];\n\t}\n\tdelete(key: string) {\n\t\treturn [\"DEL\", key];\n\t}\n}\nclass List {\n\tlen(key: string) {\n\t\treturn [\"LLEN\", key];\n\t}\n\n\tselect(key: string, page: number, size: number) {\n\t\tlet skip = (page - 1) * size;\n\t\treturn [\"LRANGE\", key, skip, size - 1];\n\t}\n}\nclass Hash {\n\tselect() {}\n}\nclass Set {\n\tselect() {}\n}\nclass ZSet {\n\tselect() {}\n}\nclass Empty {\n\tselect() {}\n}\n\nexport default new Transform();\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./string.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\tserverName: string;\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class String extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.serverName = this.props.serverName;\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.serverName, this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = { key: \"\", value: \"\", rename: false, view: \"显示格式\" };\n\n\tserverName = \"\";\n\ttype = \"\";\n\tvalue = \"\";\n\tkey = \"\";\n\tttl = -1;\n\n\tasync select(serverName: string, type: string, key: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet value = await Transform.select(serverName, type, key);\n\t\tthis.value = value;\n\t\tlet ttl = await Transform.ttl(serverName, key);\n\t\tthis.ttl = ttl;\n\t\tthis.setState({ key: key, value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"string\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.serverName, this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.save()}>\n\t\t\t\t\t\t\t保存\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\tasync save() {\n\t\tlet r = await Transform.update(this.serverName, this.type, this.key, this.state.value);\n\t\tif (!r) return;\n\t\tthis.value = this.state.value;\n\t\tmessage.success(\"保存成功\");\n\t}\n\tchangeView(view: string): void {\n\t\tif (view === \"json\") {\n\t\t\tthis.setState({ view: view, value: JSON.stringify(JSON.parse(this.state.value), null, 4) });\n\t\t}\n\t}\n\n\tasync insert(serverName: string, type: string, key: string, value: string) {\n\t\treturn await Transform.insert(serverName, type, key, value);\n\t}\n\n\tasync delete(serverName: string, type: string, key: string) {\n\t\treturn await Transform.delete(serverName, type, key);\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.delete(this.serverName, this.type, this.state.key);\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(this.serverName, oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.serverName, this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ value: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport Event from \"../../../event/Event\";\nimport Transform from \"../../../transform/Transform\";\nimport \"./list.scss\";\nimport { Input, Button, Select, Modal, Popconfirm, message } from \"antd\";\nimport { QuestionCircleOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport Panel from \"../Panel\";\nimport { List as VList, AutoSizer } from \"react-virtualized\";\n\nconst { TextArea } = Input;\n\nconst Option = Select.Option;\n\ntype Props = {\n\tserverName: string;\n\ttype: string;\n\tkeys: string;\n\tparent: Panel;\n};\n\nexport default class List extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.serverName = this.props.serverName;\n\t\tthis.type = this.props.type;\n\t\tthis.key = this.props.keys;\n\t\tthis.parent = this.props.parent;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.select(this.serverName, this.type, this.key);\n\t}\n\n\tcomponentWillUnmount() {}\n\n\tparent: Panel;\n\tstate = { key: \"\", value: \"\", list: [] as any[], rename: false, view: \"显示格式\" };\n\n\tserverName = \"\";\n\ttype = \"\";\n\tvalue = \"\";\n\tkey = \"\";\n\tttl = -1;\n\tpage = 1;\n\tsize = 100;\n\tlen = 0;\n\n\tasync select(serverName: string, type: string, key: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.type = type;\n\t\tthis.key = key;\n\t\tlet len = await Transform.len(serverName, type, key);\n\t\tthis.len = len;\n\t\tlet ttl = await Transform.ttl(serverName, key);\n\t\tthis.ttl = ttl;\n\t\tlet listArray = await Transform.select(serverName, type, key, this.page, this.size);\n\n\t\tlet { list } = this.state;\n\t\tfor (let i = 0; i < listArray.length; i++) {\n\t\t\tlist.push({ value: listArray[i], select: false });\n\t\t}\n\n\t\tthis.setState({ key, list });\n\t}\n\n\tvlist: React.RefObject<VList> = React.createRef();\n\n\trenderItem = (value: any) => {\n\t\tif (this.state.list[value.index].select) {\n\t\t\tvalue.style = Object.assign({ background: \"rgb(186, 231, 225)\" }, value.style);\n\t\t}\n\t\treturn (\n\t\t\t<div key={value.index} style={value.style} className=\"list-item\" onClick={el => this.selectItem(el, value)}>\n\t\t\t\t<div className=\"key\">{value.index + 1}</div>\n\t\t\t\t<div className=\"value\">{this.state.list[value.index].value}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tselectIndex = 0;\n\n\tselectItem(el: React.MouseEvent<HTMLDivElement, MouseEvent>, value: any) {\n\t\tlet { list } = this.state;\n\t\tlist[this.selectIndex].select = false;\n\n\t\tthis.selectIndex = value.index;\n\t\tlist[value.index].select = true;\n\n\t\tthis.setState({ list, value: list[value.index].value });\n\t\tthis.vlist.current?.forceUpdateGrid();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"list\">\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={this.state.rename}\n\t\t\t\t\tmaskClosable={false}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tonOk={() => this.renameKey()}\n\t\t\t\t\tonCancel={() => this.closeRename()}\n\t\t\t\t\twidth={300}\n\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t></Input>\n\t\t\t\t</Modal>\n\n\t\t\t\t<div className=\"top\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\taddonBefore={this.type.toUpperCase()}\n\t\t\t\t\t\t\taddonAfter={`TTL: ${this.ttl} SIZE: ${this.len}`}\n\t\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.openRename()}>\n\t\t\t\t\t\t\t重命名\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.select(this.serverName, this.type, this.state.key)}>\n\t\t\t\t\t\t\t刷新\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\ttitle={`确定要删除 ${this.key} 吗?`}\n\t\t\t\t\t\t\tonConfirm={() => this.deleteKey()}\n\t\t\t\t\t\t\tokText=\"确定\"\n\t\t\t\t\t\t\tcancelText=\"取消\"\n\t\t\t\t\t\t\ticon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button type=\"dashed\" danger>\n\t\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={this.state.view}\n\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t\tonSelect={value => this.changeView(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option key=\"plain/text\" value=\"plain/text\">\n\t\t\t\t\t\t\t\tplain/text\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t<Option key=\"json\" value=\"json\">\n\t\t\t\t\t\t\t\tjson\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t{this.state.list.length > 0 ? (\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t\t\t\t\t<VList\n\t\t\t\t\t\t\t\t\t\tref={this.vlist}\n\t\t\t\t\t\t\t\t\t\t// className={styles.List}\n\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\toverscanRowCount={20}\n\t\t\t\t\t\t\t\t\t\t// noRowsRenderer={this._noRowsRenderer}\n\t\t\t\t\t\t\t\t\t\trowCount={this.size}\n\t\t\t\t\t\t\t\t\t\trowHeight={height / 20}\n\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderItem}\n\t\t\t\t\t\t\t\t\t\tscrollToIndex={this.selectIndex}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={value => this.onChange(value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<Button onClick={this.prevPage}>\n\t\t\t\t\t\t\t\t<LeftOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={this.nextPage}>\n\t\t\t\t\t\t\t\t<RightOutlined />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tdefaultValue={this.page}\n\t\t\t\t\t\t\t\tonChange={value => (this.page = parseInt(value.target.value))}\n\t\t\t\t\t\t\t></Input>\n\t\t\t\t\t\t\t<Button onClick={this.go}>GO</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.save()}>\n\t\t\t\t\t\t\t\t保存\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprevPage = () => {};\n\tnextPage = () => {};\n\tgo = () => {};\n\n\tasync save() {\n\t\tlet r = await Transform.update(this.serverName, this.type, this.key, this.state.value);\n\t\tif (!r) return;\n\t\tthis.value = this.state.value;\n\t\tmessage.success(\"保存成功\");\n\t}\n\n\tchangeView(view: string): void {\n\t\tif (view === \"json\") {\n\t\t\tthis.setState({ view: view, value: JSON.stringify(JSON.parse(this.state.value), null, 4) });\n\t\t}\n\t}\n\n\tasync insert(serverName: string, type: string, key: string, value: string) {\n\t\treturn await Transform.insert(serverName, type, key, value);\n\t}\n\n\tasync delete(serverName: string, type: string, key: string) {\n\t\treturn await Transform.delete(serverName, type, key);\n\t}\n\n\tasync deleteKey() {\n\t\tvar r = await Transform.delete(this.serverName, this.type, this.state.key);\n\t\tif (!r) return;\n\t\tEvent.emit(\"deleteKey\", this.key);\n\t\tthis.parent.remove(this.key);\n\t}\n\n\tasync renameKey() {\n\t\tlet oldKey = this.key;\n\t\tlet newKey = this.state.key;\n\t\tthis.key = this.state.key;\n\t\tvar r = await Transform.rename(this.serverName, oldKey, newKey);\n\t\tif (!r) return this.closeRename();\n\t\tEvent.emit(\"insertKey\", newKey);\n\t\tEvent.emit(\"deleteKey\", oldKey);\n\t\tthis.closeRename();\n\t\tthis.parent.update(this.serverName, this.type, oldKey, newKey);\n\t}\n\n\tcloseRename(): void {\n\t\tthis.setState({ rename: false });\n\t}\n\n\topenRename(): void {\n\t\tthis.setState({ rename: true });\n\t}\n\n\tonChange(value: string): void {\n\t\tthis.setState({ value: value });\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./panel.scss\";\nimport Event from \"../../event/Event\";\nimport String from \"./data/String\";\nimport List from \"./data/List\";\nimport { Tabs } from \"antd\";\nconst { TabPane } = Tabs;\nexport default class Panel extends Component {\n\tstate = { activeKey: \"\", panes: [] as any[] };\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tEvent.add(\"selectKey\", (serverName: string, type: string, key: string) => {\n\t\t\tif (this.state.panes.find(v => v.key === key)) {\n\t\t\t\tthis.setState({ activeKey: key });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { panes } = this.state;\n\n\t\t\tlet component = this.createComponent(serverName, type, key);\n\n\t\t\tpanes.push({ title: key, content: component, key: key });\n\n\t\t\tif (panes.length > 3) panes.shift();\n\n\t\t\tthis.setState({ panes: panes, activeKey: key });\n\t\t});\n\t}\n\n\tcreateComponent(serverName: string, type: string, key: string) {\n\t\tlet component = null;\n\n\t\tswitch (type) {\n\t\t\tcase \"string\":\n\t\t\t\tcomponent = this.createString(serverName, type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"list\":\n\t\t\t\tcomponent = this.createList(serverName, type, key);\n\t\t\t\tbreak;\n\t\t\tcase \"hash\":\n\t\t\t\tbreak;\n\t\t\tcase \"zset\":\n\t\t\t\tbreak;\n\t\t\tcase \"set\":\n\t\t\t\tbreak;\n\t\t}\n\t\treturn component;\n\t}\n\n\tcreateString(serverName: string, type: string, key: string) {\n\t\treturn <String parent={this} serverName={serverName} type={type} keys={key}></String>;\n\t}\n\n\tcreateList(serverName: string, type: string, key: string) {\n\t\treturn <List parent={this} serverName={serverName} type={type} keys={key}></List>;\n\t}\n\n\tcomponentDidMount() {}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"selectKey\");\n\t}\n\n\tonChange = (activeKey: any) => {\n\t\tthis.setState({ activeKey });\n\t};\n\n\tonEdit = (targetKey: any, action: string | number) => {\n\t\tif (action === \"add\") {\n\t\t\tthis.add();\n\t\t} else {\n\t\t\tthis.remove(targetKey);\n\t\t}\n\t};\n\n\tupdate(serverName: string, type: string, oldKey: string, newKey: string) {\n\t\tfor (let i = 0; i < this.state.panes.length; i++) {\n\t\t\tconst element = this.state.panes[i];\n\t\t\tif (element.key === oldKey) {\n\t\t\t\telement.title = newKey;\n\t\t\t\telement.key = newKey;\n\t\t\t\telement.content = this.createComponent(serverName, type, newKey);\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes: this.state.panes, activeKey: newKey });\n\t}\n\n\tadd = () => {};\n\n\tremove = (targetKey: string) => {\n\t\tlet activeKey = this.state.activeKey;\n\t\tlet lastIndex: any;\n\t\tthis.state.panes.forEach((pane: { key: string }, i: number) => {\n\t\t\tif (pane.key === targetKey) {\n\t\t\t\tlastIndex = i - 1;\n\t\t\t}\n\t\t});\n\t\tconst panes = this.state.panes.filter((pane: { key: string }) => pane.key !== targetKey);\n\t\tif (panes.length && activeKey === targetKey) {\n\t\t\tif (lastIndex >= 0) {\n\t\t\t\tactiveKey = panes[lastIndex].key;\n\t\t\t} else {\n\t\t\t\tactiveKey = panes[0].key;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ panes, activeKey });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<Tabs\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tactiveKey={this.state.activeKey}\n\t\t\t\t\ttype=\"editable-card\"\n\t\t\t\t\tonEdit={this.onEdit}\n\t\t\t\t\thideAdd\n\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t\t\ttabBarStyle={{ margin: 0, minWidth: \"200px\" }}\n\t\t\t\t\tdestroyInactiveTabPane={true}\n\t\t\t\t\tanimated={false}\n\t\t\t\t\ttabBarGutter={0}\n\t\t\t\t>\n\t\t\t\t\t{this.state.panes.map(\n\t\t\t\t\t\t(pane: {\n\t\t\t\t\t\t\ttitle: React.ReactNode;\n\t\t\t\t\t\t\tkey: string | undefined;\n\t\t\t\t\t\t\tclosable: boolean | undefined;\n\t\t\t\t\t\t\tcontent: React.ReactNode;\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<TabPane\n\t\t\t\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n\t\t\t\t\t\t\t\ttab={pane.title}\n\t\t\t\t\t\t\t\tkey={pane.key}\n\t\t\t\t\t\t\t\tclosable={pane.closable}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{pane.content}\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Drawer, Button, Modal } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./serverList.scss\";\nimport Config from \"../config/Config\";\nimport Command from \"../../services/Command\";\n\nexport default class ServerList extends Component {\n\tstate = { visible: false, modal: false, header: this.createHeader() };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openServerList\", () => this.onOpen());\n\t\tEvent.add(\"addServer\", () => this.setState({ header: this.createHeader() }));\n\t\tEvent.add(\"updateServer\", () => this.setState({ header: this.createHeader() }));\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openServerList\");\n\t}\n\n\tcreateHeader() {\n\t\tlet data = [];\n\t\tlet config = Config.all();\n\t\tfor (const serverName in config) {\n\t\t\tdata.push(\n\t\t\t\t<div className=\"db-header\" key={serverName}>\n\t\t\t\t\t<div>{serverName}</div>\n\t\t\t\t\t<div className=\"button\">\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.connect(serverName)}>\n\t\t\t\t\t\t\t连接\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => this.update(serverName)}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.disconnect(serverName)}>\n\t\t\t\t\t\t\t断开\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => this.delete(serverName)}>\n\t\t\t\t\t\t\t删除\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn data;\n\t}\n\n\tupdate(serverName: string) {\n\t\tEvent.emit(\"update\", serverName);\n\t}\n\n\tserverName = \"\";\n\tconnect(serverName: string) {\n\t\tthis.serverName = serverName;\n\t\tthis.onChooseOpen();\n\t}\n\n\tdisconnect(serverName: string) {\n\t\tthis.onClose();\n\t\tEvent.emit(\"disconnect\", serverName);\n\t\tCommand.disconnect(serverName);\n\t}\n\n\tdelete(serverName: string) {\n\t\tModal.confirm({\n\t\t\ttitle: `确定要删除 ${serverName} 的配置吗`,\n\t\t\tokText: \"确认\",\n\t\t\tcancelText: \"取消\",\n\t\t\tonOk: () => {\n\t\t\t\tConfig.delete(serverName);\n\t\t\t\tthis.setState({ header: this.createHeader() });\n\t\t\t\tEvent.emit(\"delete\", serverName);\n\t\t\t}\n\t\t});\n\t}\n\n\tonChooseClose() {\n\t\tthis.setState({ modal: false });\n\t}\n\n\tonChooseOpen() {\n\t\tthis.setState({ modal: true });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer\n\t\t\t\ttitle=\"服务器列表\"\n\t\t\t\tplacement=\"right\"\n\t\t\t\tclosable={false}\n\t\t\t\tonClose={() => this.onClose()}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tgetContainer={false}\n\t\t\t\twidth={\"30%\"}\n\t\t\t\tclassName=\"server-list\"\n\t\t\t\tdestroyOnClose\n\t\t\t>\n\t\t\t\t{this.state.header}\n\t\t\t\t<Modal\n\t\t\t\t\tdestroyOnClose\n\t\t\t\t\ttitle={`选择连接方式`}\n\t\t\t\t\tvisible={this.state.modal}\n\t\t\t\t\tclassName=\"choose-server\"\n\t\t\t\t\tonCancel={() => this.onChooseClose()}\n\t\t\t\t\tclosable={true}\n\t\t\t\t\tmaskClosable={true}\n\t\t\t\t\tfooter={null}\n\t\t\t\t>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"normal\")}>\n\t\t\t\t\t\tNormal\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.choose(\"cluster\")}>\n\t\t\t\t\t\tCluster\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal>\n\t\t\t</Drawer>\n\t\t);\n\t}\n\n\tchoose(type: string): void {\n\t\tEvent.emit(\"connect\", type, this.serverName);\n\t\tthis.onChooseClose();\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport Event from \"../../event/Event\";\nimport { Radio, Input, Button, message } from \"antd\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\nimport \"./updateServer.scss\";\nimport Command from \"../../services/Command\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\nimport Tools from \"../../tools/Tools\";\nimport Layer from \"../layer/Layer\";\n\nexport default class UpdateServer extends Component {\n\tstate = { visible: false, config: {} as config, type: \"normal\", clusterHostInput: null };\n\n\tonOpen() {\n\t\tthis.setState({ visible: true });\n\t}\n\n\tonClose() {\n\t\tthis.setState({ visible: false, clusterHostInput: null });\n\t}\n\n\tserverName = \"\";\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"openUpdateServer\", serverName => {\n\t\t\tthis.serverName = serverName;\n\t\t\tlet config = Config.get(serverName);\n\t\t\tif (!config.cluster) config.cluster = [];\n\t\t\tthis.setState({ config: config }, () => this.setState({ clusterHostInput: this.createCluster() }));\n\t\t\tthis.onOpen();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"openUpdateServer\");\n\t}\n\n\tonChange(type: string, value: string) {\n\t\t(this.state.config as any)[type] = value;\n\t\tthis.setState({ config: this.state.config, clusterHostInput: this.createCluster() });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`修改 ${this.state.config.name} 配置`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"update-server\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<Radio.Group value={this.state.type} onChange={value => this.setState({ type: value.target.value })}>\n\t\t\t\t\t<Radio.Button value=\"normal\">Default</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"cluster\">Cluster</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t\t<div className=\"normal-form\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Name\"\n\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\tvalue={this.state.config.name}\n\t\t\t\t\t\tonChange={value => this.onChange(\"name\", value.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Host\"\n\t\t\t\t\t\t\tplaceholder=\"127.0.0.1\"\n\t\t\t\t\t\t\tvalue={this.state.config.host}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"host\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"add-input-box\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<Button type=\"dashed\" onClick={() => this.addHost()}>\n\t\t\t\t\t\t\t\t\tHOST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input\">{this.state.clusterHostInput}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.type === \"normal\" ? (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Port\"\n\t\t\t\t\t\t\tplaceholder=\"6379\"\n\t\t\t\t\t\t\tvalue={this.state.config.port}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"port\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\taddonBefore=\"Master\"\n\t\t\t\t\t\t\tplaceholder=\"master\"\n\t\t\t\t\t\t\tvalue={this.state.config.master}\n\t\t\t\t\t\t\tonChange={value => this.onChange(\"master\", value.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Pass\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tvalue={this.state.config.password}\n\t\t\t\t\t\tonChange={value => this.onChange(\"password\", value.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.submit()}>\n\t\t\t\t\t\t\t修改\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => this.test()}>\n\t\t\t\t\t\t\t测试\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\n\tcreateCluster() {\n\t\tlet cluster = this.state.config.cluster.map((v, i) => (\n\t\t\t<Input\n\t\t\t\tspellCheck={false}\n\t\t\t\tkey={i}\n\t\t\t\taddonAfter={<MinusCircleOutlined onClick={() => this.removeHost(i)} />}\n\t\t\t\tclassName=\"package-input\"\n\t\t\t\tplaceholder=\"127.0.0.1:16379\"\n\t\t\t\tvalue={this.state.config.cluster[i]}\n\t\t\t\tonChange={value => {\n\t\t\t\t\tlet cfg = this.state.config;\n\t\t\t\t\tcfg.cluster[i] = value.target.value;\n\t\t\t\t\tthis.setState({ config: cfg, clusterHostInput: this.createCluster() });\n\t\t\t\t}}\n\t\t\t/>\n\t\t));\n\t\treturn cluster;\n\t}\n\n\tremoveHost(i: number): void {\n\t\tthis.state.config.cluster.splice(i, 1);\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\taddHost(): void {\n\t\tthis.state.config.cluster.push(\"\");\n\t\tthis.setState({ clusterHostInput: this.createCluster() });\n\t}\n\n\tasync test() {\n\t\tthis.state.config.cluster = this.state.config.cluster.filter(v => v !== \"\");\n\t\tLayer.load();\n\t\tlet response = await Command.register(this.state.type, this.state.config);\n\t\tLayer.close();\n\t\treturn Tools.Notification(response, \"连接成功\");\n\t}\n\n\tsubmit() {\n\t\tConfig.delete(this.serverName);\n\t\tlet cfg = this.state.config;\n\t\tcfg.cluster = cfg.cluster.filter(v => v !== \"\");\n\t\tConfig.set(this.state.config.name, this.state.config);\n\t\tmessage.success(\"修改成功\");\n\t\tthis.onClose();\n\t\tEvent.emit(\"updateServer\");\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport \"./progress.scss\";\nimport Event from \"../../event/Event\";\n\nexport default class MProgress extends Component {\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"progress\");\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"progress\", v => this.progress(v));\n\t}\n\n\tprogress(v: number) {\n\t\tif (v === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ progress: v });\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tthis.setState({ progress: v });\n\t\t}\n\t}\n\n\tstate = { progress: 100 };\n\n\trender() {\n\t\treturn (\n\t\t\t<Progress\n\t\t\t\tstrokeColor={{\n\t\t\t\t\t\"0%\": \"#108ee9\",\n\t\t\t\t\t\"100%\": \"#87d068\"\n\t\t\t\t}}\n\t\t\t\tstyle={{ width: \"100%\", height: \"1px\" }}\n\t\t\t\tshowInfo={false}\n\t\t\t\tstrokeWidth={3}\n\t\t\t\tpercent={this.state.progress}\n\t\t\t\tclassName=\"progress\"\n\t\t\t/>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Radio, Input, Button, Modal, message } from \"antd\";\nimport Event from \"../../event/Event\";\nimport \"./addKey.scss\";\nimport Transform from \"../../transform/Transform\";\nimport Config from \"../config/Config\";\nimport { config } from \"../../interface/config\";\n\nexport default class AddKey extends Component {\n\tstate = { visible: false, keyType: \"string\", key: \"\", value: \"\" };\n\n\tonClose() {\n\t\tthis.setState({ visible: false });\n\t}\n\n\tonOpen() {\n\t\tthis.config = Config.getCurrent();\n\t\tif (this.config.name === \"\") {\n\t\t\tmessage.error(\"请连接服务器!\");\n\t\t\treturn this.onClose();\n\t\t}\n\t\tthis.setState({ visible: true });\n\t}\n\n\tcomponentDidMount() {\n\t\tEvent.add(\"addKey\", () => this.onOpen());\n\t}\n\n\tcomponentWillUnmount() {\n\t\tEvent.remove(\"addKey\");\n\t}\n\n\tconfig: config = {} as config;\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tdestroyOnClose\n\t\t\t\ttitle={`添加KEY`}\n\t\t\t\tvisible={this.state.visible}\n\t\t\t\tclassName=\"add-key\"\n\t\t\t\tclosable={false}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div className=\"select-box\">\n\t\t\t\t\t<Radio.Group\n\t\t\t\t\t\tvalue={this.state.keyType}\n\t\t\t\t\t\tonChange={value => this.setState({ keyType: value.target.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Radio.Button value=\"string\">string</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"list\">list</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"hash\">hash</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"set\">set</Radio.Button>\n\t\t\t\t\t\t<Radio.Button value=\"zset\">zset</Radio.Button>\n\t\t\t\t\t</Radio.Group>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"input-box\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"KEY\"\n\t\t\t\t\t\tplaceholder=\"key\"\n\t\t\t\t\t\tvalue={this.state.key}\n\t\t\t\t\t\tonChange={value => this.setState({ key: value.target.value })}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Input\n\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\taddonBefore=\"Value\"\n\t\t\t\t\t\tplaceholder=\"value\"\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={value => this.setState({ value: value.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t<Button type=\"primary\" onClick={() => this.add()}>\n\t\t\t\t\t\t确定\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button type=\"default\" onClick={() => this.onClose()}>\n\t\t\t\t\t\t取消\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n\tasync add() {\n\t\tif (this.state.key === \"\") {\n\t\t\tmessage.error(\"KEY不能为空!\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.state.value === \"\") {\n\t\t\tmessage.error(\"VALUE不能为空!\");\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (this.state.keyType) {\n\t\t\tcase \"string\":\n\t\t\t\tlet r = await Transform.insert(this.config.name, this.state.keyType, this.state.key, this.state.value);\n\t\t\t\tif (!r) return;\n\t\t\t\tmessage.success(\"添加成功!\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage.error(\"不支持的类型!\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tEvent.emit(\"insertKey\", this.state.key);\n\n\t\tthis.onClose();\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport Header from \"../../components/header/Header\";\nimport AddServer from \"../../components/addServer/AddServer\";\nimport KeyTree from \"../../components/keyTree/KeyTree\";\nimport Panel from \"../../components/panel/Panel\";\nimport ServerList from \"../../components/serverList/ServerList\";\nimport UpdateServer from \"../../components/updateServer/UpdateServer\";\nimport MProgress from \"../../components/progress/Progress\";\nimport AddKey from \"../../components/addKey/AddKey\";\n\nclass Index extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"index\">\n\t\t\t\t<AddKey></AddKey>\n\t\t\t\t<AddServer></AddServer>\n\t\t\t\t<ServerList></ServerList>\n\t\t\t\t<UpdateServer></UpdateServer>\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<Header></Header>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<KeyTree></KeyTree>\n\t\t\t\t\t<Panel></Panel>\n\t\t\t\t</div>\n\t\t\t\t<MProgress></MProgress>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Index;\n","import React from \"react\";\nimport \"./login.scss\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nfunction Login() {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<LoadingOutlined style={{ fontSize: \"2rem\" }}></LoadingOutlined>\n\t\t\t\t\t<div className=\"tips\">正在准备...</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory, History, UnregisterCallback, Location } from \"history\";\nimport \"./App.scss\";\nimport Index from \"./pages/index/Index\";\nimport Login from \"./pages/login/Login\";\nimport WebSocket from \"./ws/WebSocket\";\n\nexport default class App extends Component {\n\tunlisten!: UnregisterCallback;\n\n\tchange(location: Location<History.PoorMansUnknown>) {\n\t\tconsole.log(location.hash);\n\t\tif (!localStorage.getItem(\"status\")) return (window.location.hash = \"/login\");\n\t\tif (location.hash === \"#/login\") return (window.location.hash = \"/index\");\n\t}\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tWebSocket.start();\n\t}\n\n\tcomponentDidMount() {\n\t\tconst history = createBrowserHistory();\n\t\t// Get the current location.\n\t\tconst location = history.location;\n\n\t\tthis.change(location);\n\n\t\t// Listen for changes to the current location.\n\t\tthis.unlisten = history.listen((location, action) => {\n\t\t\t// location is an object like window.location\n\t\t\tthis.change(location);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tWebSocket.close();\n\t\tthis.unlisten();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<HashRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/index\" component={Index} />\n\t\t\t\t\t<Route path=\"/login\" component={Login} exact />\n\t\t\t\t\t<Redirect from=\"**\" to=\"/index\" />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { message, notification } from \"antd\";\n\nAxios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\nAxios.defaults.baseURL = \"http://127.0.0.1:12388\";\n\nAxios.defaults.timeout = 5000;\n\nAxios.interceptors.response.use(\n\tresponse => {\n\t\treturn response;\n\t},\n\terror => {\n\t\treturn error;\n\t}\n);\n\nmessage.config({ maxCount: 3 });\n\nnotification.config({ duration: 2, placement: \"bottomRight\" });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}